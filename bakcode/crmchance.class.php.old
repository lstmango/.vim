<?php
use com\zhubajie\boss\dataobject\bschance\DEALSTATUS;
/**
 * 
 * @author tanqing
 * @date 2015-7-9
 * @email itanqing@gmail.com
 */
class service_crmchance extends components_baseservice{
	
	
	public function __construct(){
		
	}
	
	public static function getIndustry($type = 0){
		$result = array(
				10000463=>'标志设计',
				10000464=>'网店推广',
				10000465=>'宣传品设计',
				10000466=>'网站开发',
				10000467=>'APP开发',
				10000468=>'网络营销',
				10000469=>'文案写作',
				10000470=>'照片变漫画',
				10000471=>'帮取名字',
				10000472=>'其他',
		);
		if ($type && $result[$type]) {
			return $result[$type];
		}
		return $result;
	}
	
	/**
	 * @author tanqing
	 * @date 2015-7-9
	 * @param unknown $source
	 */
	public  static function getSource($source =0 ){
	    static $result=null;
	    if($result){
	        if ($result[$source]) {
	            return $result[$source];
	        }
	        return $result;
	    }
	    $key='boss.crmchance.source';
	    $s_cache=new zbj_lib_cache('memcache');
	    $result=$s_cache->get($key);
	    if(!$result){
		        lib_BaseUtils::apiInit();
		        $s_WayTypeService=new com\zhubajie\union\interfaces\WayTypeServiceClient(null);
		        lib_BaseUtils::apigetclient($s_WayTypeService);
		        $result=$s_WayTypeService->getWayTypeList();
	        $s_cache->set($key, $result, time() + 86400);
	    }
		if ($result[$source]) {
			return $result[$source];
		}
		return $result;
	}
	
	/**
	 * 状态
	 * @author tanqing
	 * @date 2015-7-9
	 * @param number $status
	 * @return Ambigous <string>|multitype:string
	 */
	public static function getStatus($status = 0){
		lib_BaseUtils::apiInit();
		$result = array(
                DEALSTATUS::NOTALLOT=>'未分配',
				DEALSTATUS::WAITDEAL=>'待受理',
				DEALSTATUS::DEALING=>'跟进中',
				DEALSTATUS::ORDERED=>'已转化 ',
				DEALSTATUS::GIVEUP=>'已放弃',
		);
		if ($result[$status]) {
			return $result[$status];
		}
		return $result;
	} 
	
	public static function getSex($sex= null){
	    lib_BaseUtils::apiInit();
	    $result =  array(
	        com\zhubajie\boss\dataobject\bschance\SEX::MALE => '男',
	        com\zhubajie\boss\dataobject\bschance\SEX::FEMALE => '女',
	        com\zhubajie\boss\dataobject\bschance\SEX::SEX_DEFAULT => '未知',
	    );
	    if (!is_null($sex)){
	        if(isset($result[$sex])){
	            return $result[$sex];
	        }
	        return '';
	    }
	    return $result;
	}
	/**
	 * 操作日志类型[最后添加]
	 * @author tanqing
	 * @date 2015年7月20日
	 */
	public static function getLogStatus($status = null){
	     //0默认 1创建  2分配 3跟进  4创建订单  5备注
	     $result = array(
	         //0=>'默认',
	         1=>'创建',
	         2=>'分配',
	         3=>'跟进',
	         4=>'创建订单',
	     );
	     if (!is_null($status)){
	         if (isset($result[$status])){
	             return $result[$status];
	         }
	         return '';
	     }
	     return $result;
	}
	/**
	 * 62 商机跟进分类
	 * 63 商机放弃分类
	 * 
	 * @author tanqing
	 * @date 2015年7月20日
	 */
	public function getOptions($option_id = 62){
	   try {
	       $cache = new zbj_lib_cache('memcache');
	       $cache_name = 'boss.crmchance.options';
	       $result = $cache->get($cache_name);
	       if (!$result[$option_id]){
    	       
	           $s_option=new service_cpoption($option_id);
	           $options= $s_option->getAllItems();
	           if ($options){
	               foreach ($options as $v){
	                   $tmp[$v['item_id']] = $v['name'];
	               }
	           }
    	       $result[$option_id] = $tmp;
    	       $cache->set($cache_name, $result,3600);
	       }
	       return $result[$option_id];
	   } catch (Exception $e) {
	       $this->setError(0, $e->getMessage());
	       return false;
	   } 
	}
	/**
	 * 日志类型
	 * 
	 * @author tanqing
	 * @date 2015年7月21日
	 * @return number
	 */
	public static function getLogType(){
	    lib_BaseUtils::apiInit();
	    return com\zhubajie\boss\dataobject\bosslog\logProduct::BSCHANCE;
	}
	/**
	 * 下次跟进时间计算
	 * @author tanqing
	 * @date 2015年7月22日
	 * @return number
	 */
	public function getFollowTime(){
	    // 对5点半以后分配的机会，跟进时间从第二天开始算
	    if (time()  > strtotime ( date('Y-m-d 17:30'))) {
	        $base_time = strtotime ( date ( 'Y-m-d 18:00', strtotime ( '+1 days' ) ) );
	    } else {
	        $base_time = strtotime(date("Y-m-d 18:00:00"));
	    }
	    if (in_array ( date ( 'w', time() ), array (6,0) )) {
			$base_time  = strtotime(date("Y-m-d 18:00:00",strtotime('next monday')));
		}
		return $base_time;
	}
	/**
	 * 判断能否操作
	 * 
	 * @author tanqing
	 * @date 2015年7月23日
	 * @param unknown $bs_to_ct_id
	 * @return boolean
	 */
	public function checkDoAction($bs_to_ct_id){
	    lib_BaseUtils::apiInit();
	    $bschanceClient = new com\zhubajie\boss\interfaces\bschanceServiceClient(null);
	    lib_BaseUtils::apigetclient($bschanceClient);
	    $businessFilter = new com\zhubajie\boss\dataobject\bschance\BusinessFilter();
	    $businessFilter->bs_to_ct_id = $bs_to_ct_id;
		$businessFilter->no_cache=1;
	    $res = $bschanceClient->GetBussinessContactor($businessFilter);
	    if ($res){
	        $bschanceinfo =$res->data_obj->items[0];
	        if ($bschanceinfo['is_giveup']){
	            $this->setError(0,'已放弃');
	            return false;
	        }
	    }
	    return true;
	}
	
	/**
	 * 相同手机号分配规则
	 * 
	 * @author tanqing
	 * @date 2015年7月23日
	 * @param unknown $phone
	 * @return boolean|multitype:
	 */
	public function getFollowUserByPhone($phone){
		$timeout = 10;
		$sdk_lib=array('zbj_sdk','zbj_boss_sdk', 'ub-client');
		zbj_lib_ApiClient::init(zbj_lib_Constant::ZBJAPI_APPID,zbj_lib_Constant::ZBJAPI_APPSECRET,$timeout,$sdk_lib);
	    $bschanceClient = new com\zhubajie\boss\interfaces\bschanceServiceClient(null);
		zbj_lib_ApiClient::build ( $bschanceClient );

	    //lib_BaseUtils::apiInit();
	    //$bschanceClient = new com\zhubajie\boss\interfaces\bschanceServiceClient(null);
	    //lib_BaseUtils::apigetclient($bschanceClient);
	    $searchPhoneResult = $bschanceClient->getFollowUserByPhone($phone);
	    if (!$searchPhoneResult->success){
	        return false;
	    }
	    if (empty($searchPhoneResult->ext_params['follow_uid'])){
	        return false;
	    }
	    $user = $searchPhoneResult->ext_params['follow_uid'];
	    $s_manager = new service_manager($user);
	    if ($s_manager->isLeaveUser()){
	        return 0;
	    }
	    return $user;
	}

	
	static function __getconfigid($id){
	   switch (intval($id)) {
            case 1282:
            case 1282:
            case 1284:
            case 165:
            case 1145:
            case 1278:
            case 1475:
            case 267:
            case 1470:
            case 857:
            case 1262:
            case 1269:
            case 287:
            case 1270:
            case 1265:
            case 286:
            case 1266:
            case 1421:
            case 1370:
            case 1371:
            case 1372:
            case 196:
            case 1367:
            case 1369:
            case 1365:
            case 195:
            case 1362:
            case 1297:
            case 1295:
            case 180:
            case 1301:
            case 1300:
            case 1298:
            case 1299:
            case 178:
            case 172:
            case 176:
            case 1290:
            case 1288:
            case 1287:
            case 1416:
            //case 1420:
            case 1417:
            case 1413:
            case 1424:
            case 1418:
                return 104;
                break;
            case 1329:
            case 1328:
            case 1327:
            case 319:
            case 1271:
            case 892:
            case 891:
            case 1296:
            case 1294:
            case 1303:
            case 85:
            case 1247:
            case 1245:
            case 1542:
            case 1248:
            case 1538:
            case 1541:
            case 1540:
            case 1539:
            case 1545:
            case 1544:
            case 1546:
            case 1251:
            case 1250:
            case 1249:
            case 1226:
            case 1231:
            case 1229:
            case 1228:
            case 1230:
            case 1537:
            case 1227:
            case 1535:
            case 1225:
            case 1385:
            case 1386:
            case 1384:
            case 1547:
            case 1243:
            case 1244:
                return 105;
                break;
            case 1381:
            case 1375:
            case 1378:
            case 1330:
            case 365:
            case 368:
            case 367:
            case 1333:
            case 1332:
            case 413:
            case 1443:
                return 107;
                break;
            case 1340:
            case 382:
            case 1337:
            case 1331:
            case 1339:
                return 108;
                break;
            case 1430:
            case 1368:
            case 1363:
            case 1004:
            case 1212:
            case 231:
            case 1419:
            case 235:
            case 1423:
            case 1382:
            case 1426:
            case 1429:
            case 1134:
            case 131:
            case 123:
            case 120:
            case 126:
            case 1428:
            case 129:
            case 168:
            case 162:
            case 161:
            case 1431:
            case 177:
            case 170:
            case 1425:
            case 203:
            case 173:
            case 1286:
            case 1448:
                return 109;
                break;
            case 1517:
            case 1465:
            case 1515:
            case 1518:
            case 1512:
            case 1516:
            case 1498:
            case 1513:
            case 1514:
            case 1520:
            case 1519:
            case 1527:
            case 1522:
            case 1525:
            case 493:
            case 1466:
            case 1526:
            case 1524:
            case 1469:
            case 1467:
            case 1523:
            case 1468:
            case 1508:
            case 1507:
            case 1504:
            case 1505:
            case 1510:
            case 348:
            case 1506:
            case 1498:
            case 1493:
            case 1491:
            case 1497:
            case 1496:
            case 1490:
            case 1494:
            case 1498:
            case 1495:
            case 1492:
            case 1502:
            case 1500:
            case 1503:
            case 1501:
            case 350:
                return 110;
                break;
            case 1347:
            case 1349:
                return 111;
                break;
            default:
                return 112;
        }
    }
	/**
	 * 抢机会
	 * @author tanqing
	 * @date 2015-9-14
	 */
    public function grabChance($manager_id){
    	try {
    		$configs = $this->getConfigByManager($manager_id);
    		foreach ($configs as $v){
    		    $s_allot = new zbj_service_allot($v);
    		    $config_managers[$v] = $s_allot->getusers(1);
    		}
    		if (empty($configs)){
    			throw new Exception("您不是交易顾问或未上线，请上线后再抢!(●'◡'●)");
    		}
    		lib_BaseUtils::apiInit();
    		$bschanceClient = new com\zhubajie\boss\interfaces\bschanceServiceClient(null);
    		lib_BaseUtils::apigetclient($bschanceClient);
    		$grabParamsDO = new com\zhubajie\boss\dataobject\bschance\grabParamsDO();
    		//下次根基时间
    		$next_follow_time = $this->getFollowTime();
    		$grabParamsDO->manager_id = $manager_id;
    		$grabParamsDO->is_allot = false;
    		$grabParamsDO->config_ids =$configs;
    		$grabParamsDO->next_follow_time = $next_follow_time;
    		$grabParamsDO->config_managers = $config_managers;
    		$result = $bschanceClient->grabChance($grabParamsDO);
    		if ($result->success) {
    		    $bs_to_ct_id = $result->ext_params['bs_to_ct_id'];
    		    $m_allot_grab = new zbj_model_mk_taskallotgrab();
    		    $m_allot_grab->insert(array('task_id'=>$result->ext_params['bs_to_ct_id'],'status'=>1,'manager_id'=>$manager_id,'type'=>2,'createtime'=>time()));
    		    $s_allot = new zbj_service_allot($result->ext_params['config_id']);
    		    $s_allot->createlog($bs_to_ct_id,$manager_id);
    		    //$s_allot->processed($val['bs_to_ct_id']);
    		    //$s_manager = new service_manager($manager_id);
    		    $log = self::getGrabChanceStatus($result->code);
    		    //.$s_manager->get('name');
    			return array('code'=>$result->code,'msg'=>$log,'bs_to_ct_id'=>$bs_to_ct_id,'config_id'=>$result->ext_params['config_id'],'manager_id'=>$result->ext_params['manager_id']);
    		}else{
    			//
    		    throw new Exception($result->message,$result->code);
    		}
    	} catch (Exception $e) {
    		$this->setError($e->getCode(),$e->getMessage());
    		return false;
    	}
    }
    /**
     * 写入数据
     * @author tanqing
     * @date 2015-9-14
     * @param unknown $id
     * @param unknown $manager_id
     * @return boolean
     */
    private function addAllotGrab($id,$manager_id){
    	$m_taskallotgrab = new zbj_model_mk_taskallotgrab();
    	if (false ===$m_taskallotgrab->insert(array('task_id'=>$id,'manager_id'=>$manager_id,'type'=>2,'status'=>0,'createtime'=>time()))) {
    		return false;
    	}
    	return true;
    }
    /**
     * 抢单成功
     * @author tanqing
     * @date 2015-9-15
     * @param unknown $id
     * @return boolean
     */
    public function grabSuccess($id){
    	$m_taskallotgrab = new zbj_model_mk_taskallotgrab();
    	if (false ===$m_taskallotgrab->update(array('task_id'=>$id,'type'=>2),array('status'=>1))) {
    		return false;
    	}
    	return true;
    }
    /**
     * 抢单失败
     */
    public function grabError($id){
    	$m_taskallotgrab = new zbj_model_mk_taskallotgrab();
    	if (false ===$m_taskallotgrab->delete(array('task_id'=>$id,'type'=>2))) {
    		return false;
    	}
    	return true;
    }
    /**
     * 
     * @author tanqing
     * @date 2015-9-14
     * @param unknown $manager_id
     */
    public function getConfigByManager($manager_id){
    	//$allotConfigs = $this->getConfigIds();
    	$allotConfigs = array(104,105,106,107,108,109,110,111,112); //可抢的机会类型
    	$m_allot = new zbj_model_cp_allot();
    	$condition = array();
    	$condition['manager_id'] = $manager_id;
    	$condition['isonline'] = 1;
    	$allots = $m_allot->select($condition)->items;
    	if($allots){
    		foreach ($allots as $v){
    			$config_ids[] = $v['config_id'];
    		}
    	}
    	$config_ids = is_array($config_ids) ? array_unique($config_ids) : array();
    	$configSorts = array_intersect((array)$allotConfigs, (array)$config_ids);
    	return $config_ids;
    }
    public static function getGrabChanceStatus($status = null){
    	lib_BaseUtils::apiInit();
    	$result = array(
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::SUCCESS=>"恭喜您成功抢到商机订单一枚！(●'◡'●)",
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::NOCHANCE=>"暂时没有合适的订单哦，稍后再来试试吧！(●'◡'●)",
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::SAMEPHONE=>"抢单成功，相同的号码分配给商机顾问(●'◡'●)",
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::MANUAL=>"抢单成功，分配给创建人(●'◡'●)",
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::UNACCEPTCHANCE=>"您现在有待受理商机，赶紧跟进吧！(●'◡'●)",
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::ERROR_FOLLOW=>"绑定顾问失败(●'◡'●)",
    			com\zhubajie\boss\dataobject\bschance\grabChanceStatus::FOLLOWED=>"商机已经分配了顾问(●'◡'●)",
    	);
    	return $result[$status];
    }
}
