<?php
use com\zhubajie\crm\dataobject\Base\DbSelectResultDO;
use com\zhubajie\boss\dataobject\bschance\SEX;
use com\zhubajie\boss\dataobject\bschance\WithDrawType;
class service_bschance_chance extends service_abstract{

	protected $marter_table = 'model_mk_bstoct_contacts';
    private static $PARAM_ERROR = -1;
    private static $LOGIC_ERROR = -2;
	private $startWeights = 0;
	/**
	 * 构造函数
	 */
	public function __construct($id=0) {
		parent::__construct();
		$this->id = $id;
	}
    /**
     * 检测来源和子来源
     * @param unknown $way_id
     * @param unknown $source
     * @return boolean
     */
    public static function checksource($way_id, $source)
    {
        $m_source = zbj_model_api::get('model_mk_bstoct_source', $source);
        if ($m_source->getData('way_type') == $way_id) {
            return true;
        } else {
            return false;
        }
    }
    /**
     * 按照员工维度 返回 提现和未提现的列表
     * @param array $cbIds
     * @param $filter
     * @param int $type 1 提现 2未提现
     * @return array :
     * @throws Exception
     */
    public function getWithDrawList($cbIds,$filter,$type){
//        define("DEBUG",1);
        if(!is_array($cbIds)){
            $cbIds = array((int)$cbIds);
        }
        $cbIds = implode(",", $cbIds);
// 		$this->_time = strtotime("2015-03-11"); //2015-01
        if($filter['year'] && $filter['month'] ){
            $year = (int)$filter['year'];
            $month = (int)$filter['month'];

        }else{
            $year = (int)date("Y",time());
            $month = (int)date("m",time());
        }
        if($month >= 1 && $month <= 12){
            if($filter['month'] <10){
                $timeLimitStart = $year."-0".$month."-01";
            }else{
                $timeLimitStart = $year."-".$month."-01";
            }
            $timeLimitEnd = date("Y-m-d",strtotime("{$timeLimitStart} +1 month -1 day"));
        }else{
            throw new Exception("日期{$month}参数错误",self::$PARAM_ERROR);
        }
        $chanceMdl = new model_cm_chance();
        $contactMdl = new model_cm_contacts();
        $chaceLifeMdl = new model_cm_chancelife();
        $join = array(
            $contactMdl->tableName() => $chanceMdl->tableName().".ct_id = ".$contactMdl->tableName().".ct_id",
            $chaceLifeMdl->tableName() => $chanceMdl->tableName().".chance_id = ".$chaceLifeMdl->tableName().".chance_id"
        );
        $item1 = "end_amount*withdraw_quto as withdraw_amount,".$chanceMdl->tableName().".*,".$chaceLifeMdl->tableName().".timeline as finish_time,".$chaceLifeMdl->tableName().".timeymd as finish_ymd,cb_id,chance_note,actiontype,cm_contacts.*";
        $item2 = "sum(end_amount) as total_finish,sum(end_amount*withdraw_quto) as total_with_amount";
        $item3 = "count(*) as total_count";
        $condition = array(
        );
        $condition[] = "pub_cb_id in({$cbIds})";
        $condition[] = $chanceMdl->tableName().".status = 2";//已完成
        $condition[] = "actiontype = 2";//已完成
        $condition[] = $chaceLifeMdl->tableName().".timeymd >='{$timeLimitStart}'";//完成时间
        $condition[] = $chaceLifeMdl->tableName().".timeymd <='{$timeLimitEnd}'";
        if($type == WithDrawType::WITHDRAW){
            $condition[] = "withdraw_status = 2";//已提现
        }else if($type == WithDrawType::NOTWITHDRAW){
            $condition[] = "withdraw_status = 0";//未提现
        }else{
            throw new Exception("提现参数{$type}错误",self::$PARAM_ERROR);
        }
        $orderby = "finish_time desc";
        $chanceMdl->setPage((int)$filter['page']);
        $chanceMdl->setLimit((int)$filter['limit']);

        $re1 = $chanceMdl->select($condition,$item1,"","order by ".$orderby,$join);

        $re2 = $chanceMdl->select($condition,$item2,"","",$join);
        $chanceMdl = new model_cm_chance();
        $re3 = $chanceMdl->select($condition,$item3,"","",$join);

        $dbSelectResultDO = new DbSelectResultDO((array)$re1);
        zbj_lib_ApiClient::init(constant("ZBJAPI_APPID"), constant("ZBJAPI_APPID"));
        $api = new com\zhubajie\task\interfaces\TaskServiceClient(null);
        zbj_lib_ApiClient::build($api);
        foreach ($dbSelectResultDO->items as $key => $item){
            $taskinfo = $api->getTaskDetail($item['task_id']);
            $dbSelectResultDO->items[$key]['task_title'] = $taskinfo->task_detail->task_title;
            $dbSelectResultDO->items[$key]['total_with_amount'] = round($re2->items[0]['total_with_amount'],2);
            $dbSelectResultDO->items[$key]['total_finish'] = round($re2->items[0]['total_finish'],2);
            $dbSelectResultDO->items[$key]['total_count'] = $re3->items[0]['total_count'];
            $dbSelectResultDO->items[$key]['withdraw_amount'] = round($item['withdraw_amount'],2);
        }
// 		var_dump($dbSelectResultDO);exit;
        return $dbSelectResultDO;
    }
	
	
	private function _lockWithDrawByCbId($Cb_id) {
// 		$Cb_id = 123;
		$mdl = new model_cm_bossmember();
		$sql = "SELECT * FROM cm_bossmember WHERE cb_id = {$Cb_id} FOR UPDATE";
		$result = $mdl->query($sql);
		if ($result === FALSE) {
			throw new Exception('员工总计信息锁定失败. ' . $mdl->getDbError(), -2);
		}
		if ($result == NULL) {
			throw new Exception('该员工不存在,记录锁定失败');
		}
		return $result[0];
	}


	public function addChanceLog($log_data){
// 		define("DEBUG", 1);
		$mdlChanceLife = new model_cm_chancelife();

        $re = $mdlChanceLife->selectOne(array('chance_id'=>$log_data['chance_id'],'actiontype'=>$log_data['actiontype']));
        if($re){
            throw new Exception("该机会{$log_data['chance_id']}以前有相同的日志操作status={$log_data['actiontype']}") ;
        }
		$res = $mdlChanceLife->insert($log_data);
		if(!$res){
            throw new Exception("插入机会日志失败",0);
		}
        return true;
	}

	

    /**
     * 获取机会维度的各种groupby 统计信息
     * @param array $filter
     * @return DbSelectResultDO
     */
	public function getCountInfo($filter){
// 		define("DEBUG", 1);
		$where = array();
		//开始时间
		if(!empty($filter['starttime'])){
			$where[] = "timeline >= {$filter['starttime']}";
		}
		//结束时间
		if(!empty($filter['endtime'])){
			$where[] = "timeline <= {$filter['endtime']}";
		}
		//员工id(发布人id)
		if(!empty($filter['pub_cb_id'])){
			$where['pub_cb_id'] = $filter['pub_cb_id'];
		}
		//雇主手机号 联系人手机号
		if(!empty($filter['ct_mobile'])){
			$where['ct_mobile'] = $filter['ct_mobile'];
		}
		//联系人姓名
		if(!empty($filter['ct_name'])){
			$where[] = "ct_name like '%{$filter['ct_name']}%'";
		}
		//机会id
		if(!empty($filter['chance_id'])){
			$where['chance_id'] = $filter['chance_id'];
		}
		//状态
		if(isset($filter['status'])&&$filter['status'] != -1){
			$where['status'] = $filter['status'];
		}
		//员工名字 模糊匹配
		$userDoArr = array();
		if(!empty($filter['cb_name'])){
			//boss接口拿 用户信息 筛除 pub_cb_id
			zbj_lib_ApiClient::init(constant("ZBJAPI_APPID"), constant("ZBJAPI_APPID"));
			$userClient = new com\zhubajie\boss\interfaces\userServiceClient(null);
			zbj_lib_ApiClient::build($userClient);
			$result = $userClient->search($filter['cb_name']);
			if(!empty($result->datas)){
				$pubCbIdArr = array();
				foreach ($result->datas as $userDo){
					$pubCbIdArr[] = $userDo->user_id;
					$userDoArr[$userDo->user_id] = $userDo;
				}
				$where[] = "pub_cb_id in(".implode(",", $pubCbIdArr).")";
			}else{
				$where[] = "pub_cb_id in(-1)";
			}
		}
		//分组
		$item = "";
		$groubby = "group by ";
		if(!empty($filter['groupby'])){
			if(in_array(com\zhubajie\boss\dataobject\bschance\GroupByType::PUBCBID, $filter['groupby'])){
				$item .= "pub_cb_id,";
				$groubby .= "pub_cb_id,";
			}
			if(in_array(com\zhubajie\boss\dataobject\bschance\GroupByType::TIMEYMD, $filter['groupby'])){
				$item .= "timeymd,";
				$groubby .= "timeymd,";
			}
			if(in_array(com\zhubajie\boss\dataobject\bschance\GroupByType::STATUS, $filter['groupby'])){
				$item .= "`status`,";
				$groubby .= "`status`,";
			}
			if(in_array(com\zhubajie\boss\dataobject\bschance\GroupByType::FWCBID, $filter['groupby'])){
				$item .= "fw_cb_id,";
				$groubby .= "fw_cb_id,";
			}
			$groubby = rtrim($groubby,",");
		}else{
			$groubby = "";
		}
		$item .= "count(*) as count";

		$chanceMdl = new model_cm_chance();
		
		//join
		$contactorsMdl = new model_cm_contacts();
		$tabN = $contactorsMdl->tableName();
		$on = $chanceMdl->tableName().".ct_id = ".$tabN.".".$contactorsMdl->primarykey();
		$join = array(
				$tabN => $on
		);
		
		
		$result = $chanceMdl->select($where,$item,$groubby,"",$join);
		
		$ret = new DbSelectResultDO((array)$result);
		return ($ret);
	}









    /**
     * 检查 该机会的提成是否可可以被申请
     * @param $filter 只需要一个chance_id
     * @return bool
     * @throws Exception
     */
    public function checkCanBeApplyed($filter){
        if(empty($filter['chance_id'])){
            throw new Exception("机会id不能为空",self::$PARAM_ERROR);
        }
        $chance_id = (int)$filter['chance_id'];
        $chanceMdl = new model_cm_chance();

        $re = $chanceMdl->selectOne("chance_id = $chance_id",'withdraw_status');
        if(empty($re)){
            throw new Exception("机会id:{$chance_id}错误",self::$PARAM_ERROR);
        }
        if($re['withdraw_status']!=0){
            throw new Exception("机会id:{$chance_id}的提现不可用，提现状态:{$re['withdraw_status']}",self::$LOGIC_ERROR);
        }
        return true;
    }


    /**
     * 直接执行扣钱操作的方法 业务无关
     * @param $filter 只需要包含boss_id 和 amount chance_id 可以为空
     * @return bool
     * @throws Exception
     */
    public function doWithDraw($filter,$isTran=true){
        if(empty($filter['boss_id']) || empty($filter['amount'])){
            throw new Exception("员工id和扣款金额都不能为空",self::$PARAM_ERROR);
        }
        $boss_id = (int)$filter['boss_id'];
        $amount = (float)$filter['amount'];

        $mdl = new model_cm_bossmember();
        $re_ = $mdl->select("cb_id = {$boss_id}","cb_can_use_amount")->items;
        if($re_){
            if($re_[0]['cb_can_use_amount']<$amount){
                throw new Exception("员工余额不足{$amount}",self::$LOGIC_ERROR);
            }else{
                try {
                    $this->_lockWithDrawByCbId($boss_id);
                    if($isTran)$mdl->beginTransaction('cm');
                    $item = array();
                    $item[] = "cb_withdraw_amount = cb_withdraw_amount + {$amount}";
                    $item[] = "cb_can_use_amount = cb_can_use_amount - {$amount}";
                    $re = $mdl->update("cb_id = {$boss_id}",$item);
                    $now = time();
                    $nowymd = date('Y-m-d',$now);
                    $para = array(
                        'cb_id'=>$boss_id,
                        'timeline'=>$now,
                        'timeymd'=>	$nowymd,
                        'amount'=>$amount,
                    );
                    if(!empty($filter['chance_id'])){
                        $para['chance_id'] = (int)$filter['chance_id'];
                    }
                    if($re){
                        $para['status'] = 3;
                        $para['note'] = "{$nowymd}:用户{$boss_id}成功下账{$amount}元";
                    }else{
                        $para['status'] = 4;
                        $para['note'] = "{$nowymd}:用户{$boss_id}账户下账失败({$amount})元";
                    }
                    $para['can_use_amount'] = $re_[0]['cb_can_use_amount'];
                    $withdrawLog = new model_cm_withdraw();
                    $tm = $withdrawLog->insert($para);
                    if(!$tm){
                        throw new Exception("{$nowymd}:用户{$boss_id}提现记录入库失败,提现失败",self::$LOGIC_ERROR);
                    }
                    if($isTran)$mdl->commit('cm');
                    return true;
                } catch (Exception $e) {
                    if($isTran)$mdl->rollBack('cm');
                    throw new Exception($e->getMessage(),$e->getCode());
                }
            }
        }else{
            throw new Exception("员工id有错误",self::$PARAM_ERROR);
        }
    }
    private function checkipisdeny($ip)
    {
        if (! $ip) {
            return true;
        }
        $key = "boss.bschance.denyip";
        $s_cache = new zbj_lib_cache('memcache');
        $cache = $s_cache->get($key);
        if (! is_array($cache)) {
            $cache = array();
        }
        if (isset($cache[$ip])) {
            if (abs(time() - $cache[$ip]) <= 1800) {
                return true;
            } else {
                unset($cache[$ip]);
                $s_cache->set($key, $cache);
                return true;
            }
        }
        $m_bstoct = zbj_model_api::get('model_mk_bstoct');
        $condition = array();
        $condition['ip'] = $ip;
        $condition[] = "createtime>" . (time() - 60);
        $data = $m_bstoct->selectone($condition, 'count(1) as count');
        if ($data['count'] >= 5) {
            $cache[$ip] = time();
            $s_cache->set($key, $cache);
            return true;
        }
        return false;
    }

    /**
     * 业务到联系人的绑定
     * @param \com\zhubajie\boss\dataobject\bschance\BusinessDO $businessDO
     * @param \com\zhubajie\boss\dataobject\bschance\ContactorDO $contactorDO
     * @return bool
     * @throws Exception
     */
    
    public function businessContactor(\com\zhubajie\boss\dataobject\bschance\ContactorDO $contactorDO, \com\zhubajie\union\dataobject\ChanceStat\ChanceStatInsertDTO $ChanceStatInsertDTO){
        lib_Thrift::thriftsafevar($contactorDO);
		$this->_beginTransaction('mk');
        if(!trim($contactorDO->ip)){
            throw new Exception("IP不合法或为空",self::$PARAM_ERROR);
        }
        if($this->checkipisdeny($contactorDO->ip)){
//          throw new Exception("因为您提交的太快，被系统暂时禁止提交",self::$PARAM_ERROR);
        }
        $way_type = (int)$ChanceStatInsertDTO->way_type;
        if($way_type<=0){
            throw new Exception("来源不合法",self::$PARAM_ERROR);
        }
        if($contactorDO->source && !$this->checksource($way_type, $contactorDO->source)){
            throw new Exception("子来源不合法",self::$PARAM_ERROR);
        }
        
//         if(empty($contactorDO->ct_name)){
//             throw new Exception("联系人姓名不能为空",self::$PARAM_ERROR);
//         }
        $ct_name = zbj_lib_BaseUtils::getStr($contactorDO->ct_name);
        if(empty($contactorDO->ct_mobile)){
            throw new Exception("联系人手机号不能为空",self::$PARAM_ERROR);
        }
        if(!zbj_lib_BaseUtils::IsMobile($contactorDO->ct_mobile)){
            throw new Exception("联系人手机号格式不正确{$contactorDO->ct_mobile}",self::$PARAM_ERROR);
        }
        $ct_mobile = zbj_lib_BaseUtils::getStr($contactorDO->ct_mobile);
        if($contactorDO->ct_sex === null){
            throw new Exception("联系人性别不能为空",self::$PARAM_ERROR);
        }
        $ct_sex = (int)$contactorDO->ct_sex;
        if(!in_array($ct_sex, array(SEX::FEMALE,SEX::MALE,SEX::SEX_DEFAULT))){
            throw new Exception("联系人性别参数非法",self::$PARAM_ERROR);
        }
        if(isset($contactorDO->user_id)){
            $user_id = (int)$contactorDO->user_id;
        }
		$contactorMdl = zbj_model_api::get('model_mk_bstoct_contacts');
        $condition=array();
        $condition['ct_name']=$ct_name;
        $condition['ct_mobile']=$ct_mobile;
        $tmp = $contactorMdl->selectOne($condition);
        try{
            if(empty($tmp)){
                //新加联系人
                $item = array(
                    'ct_name' => $ct_name,
                    'ct_mobile' => $ct_mobile,
                    'ct_sex' => $ct_sex,
                    'ct_tel'=>$contactorDO->ct_tel
                );
                if($contactorDO->ct_email){
                    $item['ct_email'] = zbj_lib_BaseUtils::getStr($contactorDO->ct_email);
                }
                if($contactorDO->ct_qq){
                    $item['ct_qq'] = zbj_lib_BaseUtils::getStr($contactorDO->ct_qq);
                }
                $tmp = $contactorMdl->insert($item);
                if(!$tmp){
                    throw new Exception("新建联系人失败",self::$LOGIC_ERROR);
                }
                $ct_id = $tmp;
            }else{
                $ct_id = $tmp['ct_id'];
            }
			$bstoctMdl = zbj_model_api::get('model_mk_bstoct');
            //新加绑定 业务到联系人的绑定
            $item = array(
                'ct_id' => $ct_id,
                'createtime' => time(),
                'createymd' => date('Y-m-d', time()),
                'way_type' => intval($ChanceStatInsertDTO->way_type),
                'create_uid' => intval($contactorDO->bosscreate_uid),
                'user_id' => $user_id ? $user_id : 0,
                'cat1' => $contactorDO->cat1,
                'cat2' => $contactorDO->cat2,
                'cat3' => $contactorDO->cat3,
				'cat1_name' => '',
				'cat2_name' => '',
                'base_cat3' => intval ($contactorDO->base_cat3),
                'note' => $contactorDO->note,
                'ip' => $contactorDO->ip,
                'isurgent' => intval($contactorDO->isurgent),
                'source' => intval($contactorDO->source)
            );
            if ($item['base_cat3']){
                //基础三级类目
				lib_BaseUtils::apiInit(10,array('zbj_sdk'));
				$categoryClient = new com\zhubajie\category\interfaces\CategoryServiceClient(null);
                lib_BaseUtils::apigetclient($categoryClient);
                $cateInfo = $categoryClient->getCategoryById($item['base_cat3']);
                $item['base_cat2'] = $cateInfo->category2id;
                $item['base_cat1'] = $cateInfo->category1id;
            }
			//三级类目
            $item['config_id'] = self::__getconfigid($item['base_cat3']);
            $item['config_id'] = $item['config_id']?$item['config_id']:112;
            $options=array();
            if ($contactorDO->bosscreate_uid) {
                $surgent_note='';
                switch ($contactorDO->isurgent) {
                    case 1:
                        $surgent_note='＃重点关注＃加急客户';
                        break;
                    case 2:
                        $surgent_note='＃重点关注＃重点客户';
                        break;
                    default:
                        $surgent_note='＃重点关注＃'.zbj_lib_BaseUtils::getStr($contactorDO->surgent_note,'string');
                        break;
                }
                $temp = array(
                    'note' => $surgent_note,
                    'time' => time(),
                    'create_uid'=>$contactorDO->bosscreate_uid,
                );
                $options['note_info'] = array($temp);
            }
            
            $item['options'] = json_encode($options);
            $r = $bstoctMdl->insert($item);
            if(!$r){
                throw new Exception("业务到联系人绑定失败",self::$LOGIC_ERROR);
            }
			$allotPoolModule = zbj_model_api::get('model_mk_allot_pool');
            $lastid=$bstoctMdl->lastInsertId();
			if($contactorDO->isurgent==1 || $contactorDO->isurgent ==2){
				$weights=50;
			}
			else{
				$weights=$this->_get_cate_weights($item['base_cat3']);
			}
			$bctoctData = array(
				'needallot'	=> 1,
				'allotstate'	=> 0,
				'allottime'		=> 0,
				'type'		=> 2,
				'weights'		=> $this->startWeights+$weights,
				'createtime'		=> time(),
				'next_chktime'		=> time()+5,
				'begin_chktime'		=> time()+5,
				'task_id'  => $lastid,
			);
			$insertResult=$allotPoolModule->insert($bctoctData);
            if(!$insertResult){
                throw new Exception("写入分配池失败",self::$LOGIC_ERROR);
            }
			$this->_commit('mk');
            return $lastid;
        }catch (Exception $e){
			$this->_rollBack('mk');
            throw new Exception($e->getMessage(),$e->getCode());
        }
    }

	/*
	 *类目权重
	 *lsTMango
	 *2015-10-20
	 */
	private function _get_cate_weights($cid){
		 //new lsdebug($cid,'cid');
         $config_id = self::__getconfigid($cid);
		 //new lsdebug($config_id,'config_id');
		 if($config_id!=112){
			 return 50;
		 }
		 return 10;
	}


    Public function lockBussinessContactor($bs_to_ct_id,$bossuser_id){
        $m_bstoct = zbj_model_api::get('model_mk_bstoct');
        try {
            $m_bstoct->beginTransaction($m_bstoct->tableName());
            $m_bstoct_follow = zbj_model_api::get('model_mk_bstoct_follow');
            $followdata=array();
            $followdata['is_giveup']=0;
            $followdata['giveup_reason_remark']='';
            $followdata['giveup_option']=0;
            $followdata['giveup_ymd']='0000-00-00';
            $followdata['giveup_time']=0;
            
            $m_bstoct_follow->update(array('bs_to_ct_id'=>$bs_to_ct_id),$followdata);
            $bstoctdata=array();
            $bstoctdata['follow_uid']=$bossuser_id;
            $bstoctdata['status']=0;
            $bstoctdata['allottime']=time();
            $bstoctdata['allotymd']=date('Y-m-d',$bstoctdata['allottime']);
            $m_bstoct->update(array('bs_to_ct_id'=>$bs_to_ct_id),$bstoctdata);
            $m_bstoct->commit($m_bstoct->tableName());
        }catch(Exception $e){
            $m_bstoct->rollBack($m_bstoct->tableName());
        }
        $contactorMdl = new model_mk_bstoct_contacts();
    }

    /**
     * 获取业务到联系人的绑定列表
     * @param \com\zhubajie\boss\dataobject\bschance\BusinessFilter $businessFilter
     * @return DbSelectResultDO
     * @throws Exception
     */
    public function getBussinessContactor(\com\zhubajie\boss\dataobject\bschance\BusinessFilter $businessFilter){
//         $bsMdl = new model_cm_business();
        $bstoctMdl = new model_mk_bstoct();
        $contactMdl = new model_mk_bstoct_contacts();
//         $cttouMdl = new model_mk_bstoct_userct2u();
        $logMdl = new model_mk_bstoct_follow();
        $taskMdl = new model_mk_bstoct_task();
        $followLogMdl = new model_mk_bstoct_follow_log();

        $condition = array();
        $bs_id = (int)$businessFilter->bs_id;
        $page = (int)$businessFilter->page;
        $limit = (int)$businessFilter->limit;
        $product_detail = array();
        //三级类目
        if ($businessFilter->base_cat1){
            $condition[$bstoctMdl->tableName().".base_cat1"] = $businessFilter->base_cat1;
        }
        if ($businessFilter->base_cat2){
            $condition[$bstoctMdl->tableName().".base_cat2"] = $businessFilter->base_cat2;
        }
        if ($businessFilter->base_cat3){
            $condition[$bstoctMdl->tableName().".base_cat3"] = $businessFilter->base_cat3;
        }
        //订单状态
        if($businessFilter->dealstatus){
            switch($businessFilter->dealstatus){
                case com\zhubajie\boss\dataobject\bschance\DEALSTATUS::WAITDEAL :{
                    //刚分配  还没有进行跟进
                    $condition[] = $bstoctMdl->tableName().".allottime >0 and ".$bstoctMdl->tableName().".status = 0 ";
                    $condition[] = $bstoctMdl->tableName().".ordertime =0";
                    //正常
                    if ($businessFilter->follow_status == com\zhubajie\boss\dataobject\bschance\FollowStatus::NORMAL){
                        $condition[]= $bstoctMdl->tableName().'.next_follow_time >="'.date('Y-m-d H:i:s').'"';
                    }
                    //超期
                    if ($businessFilter->follow_status == com\zhubajie\boss\dataobject\bschance\FollowStatus::TIME_OUT){
                        $condition[]= $bstoctMdl->tableName().'.next_follow_time <"'.date('Y-m-d H:i:s').'"';
                    }
                    break;
                }
                case com\zhubajie\boss\dataobject\bschance\DEALSTATUS::DEALING :{//跟进中
                    $condition[] = $bstoctMdl->tableName().".status =1 and ordertime = 0 and is_giveup=0";
                    
                    //今日已跟进
                    if ($businessFilter->follow_status == com\zhubajie\boss\dataobject\bschance\FollowStatus::TODAY_FOLLOWED){
                        $condition[] = $bstoctMdl->tableName().'.next_follow_ymd >"'.date('Y-m-d').'" and followymd ="'.date('Y-m-d').'"';
                    }
                    //今日待跟进
                    if ($businessFilter->follow_status == com\zhubajie\boss\dataobject\bschance\FollowStatus::TODAY_UNFOLLOW){
                        $condition[] = $bstoctMdl->tableName().'.next_follow_ymd ="'.date('Y-m-d').'" ';
                    }
                    break;
                }
                case com\zhubajie\boss\dataobject\bschance\DEALSTATUS::ORDERED :{//已经创建订单
                    $condition[] = $bstoctMdl->tableName().".ordertime >0";
                    break;
                }
                case com\zhubajie\boss\dataobject\bschance\DEALSTATUS::GIVEUP :{//放弃库
                    $condition[] = $logMdl->tableName().".is_giveup = 1";
                    break;
                }
                case com\zhubajie\boss\dataobject\bschance\DEALSTATUS::NOTALLOT :{//未分配
                    $condition[] = $bstoctMdl->tableName().".follow_uid = 0";
                    $condition[] = $bstoctMdl->tableName().".ordertime = 0";
                    break;
                }
            }
        }
        //机会顾问
        if($businessFilter->follow_uid){
            $followArr = array();
            foreach($businessFilter->follow_uid as $uid){
                $followArr[] = (int)$uid;
            }
            $followUids = implode(",",$followArr);
            $condition[] = $bstoctMdl->tableName().".follow_uid in ({$followUids})";
        }
        //创建时间终点
        if($businessFilter->createtimeupper){
            $createtime = (int)$businessFilter->createtimeupper;
            $condition[] = $bstoctMdl->tableName().".createtime <= {$createtime}";
        }
        //创建时间起点
        if($businessFilter->createtimelower){
            $createtime = (int)$businessFilter->createtimelower;
            $condition[] = $bstoctMdl->tableName().".createtime >= {$createtime}";
        }
        //跟进时间终点
        if($businessFilter->followtimeupper){
            $followtimeupper = (int)$businessFilter->followtimeupper;
            $condition[] = $bstoctMdl->tableName().".followtime <= {$followtimeupper}";
        }
        //跟进时间起点
        if($businessFilter->followtimelower){
            $followtimelower = (int)$businessFilter->followtimelower;
            $condition[] = $bstoctMdl->tableName().".followtime >= {$followtimelower}";
        }
        //下次跟进时间终点
        if($businessFilter->nextfollowtimemax){
            $nexttime=date('Y-m-d H:i:s',strtotime($businessFilter->nextfollowtimemax));
            $condition[] = $bstoctMdl->tableName().".next_follow_time <= '{$businessFilter->nextfollowtimemax}'";
        }
        //下次跟进时间起点
        if($businessFilter->nextfollowtimemin){
            $nexttime=date('Y-m-d H:i:s',strtotime($businessFilter->nextfollowtimemin));
            $condition[] = $bstoctMdl->tableName().".next_follow_time >= '{$nexttime}'";
        }
		//分配时间
        if ($businessFilter->allottimelower){
            $allottimelower = (int) $businessFilter->allottimelower;
            $condition[] = $bstoctMdl->tableName().'.allottime>='.$allottimelower;
        }
        if ($businessFilter->allottimeupper){
            $allottimeupper = (int) $businessFilter->allottimeupper;
            $condition[] = $bstoctMdl->tableName().'.allottime<='.$allottimeupper;
        }
        //订单时间终点
        if($businessFilter->ordertimeupper){
            $ordertimeupper = (int)$businessFilter->ordertimeupper;
            $condition[] = $bstoctMdl->tableName().".ordertime <= {$ordertimeupper}";
        }
        //订单时间起点
        if($businessFilter->ordertimelower){
            $ordertimelower = (int)$businessFilter->ordertimelower;
            $condition[] = $bstoctMdl->tableName().".ordertime >= {$ordertimelower}";
        }
        //放弃时间终点
        if($businessFilter->giveuptimeupper){
            $giveuptimeupper = (int)$businessFilter->giveuptimeupper;
            $condition[] = $logMdl->tableName().".giveup_time <= {$giveuptimeupper}";
        }
        //放弃时间起点
        if($businessFilter->giveuptimelower){
            $giveuptimelower = (int)$businessFilter->giveuptimelower;
            $condition[] = $logMdl->tableName().".giveup_time >= {$giveuptimelower}";
        }
        if($businessFilter->orderChanceType){
            $condition[] = $bstoctMdl->tableName().".orderChanceType = {$businessFilter->orderChanceType}";
        }
        //创建人
        if($businessFilter->create_uid){
            $uidArr = array();
            foreach($businessFilter->create_uid as $uid){
                $uidArr[] = (int)$uid;
            }
            $uids = implode(",",$uidArr);
            $condition[] = $bstoctMdl->tableName().".create_uid in ({$uids})";
        }
        //雇主手机
        if($businessFilter->ct_mobile){
            $ct_mobile = (int)$businessFilter->ct_mobile;
            $condition[] = $contactMdl->tableName().".ct_mobile = {$ct_mobile}";
        }
        //用户昵称
        if($businessFilter->unickname){
            $unickname = zbj_lib_BaseUtils::getStr($businessFilter->unickname);
            $condition[] = $bstoctMdl->tableName().".unickname like '%{$unickname}%'";
        }
        //机会id
        if($businessFilter->bs_to_ct_id){
            $bs_to_ct_id = (int)$businessFilter->bs_to_ct_id;
            $condition[] = $bstoctMdl->tableName().".bs_to_ct_id = {$bs_to_ct_id}";
        }
        if($businessFilter->uid){
            $uid = (int)$businessFilter->uid;
            $condition[] = $bstoctMdl->tableName().".user_id = {$uid}";
        }
        //前台用户id
//         if($businessFilter->uid){
//             $uid = (int)$businessFilter->uid;
//             $condition[] = $cttouMdl->tableName().".user_id = {$uid}";
//         }
        //来源
        if($businessFilter->way_type){
            $way_type = (int)$businessFilter->way_type;
            $condition[] = $bstoctMdl->tableName().".way_type = {$way_type}";
        }
        //子来源
        if ($businessFilter->source){
             $condition[$bstoctMdl->tableName().".source"] = $businessFilter->source;
        }
        //类目
        if($businessFilter->categoryname){
            $categoryname = zbj_lib_BaseUtils::getStr($businessFilter->categoryname);
            $condition[] = $bstoctMdl->tableName().".task_describle like '%{$categoryname}%'";
        }
        //机会id
        if($businessFilter->bs_to_ct_id){
            $bs_to_ct_id = (int)($businessFilter->bs_to_ct_id);
            $condition[] = $bstoctMdl->tableName().".bs_to_ct_id = {$bs_to_ct_id}";
        }
        if($businessFilter->order){
            $order = $businessFilter->order;
            $tmpOrderSql = "order by ";
            foreach($order as $col1 => $d1){
                foreach($d1 as $col=> $d){
                    switch($col){
                        case com\zhubajie\boss\dataobject\bschance\chanceOrderCol::FOLLOWTIME :{
                            if($d){
                                $tmpOrderSql .= $bstoctMdl->tableName().".followtime asc,";
                            }else{
                                $tmpOrderSql .= $bstoctMdl->tableName().".followtime desc,";
                            }
                            break;
                        }
                        case com\zhubajie\boss\dataobject\bschance\chanceOrderCol::CREATETIME:{
                            if($d){
                                $tmpOrderSql .= $bstoctMdl->tableName().".createtime asc,";
                            }else{
                                $tmpOrderSql .= $bstoctMdl->tableName().".createtime desc,";
                            }
                            break;
                        }
                        case com\zhubajie\boss\dataobject\bschance\chanceOrderCol::ALLOTTIME:{
                            if($d){
                                $tmpOrderSql .= $bstoctMdl->tableName().".allottime asc,";
                            }else{
                                $tmpOrderSql .= $bstoctMdl->tableName().".allottime desc,";
                            }
                            break;
                        }
                        default:{
                            break;
                        }
                    }
                }
            }
            $order_by = trim($tmpOrderSql,",");
        }else{
            $order_by = "order by ".$bstoctMdl->tableName().".createtime desc";
        }
        $leftJoin = array(
            $contactMdl->tableName() => $bstoctMdl->tableName().".ct_id = ".$contactMdl->tableName().".ct_id",
//             $cttouMdl->tableName() => $contactMdl->tableName().".ct_id = ".$cttouMdl->tableName().".ct_id",
            $logMdl->tableName() => $bstoctMdl->tableName().".bs_to_ct_id = ".$logMdl->tableName().".bs_to_ct_id",
        );
        $bstoctMdl->setPage($page);
        $bstoctMdl->setLimit($limit);
        $selectItems = array(
            $bstoctMdl->tableName().".bs_to_ct_id",
            $bstoctMdl->tableName().".createtime as _createtime",
            $bstoctMdl->tableName().".createymd as _createymd",
            $bstoctMdl->tableName().".status",
            $bstoctMdl->tableName().".ip",
            $bstoctMdl->tableName().".user_id",
            $bstoctMdl->tableName().".unickname",
            $bstoctMdl->tableName().".way_type",
            $bstoctMdl->tableName().".source",
            $bstoctMdl->tableName().".followtime",
            $bstoctMdl->tableName().".next_follow_time",
            $bstoctMdl->tableName().".create_uid",
            $bstoctMdl->tableName().".follow_uid",
            $bstoctMdl->tableName().".allottime",
            $bstoctMdl->tableName().".allotymd",
            $bstoctMdl->tableName().".ordertime",
            $bstoctMdl->tableName().".orderymd",
            $bstoctMdl->tableName().".orderChanceType",
            $bstoctMdl->tableName().".note",
            $bstoctMdl->tableName().".cat1",
            $bstoctMdl->tableName().".cat2",
            $bstoctMdl->tableName().".cat3",
            $bstoctMdl->tableName().".base_cat3",
            $bstoctMdl->tableName().".base_cat2",
            $bstoctMdl->tableName().".base_cat1",
        	$bstoctMdl->tableName().".config_id",
            $bstoctMdl->tableName().".note",
            $bstoctMdl->tableName().".isurgent",
            $bstoctMdl->tableName().".options as bs_options",
            $contactMdl->tableName().".ct_id",
            $contactMdl->tableName().".ct_name",
            $contactMdl->tableName().".ct_sex",
            $contactMdl->tableName().".ct_mobile",
            $contactMdl->tableName().".ct_email",
            $contactMdl->tableName().".ct_qq",
            $contactMdl->tableName().".ct_tel",
            $logMdl->tableName().".is_giveup",
            $logMdl->tableName().".giveup_reason_remark",
            $logMdl->tableName().".giveup_time",
            $logMdl->tableName().".giveup_option",
            $logMdl->tableName().".options",
            $logMdl->tableName().".follow_remark",
        );
        $no_cache = $businessFilter->no_cache;
        //1
        $cache_name = 'boss.bslist.'.$page.'.'.$limit.'.'.substr(md5(serialize($condition)),8,24);
        $s_cache = new zbj_lib_cache('memcache');
        if (!$no_cache){
            if (empty($condition)){
                array_unshift($condition,'createymd =>"'.date("Y-m-d H:i:s",strtotime("-7 days")).'" ');
                //$condition['createymd'] = date("Y-m-d",strtotime("-7 days"));
            }
            $cache_data = $s_cache->get($cache_name);
            if ($cache_data &&  abs(time() - $cache_data['expires']) < 3600 ){
                //return 缓存
                return $cache_data['data'];
            }
        }
        //
        $re = $bstoctMdl->select($condition,$selectItems,"",$order_by,$leftJoin);
		new lsdebug($bstoctMdl,'bstoctMdl');
//         throw new Exception(ob_get_clean(), $code, $previous);
        /*
        $bstoctMdl = new model_mk_bstoct();
		if(strpos($condition,'follow_uid')===false){
			$condition[]=$bstoctMdl->tableName().'.follow_uid>0';
		}
		*/
		if ($businessFilter->bs_to_ct_id){
		    if ($re->items){
		        $re->totalSize = 1;
		    }else{
		        $re->totalSize = 0;
		    }
		}else{
		    if ($no_cache){
                $tmp = $bstoctMdl->selectOne($condition,"count(1) as cnt",null,null,$leftJoin);
                $re->totalSize = $tmp['cnt'];
		    }
		}
		if($re->items){
			$formatArray=array();
			foreach($re->items as $k=>$bsChanceValue){
				$re->items[$k]['product_name'] = $product_detail[$bsChanceValue['bs_id']]['product_name'];
				$bsIdArray[]=$bsChanceValue['bs_to_ct_id'];
				$formatArray[$k]=$bsChanceValue['bs_to_ct_id'];
			}
			$bsIds=implode($bsIdArray,',');
            if($businessFilter->includeTask){
				//获取相关的订单
				$bsTaskIdArray = $taskMdl->select("bs_to_ct_id in ({$bsIds})",'task_id,bs_to_ct_id')->items;
				if($bsTaskIdArray){
					foreach($bsTaskIdArray as $bsIdValue){
						$taskIds[$bsIdValue['bs_to_ct_id']] = $bsIdValue['task_id'];
					}
					foreach($formatArray as $k=>$fValue){
						foreach($taskIds as $bsIdKey=>$taskIdValue){
							if($bsIdKey==$fValue){
								$re->items[$k]['taskList'] = $taskIdValue;
							}
							else{
								$re->items[]['taskList'] = '';
							}
						}
					}
				}
            }else{
                $re->items[$k]['taskList'] = array();
            }
		}
        $ret = new DbSelectResultDO((array)$re);
        //缓存
        if (!$no_cache){
            $cache_data_obj =  array();
            $cache_data_obj['data'] = $ret;
            $cache_data_obj['expires'] =  time();
            $s_cache->set($cache_name, $cache_data_obj);
        }
        return ($ret);
    }

    /**
     * 增加联系人到平台用户的绑定
     * @param \com\zhubajie\boss\dataobject\bschance\CtToU $ctToU
     * @return bool
     * @throws Exception
     */
    public function addcttou(\com\zhubajie\boss\dataobject\bschance\CtToU $ctToU)
    {
        if ($ctToU->ct2u_id) {
            unset($ctToU->ct2u_id);
        }
        if (!$ctToU->ct_id) {
            throw new Exception("联系人ct_id不能为空", -1);
        }
        $ct_id = (int)$ctToU->ct_id;
        if (!$ctToU->user_id) {
            throw new Exception("前台用户user_id不能为空", -1);
        }
        $user_id = (int)$ctToU->user_id;
        if (!$ctToU->unickname) {
            throw new Exception("前台用户unickname不能为空", -1);
        }
        $unickname = zbj_lib_BaseUtils::getStr($ctToU->unickname);
        if (!$ctToU->bs_to_ct_id) {
            throw new Exception("机会bs_to_ct_id不能为空", -1);
        }
        $bs_to_ct_id = (int)($ctToU->bs_to_ct_id);
        $ctMdl = new model_mk_bstoct_contacts();
        $re = $ctMdl->selectOne("ct_id ={$ct_id}");
        if (!$re) {
            throw new Exception("该联系人不存在", -1);
        }
        $bsMdel = new model_mk_bstoct();
        $re = $bsMdel->selectOne("bs_to_ct_id = {$bs_to_ct_id} and ct_id = {$ct_id}");
        if (!$re) {
            throw new Exception("该机会和联系人关系错误", -1);
        }
        /*
        if($re['user_id']){
            throw new Exception("本商机已经关联了用户", -1);
        }
        */
        $taskMdl = new model_mk_bstoct_task();
        $task = $taskMdl->selectOne(array('bs_to_ct_id'=>$bs_to_ct_id));
        if ($task){
            throw new Exception('该机会已转化，不能更改用户');
        }
        try {
            $re = $bsMdel->update("bs_to_ct_id = {$bs_to_ct_id} and ct_id = {$ct_id}", "unickname = '{$unickname}',user_id={$user_id}");
            if ($re===false) {
                throw new Exception("用户昵称入库失败", -1);
            }
            return true;
        } catch (Exception $e) {
            throw new Exception($e->getMessage(), $e->getCode());
        }
    }

	/**
	 * 跟进
	 * 
	 * @param com\zhubajie\boss\dataobject\bschance\FollowInfoDO $follow_info
	 * 
	 * @author yuanzhuang
	 */
    public function follow($follow_info) {
    	$result = false;
    	
    	try {
    		$bs_to_ct_id = zbj_lib_BaseUtils::getStr($follow_info->bs_to_ct_id);
    		$m_bstoct = new model_mk_bstoct();
    		$m_bstoct_follow = new model_mk_bstoct_follow();
    		$m_bstoct_follow_log = new model_mk_bstoct_follow_log();
    		
    		$m_bstoct_follow->beginTransaction($m_bstoct_follow->tableName());
    		$bstoct_info = $m_bstoct->selectOne(array('bs_to_ct_id' => $bs_to_ct_id));
    		if (! $bstoct_info) {
    			throw new Exception('机会不存在', -1);
    		} else {
    		    /*
    			if ($follow_info->follow_user_id != $bstoct_info['follow_uid']) {
    				throw new Exception('亲，只能操作自己的机会哦', -1);
    			}
    			*/
    		}
    		
    		$follow_log_data = $follow_data = array(
    			'bs_to_ct_id' => $bs_to_ct_id,
    			'follow_remark' => zbj_lib_BaseUtils::getStr($follow_info->follow_remark),
    			'is_giveup' => $follow_info->is_giveup? 1: 0,
    			'giveup_reason_remark' => zbj_lib_BaseUtils::getStr($follow_info->giveup_reason_remark),
    		    'giveup_option' => zbj_lib_BaseUtils::getStr($follow_info->giveup_option),
    		    'giveup_reason_remark' => zbj_lib_BaseUtils::getStr($follow_info->giveup_reason_remark),
    		    'follow_option' => zbj_lib_BaseUtils::getStr($follow_info->follow_option),
    			'giveup_ymd' => date('Y-m-d'),
    			'giveup_time' => time(),
    			'follow_ymd' => date('Y-m-d'),
    			'follow_time' => time(),
    		    'next_follow_time'=>$follow_info->next_follow_time,
    		    'next_follow_ymd'=>date('Y-m-d',strtotime($follow_info->next_follow_time)),
    		);
    		
    		$last_follow_info = $m_bstoct_follow->selectOne(array('bs_to_ct_id' => $bs_to_ct_id));
    		$options = array();
    		if ($last_follow_info) {
    			$options = unserialize($last_follow_info['options']);
    			if (count($options) >= 5) {
    				array_pop($options);
    			}
    		}
    		array_unshift($options, $follow_data);
    		$follow_data['options'] = serialize($options);
    		
    		if (false === $m_bstoct_follow->insert($follow_data, true)) {
    			throw new Exception('更新表mk_bstoct_follow失败', -1);
    		} else {
    		    $follow_update=array();
    		    $follow_update['status']=1;
    		    $follow_update['followtime']=time();
    		    $follow_update['followymd']=date('Y-m-d');
    		    $follow_update['next_follow_time']=$follow_info->next_follow_time;
    		    $follow_update['next_follow_ymd']=date('Y-m-d',strtotime($follow_info->next_follow_time));
    		    
    			if (false === $m_bstoct->update(array(
                    'bs_to_ct_id' => $bs_to_ct_id
                ), $follow_update)) {
                    throw new Exception('更新表mk_bstoct处理状态字段失败', - 1);
                }
    			 
    			$follow_log_data['follow_user_id'] = zbj_lib_BaseUtils::getStr($follow_info->follow_user_id);
    			if (false === $m_bstoct_follow_log->insert($follow_log_data)) {
    				throw new Exception('更新表mk_bstoct_follow_log表失败', -1);
    			}
    		}
    		
    		$m_bstoct_follow->commit($m_bstoct_follow->tableName());
    		if ($follow_info->is_giveup){
    		    $this->removeRedis($bs_to_ct_id, $bstoct_info['config_id']);
    		}
    		$result = true;
    	} catch (Exception $e) {
    		$m_bstoct_follow->rollBack($m_bstoct_follow->tableName());
    		
    		$this->setError($e->getCode(), $e->getMessage());
    	}
    	
    	return $result;
    }

    /**
     * 更新机会 
     * @param \com\zhubajie\boss\dataobject\bschance\ChanceBussinessDo $chanceBussinessDo
     * @return bool
     * @throws Exception
     * @internal param \com\zhubajie\boss\dataobject\bschance\BusinessToContactor $businessToContactor
     */
    public function updateBs2Ct(\com\zhubajie\boss\dataobject\bschance\ChanceBussinessDo $chanceBussinessDo){
        if(!(int)$chanceBussinessDo->bs_to_ct_id){
            throw new Exception("机会id不能为空",-1);
        }
        $bs_to_ct_id = (int)$chanceBussinessDo->bs_to_ct_id;
        $bsMdl = new model_mk_bstoct();
        $r = $bsMdl->selectOne("bs_to_ct_id = {$bs_to_ct_id}");
        if(!$r){
            throw new Exception("该机会不存在",-1);
        }
        $ct_id = $r['ct_id'];
        $contactor = $chanceBussinessDo->contactorDO;
        $bsItem = array();
        $contactItem = array();
        //客服
        if((int)$chanceBussinessDo->follow_uid){
            $bsItem['follow_uid'] = (int)$chanceBussinessDo->follow_uid;
        }
        //分配时间
        if((int)$chanceBussinessDo->allottime){
            $bsItem['allottime'] = (int)$chanceBussinessDo->allottime;
            $bsItem['allotymd'] = date("Y-m-d",$bsItem['allottime']);
        }
        //订单时间
        if((int)$chanceBussinessDo->ordertime){
            $bsItem['ordertime'] = (int)$chanceBussinessDo->ordertime;
            $bsItem['orderymd'] = date("Y-m-d",$bsItem['ordertime']);
        }
        //需求描述
        if(trim($contactor->cat1)){
            $bsItem['cat1'] = zbj_lib_BaseUtils::getStr($contactor->cat1);
        }
        if(trim($contactor->cat2)){
            $bsItem['cat2'] = zbj_lib_BaseUtils::getStr($contactor->cat2);
        }
        if(trim($contactor->cat3)){
            $bsItem['cat3'] = zbj_lib_BaseUtils::getStr($contactor->cat3);
        }
        if (trim($contactor->base_cat3)){
            $bsItem['base_cat3'] = $contactor->base_cat3;
            
            //基础三级类目
			lib_BaseUtils::apiInit(10,array('zbj_sdk'));
			$categoryClient = new com\zhubajie\category\interfaces\CategoryServiceClient(null);
			lib_BaseUtils::apigetclient($categoryClient);
			$cateInfo = $categoryClient->getCategoryById($contactor->base_cat3);
			$bsItem['base_cat2'] = $cateInfo->category2id;
			$bsItem['base_cat1'] = $cateInfo->category1id;
			//三级类目
			//@todo清空更新的交易顾问
			//$bsItem['follow_uid'] = 0;
        }
        if ($contactor->base_cat3 && $r['base_cat3'] !=$contactor->base_cat3){
            $bsItem['config_id'] = self::__getconfigid($contactor->base_cat3);
        }
        $bsItem['cat1_name'] = "";
        $bsItem['cat2_name'] = "";
        if(trim($contactor->note)){
            $bsItem['note'] = zbj_lib_BaseUtils::getStr($contactor->note);
        }
        
        if($chanceBussinessDo->next_follow_time){
            $bsItem['next_follow_time'] = $chanceBussinessDo->next_follow_time;
            $bsItem['next_follow_ymd'] = date('Y-m-d',strtotime($chanceBussinessDo->next_follow_time));
        }
        if($contactor->isurgent or $contactor->surgent_note){
            $bsItem['isurgent'] = $contactor->isurgent;
            switch ($contactor->isurgent) {
                case 1:
                    $surgent_note='＃重点关注＃加急客户';
                    break;
                case 2:
                    $surgent_note='＃重点关注＃重点客户';
                    break;
                default:
                    $surgent_note='＃重点关注＃'.zbj_lib_BaseUtils::getStr($contactor->surgent_note,'string');
                    break;
            }
            $temp = array(
                'note' => $surgent_note,
                'time' => time(),
                'create_uid'=>$contactor->bosscreate_uid,
            );
            $options=json_decode($r['options'],true);
            if(!is_array($options['note_info'])){
                $options['note_info']=array();
            }
            $options['note_info'][]=$temp;
            $bsItem['options']=json_encode($options);
        }
        
        
        if($bsItem){
            if($bsItem['config_id'] && (int)$r['config_id']!= (int)$bsItem['config_id']){
                $m_follow = new model_mk_bstoct_follow();
                $followInfo = $m_follow->selectOne(array('bs_to_ct_id'=>$bs_to_ct_id));
                if ($followInfo['is_giveup'] ==0 && $r['ordertime'] == 0){
					#20151111已重写
                }
            } 
            $bsMdl->update(array('bs_to_ct_id'=>$bs_to_ct_id),$bsItem);
        }

        $ct_mobile = (int)$contactor->ct_mobile;
        if($ct_mobile && zbj_lib_BaseUtils::IsMobile($ct_mobile) ){
            $contactItem['ct_mobile'] = $ct_mobile;
        }
        if($contactor->ct_sex!==null){
            $contactItem['ct_sex'] = (int)$contactor->ct_sex;
        }
        $ct_email = zbj_lib_BaseUtils::getStr($contactor->ct_email);
        if($ct_email){
            $contactItem['ct_email'] = $ct_email;
        }
        $ct_qq = (int)$contactor->ct_qq;
        if($ct_qq){
            $contactItem['ct_qq'] = $ct_qq;
        }
        $ct_name = zbj_lib_BaseUtils::getStr($contactor->ct_name);
        if($ct_name){
            $contactItem['ct_name'] = $ct_name;
        }
        $ct_tel = zbj_lib_BaseUtils::getStr($contactor->ct_tel);
        if($ct_tel){
            $contactItem['ct_tel'] = $ct_tel;
        }
        if($contactItem){
            $contactorMdl = new model_mk_bstoct_contacts();
            $contactorMdl->update(array('ct_id'=>$ct_id),$contactItem);
        }
        return true;
    }
	
    /**
     * 处理企业号事件
     * 
     * @param object $msg_obj
     * 
     * @author yuanzhuang
     * @date 2015-07-22
     */
    public function handleWechatEvent($msg_obj) {
    	$result = array(
    		'title' => '',
    		'description' => '',
    		'picurl' => '',
    		'url' => '',
    	);
    	
    	if ('text' == trim($msg_obj->MsgType)) {
    		$keyword = trim($msg_obj->Content);
    		
    		$m_bstoct = new model_mk_bstoct();
    		$condition = array('mk_bstoct.bs_to_ct_id' => $keyword);
    		if ($m_bstoct->selectOne($condition)) {
    			$item = array(
    				'mk_bstoct.bs_to_ct_id',
    				'mk_bstoct.status',
    				'mk_bstoct.create_uid',
    				'mk_bstoct.follow_uid',
    				'mk_bstoct.allottime',
    				'mk_bstoct.createtime',
    				'mk_bstoct_task.task_id',
    				'mk_bstoct_task.task_create_time',
    				'mk_bstoct_follow.is_giveup',
//     				'mk_task.manager_id',
//     				'mk_task.manager_name',
    				'mk_task_info.close_time',
    			);
    			$left_join = array(
    				'mk_bstoct_follow' => 'mk_bstoct_follow.bs_to_ct_id = mk_bstoct.bs_to_ct_id',
    				'mk_bstoct_task' => 'mk_bstoct_task.bs_to_ct_id = mk_bstoct.bs_to_ct_id',
//     				'mk_task' => 'mk_task.task_id = mk_bstoct_task.task_id',
    				'mk_task_info' => 'mk_task_info.task_id = mk_bstoct_task.task_id',
    			);
    			$chance_list = $m_bstoct->select($condition, $item, '', '', $left_join)->items;
    			$chance_info = array(
    				'task_num' => 0,
    				'deal_task_num' => 0,
    			);
    			foreach ($chance_list as $each_item) {
    				$chance_info['follow_uid'] = $each_item['follow_uid'];
    				$chance_info['bs_to_ct_id'] = $each_item['bs_to_ct_id'];
    				$chance_info['is_giveup'] = $each_item['is_giveup'];
    				$chance_info['status'] = $each_item['status'];
    				
    				if ($each_item['task_id']) {
    					$chance_info['task_num'] += 1;
    				}
    				
    				if ($each_item['close_time']) {
    					$chance_info['deal_task_num'] += 1;
    				}
    			}
    			
    			if (! $chance_info['is_giveup']) {
    				if ($chance_info['follow_uid']) {
    					$result['title'] = '待爱理';
    					$result['description'] = '商机由售前顾问跟进中';
    				} else {
    					$result['title'] = '未分配';
    					$result['description'] = '商机正分配给售前顾问';
    				}
    				
    				if ($chance_info['status']) {
    					$result['title'] = '跟进中';
    					$result['description'] = '商机跟进中';
    				}
    				
    				if ($chance_info['task_num']) {
    					$result['title'] = '已转化';
    					$result['description'] = '该商机已转化 ' . $chance_info['task_num'] . ' 笔订单';
    				}
    				if ($chance_info['deal_task_num']) {
    					$result['title'] = '已成交';
    					$result['description'] = '该商机已转化 ' . $chance_info['task_num'] . ' 笔订单 ，有 ' . $chance_info['deal_task_num'] . ' 笔已成交';
    				}
    			} else {
    				$result['title'] = '已放弃';
    				$result['description'] = '该商机已放弃';
    			}
    			
    			$result['url'] = zbj_lib_Constant::BOSSWEIXIN_URL . '/index/bsChance?agent_id=' . trim($msg_obj->AgentID) . '&path=/mobile/chance/detail/' . $chance_info['bs_to_ct_id'];
    		} else {
    			$condition = array(
    				'mk_bstoct_contacts.ct_mobile' => $keyword,
    			);
    			$item = array(
    				'count(1) as total',
    			);
    			$left_join['mk_bstoct_contacts'] = 'mk_bstoct_contacts.ct_id = mk_bstoct.ct_id';
    			
    			$search_result = $m_bstoct->selectOne($condition, $item, '', '', $left_join);
    		
    			$result['title'] = '商机搜索结果';
    			$result['description'] = '共搜到 ' . $search_result['total'] . ' 条结果，请点击查看详情';
    			$result['url'] = zbj_lib_Constant::BOSSWEIXIN_URL . '/index/bsChance?agent_id=' . trim($msg_obj->AgentID) . '&path=/mobile/chance/list/%3Fkeyword%3D' . urldecode($keyword);
    		}
    	}
    	
    	return $result;
    }
    /**
     * 三级类目转换为config_id
     * 
     * @author tanqing
     * @date 2015年9月8日
     * @param unknown $id
     * @return number
     */
    static function __getconfigid($id){
        switch (intval($id)) {
            case 1282:
            case 1282:
            case 1284:
            case 165:
            case 1145:
            case 1278:
            case 1475:
            case 267:
            case 1470:
            case 857:
            case 1262:
            case 1269:
            case 287:
            case 1270:
            case 1265:
            case 286:
            case 1266:
            case 1421:
            case 1370:
            case 1371:
            case 1372:
            case 196:
            case 1367:
            case 1369:
            case 1365:
            case 195:
            case 1362:
            case 1297:
            case 1295:
            case 180:
            case 1301:
            case 1300:
            case 1298:
            case 1299:
            case 178:
            case 172:
            case 176:
            case 1290:
            case 1288:
            case 1287:
            case 1416:
            //case 1420:
            case 1417:
            case 1413:
            case 1424:
            case 1418:
                return 104;
                break;
            case 1329:
            case 1328:
            case 1327:
            case 319:
            case 1271:
            case 892:
            case 891:
            case 1296:
            case 1294:
            case 1303:
            case 85:
            case 1247:
            case 1245:
            case 1542:
            case 1248:
            case 1538:
            case 1541:
            case 1540:
            case 1539:
            case 1545:
            case 1544:
            case 1546:
            case 1251:
            case 1250:
            case 1249:
            case 1226:
            case 1231:
            case 1229:
            case 1228:
            case 1230:
            case 1537:
            case 1227:
            case 1535:
            case 1225:
            case 1385:
            case 1386:
            case 1384:
            case 1547:
            case 1243:
            case 1244:
                return 105;
                break;
            /*
            case 1448:
            case 1243:
            case 1244:
                return 105;
            */
                break;
            case 1381:
            case 1375:
            case 1378:
            case 1330:
            case 365:
            case 368:
            case 367:
            case 1333:
            case 1332:
            case 413:
            case 1443:
                return 107;
                break;
            case 1340:
            case 382:
            case 1337:
            case 1331:
            case 1339:
                return 108;
                break;
            case 1430:
            case 1368:
            case 1363:
            case 1004:
            case 1212:
            case 231:
            case 1419:
            case 235:
            case 1423:
            case 1382:
            case 1426:
            case 1429:
            case 1134:
            case 131:
            case 123:
            case 120:
            case 126:
            case 1428:
            case 129:
            case 168:
            case 162:
            case 161:
            case 1431:
            case 177:
            case 170:
            case 1425:
            case 203:
            case 173:
            case 1286:
            case 1448:
                return 109;
                break;
            case 1517:
            case 1465:
            case 1515:
            case 1518:
            case 1512:
            case 1516:
            case 1498:
            case 1513:
            case 1514:
            case 1520:
            case 1519:
            case 1527:
            case 1522:
            case 1525:
            case 493:
            case 1466:
            case 1526:
            case 1524:
            case 1469:
            case 1467:
            case 1523:
            case 1468:
            case 1508:
            case 1507:
            case 1504:
            case 1505:
            case 1510:
            case 348:
            case 1506:
            case 1498:
            case 1493:
            case 1491:
            case 1497:
            case 1496:
            case 1490:
            case 1494:
            case 1498:
            case 1495:
            case 1492:
            case 1502:
            case 1500:
            case 1503:
            case 1501:
            case 350:
                return 110;
                break;
            case 1347:
            case 1349:
                return 111;
                break;
            default:
                return 112;
        }
    }
    /**
     * 机会添加到redis
     * @author tanqing
     * @date 2015-9-15
     */
    public function insertChance2Redis($bs_to_ct_id,$config_id){
    	try {
    		if (!$bs_to_ct_id) {
    			throw new Exception('机会ID丢失');
    		}
    		$config_id = $config_id?$config_id:112;
	    	$redis = new lib_redis();
			$redis->select(2);
	    	$redis_name = 'boss.bschance.redis.config_'.$config_id;
	    	/*
	    	$data = $redis->lRange($redis_name,0,-1);
	    	if (empty($data) || !in_array($bs_to_ct_id, $data)){
	    	    if (false === $redis->lPush($redis_name,$bs_to_ct_id)){
	    	        throw new Exception('redis error');
	    	    }
	    	}
	    	*/
	    	if (false === $redis->lPush($redis_name,$bs_to_ct_id)){
	    	    throw new Exception('redis error');
	    	}
	    	/*
	    	if ($redis->exists($redis_name)){
    	    	if (false === $redis->lPushx($redis_name,$bs_to_ct_id)){
    	    	    throw new Exception('redis error');
    	    	}
	    	}else{
	    	    if (false === $redis->lPush($redis_name,$bs_to_ct_id)){
	    	        throw new Exception('redis error');
	    	    }
	    	}
	    	*/
	    	return true;
    	} catch (Exception $e) {
    		$this->setError(0,$e->getMessage());
    		return false;
    	}
    }
    
    /**
     * 消费redis
     * @author tanqing
     * @date 2015年9月21日
     * @param unknown $bs_to_ct_id
     * @param unknown $config_id
     */
    public function removeRedis($bs_to_ct_id,$config_id){
        if (!$bs_to_ct_id){
            $this->setError(0,'机会id丢失');
            return false;
        }
        $config_id=$config_id?$config_id:112;
        $redis = new lib_redis();
        $redis_name = 'boss.bschance.redis.config_'.$config_id;
        $redis->select(2);
        return  $redis->lRem($redis_name,$bs_to_ct_id);
    }

	/*
	 *获取待抢商机列表
	 */
	public function getRedisConfigList($config_id){
		if(!$config_id){
            $this->setError(0,'config_id丢失');
            return false;
		}
		$config_id = $config_id?$config_id:112;
		$redis = new lib_redis();
		$redis->select(2);
		$redis_name = 'boss.bschance.redis.config_'.$config_id;
		$data = $redis->lRange($redis_name,0,-1);
		return $data;
	}
}
