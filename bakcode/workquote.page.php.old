<?php

use com\zhubajie\task\interfaces\WorkQuoteServiceClient;
use com\zhubajie\task\dataobject\workquote\QuoteItemDTO;
use com\zhubajie\task\dataobject\workquote\QuoteDTO;
use com\zhubajie\task\dataobject\workquote\EditQuoteDTO;
use com\zhubajie\task\dataobject\workquote\QuoteAuditDTO;
use com\zhubajie\task\dataobject\workquote\QuoteDetailResultDTO;

use com\zhubajie\task\dataobject\workquote\GiveupDTO;
use com\zhubajie\task\dataobject\workquote\QuoteTplDTO;
use com\zhubajie\task\dataobject\workquote\TplResultDTO;

/**
 * 报价方案
 * @author 
 * @version 
 * @copyright zhubajie.com
 */
class controller_workquote extends components_basepage{
	
	public function __construct() {
		parent::__construct();
    	if(!$this->_userid){
			$this->ShowMsg('您还没有登录！请先登录');
		}
    	zbj_lib_ApiClient::init(zbj_lib_Constant::ZBJAPI_APPID,zbj_lib_Constant::ZBJAPI_APPSECRET);
	}

	/**
	 * hold住
	 * */
	function pageHold($inPath){
		if($_POST){
			foreach($_POST as $key=>$value){
				$data['data'][$key]=$value;
			}
		}
		foreach($data['data']['followSecondValNdtoList'] as $nsKey=>$nsValue){
			if($nsValue['questionId']==11){
				if($nsValue['answerId']!=38){
					unset($data['data']['followSecondValNdtoList'][$nsKey]);
				}
			}
		}
		$data['param']=json_encode($data);

		$tradFollow=new zbj_service_tradefollow();
		$result=$tradFollow->submitSecondFollow($data);
		return $result;
	}
	
	/**
	 * 提交报价方案
	 * */
	function pagePub($inPath){		
		$postquote = $_POST['priceScheme'];

		if(empty($postquote)){ // 页面
			return $this->render('newbidtpl/quotedprice.tpl', array(), '%');
		}
		
		$checkkey = array();
		foreach($postquote as $key=>$line){
			if(is_array($line) && $line['checked']){
				$checkkey[] = strtolower($key);
			}
		}
		
		$checkkey[] = 'total_price';
		$checkkey[] = 'task_id';
		$checkkey[] = 'works_id';
		
		list($quote,$quoteitem,$savetpl) = $this->checkQuote($checkkey);
	
		if(empty($quote) || empty($quoteitem[0])){
			$this->ShowMsg('获取参数失败');
		}
		
		// 确定是否正常
		$condition = "works_id='{$quote['works_id']}' and dotype=20";
		$workTaskModel = zbj_model_api::get('zbj_model_mk_workstaskstep');
		$worktask = $workTaskModel->selectOne($condition);
		if(empty($worktask['step_id'])){
			$this->ShowMsg('缺少报价方案凭证，请联系客服人员！');
		}else if($worktask['done']==1){
			$this->ShowMsg('报价方案已经提交过了！');
		}else if($worktask['expiretime'] && $worktask['expiretime']<time()){
			$this->ShowMsg('对不起，您已超期！');
		}
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$quoteDTO = new QuoteDTO($quote);
			$items = array();
			foreach($quoteitem as $row){
				$items[] = new QuoteItemDTO($row);
			}
			$quoteDTO->quoteitem = $items;
			
			$pubresult = $api->pub($quoteDTO);
			if($pubresult->success != true){
				throw new Exception($pubresult->message);
			}

			// 保存模版
			if(!$savetpl['savetpl']){
				$this->ShowMsg('报价方案提交成功',"",3 ,1);
			}
		
			$tplarray = array(
				'tpl_name'	=> $savetpl['tplname'],
				'special_type'	=> 1, // 网建专场
				'tpl_type'		=> 1, // 能力模版
				'user_id'		=> $this->_userid,
				'nickname'		=> $this->_nickname,
				'quote'		=> $quoteDTO,
			);
			$quotetpl = new QuoteTplDTO($tplarray);
			$pubresult = $api->saveTpl($quotetpl);
			if($pubresult->success != true){
				throw new Exception($pubresult->message);
			}
		}catch(Exception $e){
			$this->ShowMsg($e->getMessage());
		}
		$this->ShowMsg('报价方案提交成功',"",3,1);
	}
	
	
	/**
	 * 获取报价方案详细
	 * */
	function pageDetail($inPath){
		$url = $this->getUrlParams($inPath);
		$quoteid = intval($url['id']);
		if($quoteid <= 0){
			$this->ShowMsg('缺少必要的参数');
		}
		
		$params = array();
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$result = $api->getDetail($quoteid);
			
			if($result->success != true){
				throw new Exception($result->message);
			}
			$quote = (array)$result->quote;
			
			$srvTask = new zbj_service_task($quote['task_id']);
			$srvTask = $srvTask->init();
			$task = $srvTask->get('*');
			if(!in_array($this->_userid,array($quote['user_id'],$task['user_id']))){
				$this->ShowMsg('非法的提交请求');
			}
			
			foreach($quote['quoteitem'] as $k=>$item){
				$item = (array)$item;
				$item['content'] && $item['content'] = (array)(@unserialize($item['content']));
				$intro = $item['content']['team_introduce'];
				!empty($intro) && $item['content']['team_introduce'] = str_replace(array('\"'),array('"'),$intro);
				unset($quote['quoteitem'][$k]);
				$quote['quoteitem'][$item['item_key']] = $item;
			//	$quote['quoteitem'][$k] = $item;
			}
			
		}catch(Exception $e){
			$quote = array();
		}
		
		$params['task'] = $task;
	//	$params['taskinfo'] = $srvTask->get('task_info.*');
		$params['quote'] = $quote;
		
		return $this->render('newbidtpl/quotedprice.tpl', $params, '%');
	}
	
	/**
	 * 提交报价方案
	 * */
	function pageEdit($inPath){
		$postquote = $_POST['priceScheme'];
		
		$checkkey = array();
		foreach($postquote as $key=>$line){
			if(is_array($line) && $line['checked']){
				$checkkey[] = strtolower($key);
			}
		}
		
		$checkkey[] = 'total_price';
		$checkkey[] = 'task_id';
		$checkkey[] = 'works_id';
		$checkkey[] = 'quote_id';
		
		list($quote,$quoteitem,$savetpl) = $this->checkQuote($checkkey);
	
		if(empty($quote) || empty($quoteitem[0])){
			$this->ShowMsg('获取参数失败');
		}
		$tplquote = $quote;
		unset($quote['task_id'],$quote['works_id'],$quote['user_id'],$quote['nickname']);
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$rsquote = $api->getDetail($quote['quote_id']);
			if($rsquote->success != true){
				throw new Exception($rsquote->message);
			}
			$oldQuote = $rsquote->quote;
			if($oldQuote->user_id != $this->_userid){
				$this->ShowMsg('非法的提交请求');
			}
			
			$editQuote = new EditQuoteDTO();
			$editQuote->quote_id = $quote['quote_id'];
			$editQuote->quote = $quote;
			$items = array();
			foreach($quoteitem as $row){
				$items[] = new QuoteItemDTO($row);
			}
			$editQuote->quoteitem = $items;
				
			$result = $api->edit($editQuote);
			if($result->success != true){
				throw new Exception($result->message);
			}
			
			// 保存模版
			if(!$savetpl['savetpl']){
				$this->ShowMsg('修改报价方案成功',"",3 ,1);
			}
			
			$quoteDTO = new QuoteDTO($tplquote);
			$items = array();
			foreach($quoteitem as $row){
				$items[] = new QuoteItemDTO($row);
			}
			$quoteDTO->quoteitem = $items;
			
			$tplarray = array(
				'tpl_name'	=> $savetpl['tplname'],
				'special_type'	=> 1, // 网建专场
				'tpl_type'		=> 1, // 能力模版
				'user_id'		=> $this->_userid,
				'nickname'		=> $this->_nickname,
				'quote'		=> $quoteDTO,
			);
			$quotetpl = new QuoteTplDTO($tplarray);
			$saveresult = $api->saveTpl($quotetpl);
			if($saveresult->success != true){
				throw new Exception($saveresult->message);
			}

		}catch(Exception $e){
			$this->ShowMsg($e->getMessage());
		}
		$this->ShowMsg('修改报价方案成功',"",3,1);
	}
	
	/**
	 * 放弃报价方案
	 * */
	function pageGiveup($inPath){
		if(zbj_lib_BaseUtils::isAjax() !== true){
			$this->ShowMsg('仅支持AJAX请求模式');
		}
	//	$url = $this->getUrlParams($inPath);
		$quoteid = intval($_POST['id']);
		if($quoteid <= 0){
			$this->ShowMsg('传递的参数错误');
		}
		$reason = zbj_lib_BaseUtils::getStr(trim($_POST['reason']));
		$reasonLen = mb_strlen($reason,'UTF-8');
		if($reasonLen == 0){
			$this->ShowMsg('请填写放弃的原因');
		}else if($reasonLen > 100){
			$this->ShowMsg('放弃的原因为100字以内');
		}
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$rsquote = $api->getDetail($quoteid);
			if($rsquote->success != true){
				throw new Exception($rsquote->message);
			}
			$oldQuote = $rsquote->quote;
			if($oldQuote->user_id != $this->_userid){
				$this->ShowMsg('非法的提交请求');
			}
			
			$giveupDTO = new GiveupDTO();
			$giveupDTO->quote_id = $quoteid;
			$giveupDTO->reason 	= $reason;
			$giveupDTO->roletype = 1; // 操作人分类， 1：服务商 ，2雇主，3交易顾问，4系统
			
			$result = $api->giveup($giveupDTO);
			if($result->success != true){
				throw new Exception($result->message);
			}
		}catch(Exception $e){
			$this->ShowMsg($e->getMessage());
		}
		
		$this->ShowMsg('操作放弃成功',"",3,1);
	}
		
	/**
	 * 获取所有报价方案模版
	 * */
	function pageTpls($inPath){
		if(zbj_lib_BaseUtils::isAjax() !== true){
			$this->ShowMsg('仅支持AJAX请求模式');
		}
		$url = $this->getUrlParams($inPath);
		empty($url['tpltype']) && $url['tpltype'] = 1; // 默认取能力模版的
		empty($url['spectype']) && $url['spectype'] = 1; // 默认取网建专场的
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$result = $api->getTpls($this->_userid,$url['spectype'],$url['tpltype']);
			
			if($result->success != true){
				throw new Exception($result->message);
			}
			
			$quotetpls = (array)$result->quotetpls;
			
			foreach($quotetpls as $k1=>$tpl){
				$tpl = (array)$tpl;
				$tpl['quote'] = (array)$tpl['quote'];
				$tpl['quote']['quoteitem'] = (array)$tpl['quote']['quoteitem'];
								
				if($tpl['tpl_type'] == 1){ // 能力模版
					$tpl['team_desc'] = $this->getQuoteTplItem($tpl['quote']['quoteitem'],$tpl['tpl_type']);
					unset($tpl['quote']);
				}else if($tpl['tpl_type'] == 2){ // 报价方案模版
					$tpl['quote']['quoteitem'] = $this->getQuoteTplItem($tpl['quote']['quoteitem'],$tpl['tpl_type']);
				}
				$quotetpls[$k1] = $tpl;
			}
			
		}catch(Exception $e){
			$quotetpls = array();
		}
		
		echo json_encode($quotetpls); exit;
	}
	
	/**
	 * 获取1个报价方案模版详细
	 * */
	function pageTpl($inPath){
		if(zbj_lib_BaseUtils::isAjax() !== true){
			$this->ShowMsg('仅支持AJAX请求模式');
		}
		$url = $this->getUrlParams($inPath);
		$tplid = intval($url['id']);
		if($tplid <= 0){
			$this->ShowMsg('传递的参数错误');
		}
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$result = $api->getTplDetail($this->_userid,$tplid);
			if($result->success != true){
				throw new Exception($result->message);
			}
			
			$tpl = (array)$result->quotetpls;
			$tpl = (array)$tpl[0];
			if(empty($tpl)){
				throw new Exception('模版不存在');
			}
			
			$tpl['quote'] = (array)$tpl['quote'];
			$tpl['quote']['quoteitem'] = (array)$tpl['quote']['quoteitem'];
			
			if($tpl['tpl_type'] == 1){ // 能力模版
				$tpl['team_desc'] = $this->getQuoteTplItem($tpl['quote']['quoteitem'],$tpl['tpl_type']);
				unset($tpl['quote']);
			}else if($tpl['tpl_type'] == 2){ // 报价方案模版
				$tpl['quote']['quoteitem'] = $this->getQuoteTplItem($tpl['quote']['quoteitem'],$tpl['tpl_type']);
			}
									
		}catch(Exception $e){
			$this->ShowMsg($e->getMessage());
		}
		
		echo json_encode($tpl); exit;
	}
	
	/**
	 * 获取模版项
	 * */
	private function getQuoteTplItem($quoteitem,$tpltype){
		$quoteitem = (array)$quoteitem;
		
		$strfind = array('\"');
		$strrep = array('"');
		
		$tplcont = array();
		
		if($tpltype == 1){ // 能力模版
			foreach($quoteitem as $k2=>$item){
				$item = (array)$item;
				if($item['item_key'] == 'team_desc'){ // 能力项
					$tplcont = @unserialize($item['content']);
					$tplcont['team_introduce'] = str_replace($strfind,$strrep,$tplcont['team_introduce']);
					break;
				}
			}
		}else if($tpltype == 2){  // 报价方案模版
			foreach($quoteitem as $k2=>$item){
				$item = (array)$item;
				$item['content'] = @unserialize($item['content']);
				if($item['item_key'] == 'team_desc'){ // 能力项
					$item['content']['team_introduce'] = str_replace($strfind,$strrep,$item['content']['team_introduce']);
				}
				
				$tplcont[$k2] = $item;
			}
		}
		unset($quoteitem);
		return $tplcont;
	}
	
	/**
	 * 删除1个报价方案模版
	 * */
	function pageDelTpl($inPath){
		if(zbj_lib_BaseUtils::isAjax() !== true){
			$this->ShowMsg('仅支持AJAX请求模式');
		}
		$url = $this->getUrlParams($inPath);
		$tplid = intval($url['id']);
		if($tplid <= 0){
			$this->ShowMsg('传递的参数错误');
		}
		
		try{
			$api = new WorkQuoteServiceClient(NULL);
			zbj_lib_ApiClient::build($api);
			
			$result = $api->removeTpl($this->_userid,array($tplid));
			if($result->success != true){
				throw new Exception($result->message);
			}
		}catch(Exception $e){
			$this->ShowMsg($e->getMessage());
		}
		
		$this->ShowMsg('模版删除成功',"",3,1);
	}
		
	/**
	 * 验证参数
	 * 
	 * */
	private function checkQuote(array $params){
		$postquote = $_POST['priceScheme'];
		
		$index = 0; $savetpl = false;
		$quote = $quoteitem = array();
		$tplname = '';
		foreach($params as $k){
			$v = $postquote[$k];
			$k = strtolower($k);
			switch($k){
				case 'product_plan':
					empty($modulename) && $modulename = '产品规划';
				case 'page_design':
					empty($modulename) && $modulename = '页面设计';
				case 'product_module':
					empty($modulename) && $modulename = '功能开发';
				case 'product_protect':
					empty($modulename) && $modulename = '产品培训及售后';
					
					if(in_array($k,array('product_plan','product_module'))){
						$v['content'] = (array)$v['content'];
						foreach($v['content'] as $ppk=>$row){
							$v['content'][$ppk]['title'] = zbj_lib_BaseUtils::getStr($row['title']);
							$v['content'][$ppk]['description'] = zbj_lib_BaseUtils::getStr($row['description']);
						}
					}else if(in_array($k,array('page_design'))){
						$v['content'] = (array)$v['content'];
						foreach($v['content'] as $ppk=>$row){
							$v['content'][$ppk]['name'] = zbj_lib_BaseUtils::getStr($row['name']);
							$v['content'][$ppk]['count'] = zbj_lib_BaseUtils::getStr($row['count'],'int');
						}
					}else if(in_array($k,array('product_protect'))){
						$v['content'] = (array)$v['content'];
						foreach($v['content'] as $ppk=>$row){
							$v['content'][$ppk] = zbj_lib_BaseUtils::getStr($row);
						}
					}
					
					$item = array();
					
					$item['checked'] = (int)$v['checked']?1:0;
					$item['price'] = round((float)$v['price'],2);
					
					if($item['checked'] && empty($v['content'])){
						$this->ShowMsg('请填写'.$modulename);
					}
					if($item['price']<0 || $item['price']>9999999){
						$this->ShowMsg($modulename.'报价应为0-9999999');
					}
					if($item['checked'] && empty($v['content'][0])){
						$this->ShowMsg('请至少填写一项'.$modulename);
					}
					
					$item['sort'] = $index * 10;
					$item['item_key'] = $k;
					$item['content'] = serialize($v['content']);
					
					$quoteitem[] = $item;
				
					break;
				
				case 'other_add':
					$item = array();
					
					$item['checked'] = $v['checked']?1:0;
					$content = zbj_lib_BaseUtils::getStr(trim($v['content']));
					$mblen = mb_strlen($content,'UTF-8');
					if($item['checked'] && $mblen == 0){
						$this->ShowMsg('请填写补允说明');
					}
					if($mblen > 10000){
						$this->ShowMsg('补允说明必须在10000字以内');
					}
					
					$item['sort'] = $index * 10;
					$item['item_key'] = $k;
					$item['content'] = serialize($content);
					$quoteitem[] = $item;
					break;
					
				case 'time_and_pay':
					$quote['day'] = (int)$v['dev_day'];
					if($quote['day'] <= 0){
						$this->ShowMsg('请正确填写开发周期');
					}
					$quote['paytype'] = (int)$v['pay_type'];
					break;
				
				case 'total_price':
					$quote['totalprice'] = round((float)$v,2);
					if($quote['totalprice'] <= 0){
						$this->ShowMsg('项目总报价错误');
					}
					break;
					
				case 'team_desc':
					$item = array();
					$savetpl = $v['is_save_tpl']==1?true:false;
					$tplname = zbj_lib_BaseUtils::getStr($v['tpl_name']);
					$tplnamelen = mb_strlen($tplname,'UTF-8');
					if($savetpl && $tplnamelen<1 || $tplnamelen>30){
						$this->ShowMsg('模版名称为1-30个字符');
					}
					
					$team = array();
					$team['team_introduce'] = zbj_lib_BaseUtils::getStr($v['team_introduce'],'html');
					if(mb_strlen(strip_tags($team['team_introduce']),'UTF-8') > 5000){
						$this->ShowMsg('团队简介必须在5000字以内');
					}
					
					$v['team_case'] = (array)$v['team_case'];
					foreach($v['team_case'] as $tck=>$case){
						$case['site_name'] = zbj_lib_BaseUtils::getStr($case['site_name']);
						if(mb_strlen($case['site_name'],'UTF-8')>30){
							$this->ShowMsg('类似按例的网站名称必须为30字以内');
						}
						$v['team_case'][$tck] = $case;
					}
					$team['team_case'] = $v['team_case'];
					
					$item['checked'] = (int)$v['checked']?1:0;
					$item['sort'] = $index * 10;
					$item['item_key'] = $k;
					$item['content'] = serialize($team);
					$quoteitem[] = $item;
					break;
					
				case 'task_id':
					$quote['task_id'] = intval($v);
					if($quote['task_id'] <= 0){
						$this->ShowMsg('请指定需求编号');
					}
					break;
					
				case 'works_id':
					$quote['works_id'] = intval($v);
					if($quote['works_id'] <= 0){
						$this->ShowMsg('请指定稿件编号');
					}
					$workModel = zbj_model_api::get('zbj_model_mk_works',$quote['works_id']);
					$work = $workModel->getData();
					if($work['user_id'] != $this->_userid || !$work['user_id']){
						$this->ShowMsg('指定的稿件编号错误');
					}
					break;
						
				case 'quote_id':
					$quote['quote_id'] = intval($v);
					if($quote['quote_id'] <= 0){
						$this->ShowMsg('请指定报价方案编号');
					}
					break;
			}
			
			$index+=1;
		}
		
		$quote['user_id'] = $this->_userid;
		$quote['nickname'] = $this->_nickname;
		
		return array($quote,$quoteitem,array('savetpl'=>$savetpl,'tplname'=>$tplname));
	}
}
