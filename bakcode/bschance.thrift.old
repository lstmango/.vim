
namespace * com.zhubajie.boss.dataobject.bschance

###################base################
struct DbSelectResultDO 
{
    1: i64 page,
    2: i64 pageSize,
    3: i64 limit,
    4: i64 totalPage,
    5: i64 totalSecond,
    6: i64 totalSize,
    7: list<map<string,string>> items
}
struct RedisListDo
{
    1: bool success,
    2: i32 code,
    3: string message,
    4: list<i64> items
}

struct DbListResultDO
{
    1: bool success,
    2: i32 code,
    3: string message,
    4: optional DbSelectResultDO data_obj
}

struct actionResultDO {
    1: bool success,
    2: i32 code,
    3: string message,
    4: optional map<string,string> ext_params,
}


#日志类型
enum actLogType {
    INTERACT = 1,
    PAY = 2,
    PLATFORM = 3,
	TRADE = 4,
}

#互动记录
struct interActLogDO {
    1: i16 type,
    2: i32 manage_id,
    3: map<string,string> expand,
}

#互动类型
enum interActType {
	ADVISORY = 1,
	WEIXIN = 2,
	TEL = 3,
	REPORT = 4,
	SUG = 5,
	NPS = 6,
}

#支付记录
struct PayLogDO {
	1: i16 type,
	2: double amount,
}

#支付记录类型
enum PayLogType{
	CHARGE = 1,
	HOSTED = 2,
	BUY = 3,
	INCOME = 4,
	WITHDRAW = 5,
}

#平台行为记录
struct PlatFormLogDO {
	1: i16 type,
	2: optional string keyword,
	3: optional i32 virtual_id,
	4: optional i32 service_id,
}

#平台行为类型
enum PfLogType {
	LOGIN = 1,
	SEARCH = 2,
	VIEW_CATE = 3,
	VIEW_SERVICE = 4,
}

#交易记录
struct TradeLogDO{
	1: i32 task_id,
	2: i16 type,
	3: double trade_amount,
	4: i16 trade_mode,
	5: i16 trade_state,
	6: i32 trade_category,
}

#交易记录类型
enum TradeLogType{
	PUB = 1,
	WORK = 2,
	DONE = 3,
}



###################################




#员工信息
struct CbInfoParamDO{
1:i64 cb_id, #员工id
2:optional i64 cb_total_chance, #累积机会数
3:optional i64 cb_total_ct, #累积发展联系人
4:optional double cb_publish_amount, #累积发布金额
5:optional double cb_finish_amount,  #累积成交金额
6:optional double cb_can_use_amount, #可用提现金额
7:optional double cb_have_use_amount,#已经使用的提现金额
8:optional double cb_total_use_amount#总提现金额
}



#员工机会
struct CbChanceParamDO{
1: optional i32 page=1,
2: optional i32 limit=20,
3: optional i64 cb_id,
4: optional i64 chance_id, #机会id
5: optional string orderby #排序字段
}

enum chanceStatus{
    NOT_HOST    = 0, #未托管
    HOST        = 1, #已托管
    FINISH      = 2, #已成交
    CLOSE       = 3  #关闭
}

enum actionType{
    NEWCHANCE	= 0, #新建机会
    HOSTED		= 1, #已托管
    FINISHED	= 2, #已成交
    CLOSEBYPUB  = 3, #发布人关闭机会
    CLOSEBYSYS	= 4, #系统关闭机会
    CLOSEBYFOL	= 5, #顾问关闭机会
}

enum TaskAllot
{
	SINGLE = 1,
	MULTI = 2,
	PIECE = 3,
}

# 1 比稿, 2 计件, 3 招标
enum VirtualTaskMode
{
	REWARD_WORKS = 1,
	PIECE_WORKS = 2,
	BIDDING_WORKS = 3,
}

struct PubTaskAllotInfoDO
{
	1: i32 percent,
	2: i32 num, # 计件数量
	3: double amount, # 单件价格
}

struct PubTaskAllotDO
{
	1: TaskAllot allot,
	2: list<PubTaskAllotInfoDO> allot_info
}



#任务信息
struct ChanceTaskParamDO{
1: i64 pub_cb_id, #发布人id
2: string chance_description,  #机会描述
3: string ct_name, #雇主姓名
4: i64 ct_mobile, #雇主电话
5: string chance_name, #机会名称
6: double pub_amount, #发布金额
7: i64 category_id,   #类目id
8: VirtualTaskMode mode,
9: i64 user_id,
10: string nickname,
11: i32 source,#来源 0主站 1捷印通
12: optional i64 task_id,
13: optional i32 works_num,#稿件数量
14: optional i64 pub_cb_ip,#发布者ip
}


#机会排序字段
enum chanceOrderCol{
    PUBAMOUNT		=1,#发布金额排序
    HOSTAMOUNT		=2,#托管金额排序
    ENDMOUNT		=3,#成交金额排序
    CHANCEID		=4,#机会id
    PUBCBID			=5,#机会发布人员id，销售id
    CREATETIME		=6,#创建时间
    FOLLOWTIME      =7,#跟进时间
    ALLOTTIME       =8,#分配时间
}

#机会时间段筛选
enum chanceTimeFilter{
   	BEFORE7DAYS		=1,#7天以前
    BEFORE30DAYS	=2,#30天以前
	BEFORE90DAYS	=3,#90天以前
}

#机会信息筛选
struct ChanceListFilter{
1: optional	i64 pub_cb_id,   # 发布人id
2: optional i64 fw_cb_id, # 跟进人员id
3: optional i64 chance_id, # 机会id
4: optional i32 status,#机会状态
5: optional string order_by, #排序字段
6: optional i32 page=1,
7: optional i32 limit=20,
8: optional i64 timeline,
9: optional chanceTimeFilter timeLimit,
10: optional	list<map<chanceOrderCol,bool>>	order,#排序对象
11: optional i64 task_id,#任务id
12: optional string ct_name,#联系人姓名
13: optional i64 ct_mobile,#联系人手机
14: optional string cb_name,#发布人姓名
15: optional i64 starttime,#开始时间
16: optional i64 endtime,#截止时间
}
#提现用到的筛选条件
struct WithDrawFilter{
1: optional i32 year, #年筛选
2: optional i32 month,#月筛选
3: optional i32 page=1,
4: optional i32 limit=20,
5: optional list<i64> pub_cb_ids,#发布人id列表
}

#机会时间段筛选
enum WithDrawType{
   	WITHDRAW		=1,#已经提现
    NOTWITHDRAW		=2,#未提现
}


#机会系统 boss后台管理接口 用到的筛选对象
struct GroupByFilter{
1: optional i64 starttime, 	#开始时间
2: optional i64 endtime,	#结束时间
3: optional list<i32> groupByType,
4: optional	i64 pub_cb_id,   # 发布人id
5: optional string ct_name,#联系人姓名
6: optional i64 ct_mobile,#联系人手机
7: optional string cb_name,#发布人姓名
8: optional i64 chance_id, # 机会id
9: optional i32 status,#机会状态
}
#机会系统 boss后台管理接口 用到的group by  对象
enum GroupByType{
   	PUBCBID			=1,#发布人
    TIMEYMD			=2,#机会创建时间
    STATUS			=3,#机会状态
	FWCBID			=4,#跟进客服id    
}
enum SEX {
	SEX_DEFAULT=0,#默认
	MALE = 1,#男
	FEMALE = 2,#女
}
#业务对象
struct BusinessDO{
#1: i64 bs_id,       #主键
#2: i64 parent_id,   #父业务id

3: string name,     #名称
4: string describle,#描述
5: i64 createtime,  #创建时间
6: string createymd,
7: i64 create_uid, #创建人id(boss)
}



#联系人对象
struct ContactorDO{
	1: i64 ct_id,
	2: i64 cp_id,       #公司id
	3: string ct_name,  #姓名
	4: SEX ct_sex,      #性别
	5: i32 ct_age,      #年纪
	6: i64 ct_qq,       #qq
	7: string ct_mobile,   #手机
	8: string ct_email,  #邮箱
	9: i64 user_id,         #用户id
	11:string note#创建任务备注
	12: i64 bosscreate_uid, #创建人id(boss)
	13: i64 cat1,     #分类1
	14: i64 cat2,     #分类2
	15: i64 cat3     #分类3
	16:string ct_tel,#联系电话号码一般指座机
	17:i64 ip,#创建人IP地址
	18: i16 isurgent,        #是否加急0其它,1加急客户,2重点客户
	19: string surgent_note,       #非加急（其他）对应备注
	20: i16 source,#子来源0无
	21: i64 base_cat3,#基础类目来源
}

enum DEALSTATUS {
	WAITDEAL = 1,#待受理
	DEALING = 2,#跟进库
	ORDERED = 3,#已经创建订单
	GIVEUP = 4,#放弃库
	NOTALLOT = 5,#未分配
}
#跟进状态
enum FollowStatus{
	NORMAL = 1;   #正常
	TIME_OUT = 2; #已超期
	TODAY_UNFOLLOW=3; #今日待跟进
	TODAY_FOLLOWED =4; #今日已跟进
}
#业务筛选
struct BusinessFilter{
	2: optional i32 page=1,
	3: optional i32 limit=20,
	4: optional list<i64> follow_uid, #机会顾问uid
	5: optional i64 createtimeupper, #创建时间上限
	6: optional list<i64> create_uid, #创建人id(boss)
	7: optional i64 ct_mobile,   #手机
	8: optional i64 createtimelower, #创建时间下限
	9: optional i64 bs_to_ct_id,#机会id
	10: optional i64 uid,#前台用户id
	11: optional string unickname,#前台用户昵称
	12: optional string categoryname,#类目名称
	13: optional i32 source,#机会子来源
	14: optional list<map<chanceOrderCol,bool>>	order,#排序对象
	15: optional i64 followtimeupper,#跟进时间上限
	16: optional i64 followtimelower,#跟进时间下限
	17: optional i32 is_giveup,#是否放弃
	18: optional i64 allottimeupper,#分配时间上限
	19: optional i64 allottimelower,#分配时间下限
	20: DEALSTATUS dealstatus,#类型
	21: optional i64 ordertimeupper,
	22: optional i64 ordertimelower,
	23: optional i64 giveuptimeupper,
	24: optional i64 giveuptimelower,
	25: optional i32 way_type,#来源
	26:FollowStatus follow_status,#跟进状态
	27: optional string nextfollowtimemin,#下次跟进时间上限
	28: optional string nextfollowtimemax,#下次跟进时间下限
	29: i32 orderChanceType ,#订单转换原因，1人工，2，自然
	30: bool includeTask,#是否返回任务
	31: optional i64 base_cat3,#基础三级类目
	32: optional i64 base_cat2,#基础二级类目
	33: optional i64 base_cat1,#基础一级类目
}
#业务绑定联系人跟进状态
enum BSATUS{
UNFOLLOWED = 0,
FOLLOWED = 1,
}

#联系人到平台用户
struct CtToU {
1:i64 ct2u_id,
2:i64 ct_id,#联系人id
3:i64 user_id,#前台用户id
4:i64 from_user_id,#
5:string unickname,#前台用户昵称
6:i64 bs_to_ct_id,#机会id
}
#业务相关微机会(更新操作)
struct ChanceBussinessDo {
	1:  i64 bs_to_ct_id,#机会id
	2:  i64 follow_uid,#顾问id
	3:  i64 allottime,#分配时间
	4:  i64 ordertime,#订单时间
	5:  string unickname,
	6:  ContactorDO contactorDO,
	7: string next_follow_time,#下次跟进时间
}
#跟进
struct FollowInfoDO {
    1: i32 bs_to_ct_id, #主键与cm_bstoct 主键一致
    2: string follow_remark, #跟进内容
    3: bool is_giveup, #是否放弃
    4: string giveup_reason_remark, #放弃原因
    5: i32 follow_user_id, #跟进用户
    6: i32 follow_option, #跟进记录
    7: i32 giveup_option, #放弃原因
    8: string next_follow_time, #下次跟进时间 YYY-MM-DD HH:II:SS
}

#商机会统计数据查询条件
struct QueryCountDO {
	1: i32 user_id,        #后台用户
	2: string count_date,  #统计时间
	3: i16 type,           #维度
}
#查询
struct QueryParamsDO {
    1: i16 page,
    2: i16 limit,
    3: i32 user_id, #boss后台用户id
    4: i16 user_type, #用户类型 1：普通用户；2销售顾问；
    5: string min_create_ymd, #按创建时间查询开始时间
    6: string max_create_ymd, #按创建时间查询结束时间
    7: string min_allot_ymd, #按分配时间查询开始间间
    8: string max_allot_ymd, #按分配时间查询结束时间
    9: i16 state, #状态1创建 2分配 3跟进 4转化 5成交 6我的分成
	10: string keywork, #用于搜索
}
#冗余信息
struct OptionsDO {
	1: i32 bs_to_ct_id     #主键与cm_bstoct 主键一致
	2: i16 isurgent        #是否加急0其它,1加急客户,2重点客户
	3: string note         #非加急（其他）对应备注
	4: i32 bosscreate_uid, #创建人id(boss)
}

#抢机会
struct grabParamsDO{
	1:i32 manager_id,#
	2:list<i32> config_ids,#
	3:i32 next_follow_time,#下次跟进时间
	4:bool is_allot,#是否是分配 true进行分配机会 false抢机会
	5:list<map<string,string>> config_managers;
}
#抢商机返回的状态
enum grabChanceStatus{
	SUCCESS = 1;#抢单成功
    NOCHANCE = 2;#失败-没有适合机会
    SAMEPHONE = 3;#失败-相同号码被自动分配给对应manager
    MANUAL = 4;#失败-人工创建被自动分配给对应manager
    UNACCEPTCHANCE = 5;#失败-已经拥有一个机会待受理
    ERROR_FOLLOW = 6;#锁定顾问失败
    FOLLOWED=7;#已经分配
}

