<?php
use com\zhubajie\boss\interfaces\userServiceIf;
use com\zhubajie\boss\dataobject\user\userDo;
use com\zhubajie\boss\dataobject\user\userinfoDo;
use com\zhubajie\boss\dataobject\user\userBaseInfoDo;
use com\zhubajie\boss\dataobject\user\execResult;
use com\zhubajie\boss\dataobject\user\allotInfoList;
use com\zhubajie\boss\dataobject\user\allotInfo;
use com\zhubajie\boss\dataobject\group\GroupType;
use com\zhubajie\boss\dataobject\user\userNicknamesListDO;
use com\zhubajie\boss\dataobject\user\userNicknamesDO;
use com\zhubajie\boss\dataobject\user\serachUserListDO;
class api_UserService implements userServiceIf {
	public function changeUuid($user_id) {
		$s_user = new service_cp_user ( $user_id );
		if ($s_user->get ( 'user_id' ) == 0) {
			throw new Exception ( '用户不存在' );
		}
		$s_user->set ( 'user_info.auth_uuid', lib_BaseUtils::uuid () );
		if ($s_user->save ()) {
			return true;
		} else {
			return false;
		}
	}
	public function getUser($user_id) {
		$s_user = new service_cp_user ( $user_id );
		if ($s_user->get ( 'user_id' ) == 0) {
			throw new Exception ( '用户不存在' );
		}
		$userdo = new userDo ();
		$userdo->user_id = $s_user->get ( 'user_id' );
		$userdo->truename = $s_user->get ( 'truename' );
		$userdo->state = $s_user->get ( 'state' );
		$userdo->sex = $s_user->get ( 'sex' );
		$userdo->nickname = $s_user->get ( 'nickname' );
		$userdo->name = $s_user->get ( 'name' );
		$userdo->isordermail = $s_user->get ( 'isordermail' );
		$userdo->isleave = $s_user->get ( 'isleave' );
		$userdo->isleader = $s_user->get ( 'isleader' );
		$userdo->group_id = $s_user->get ( 'group_id' );
		return $userdo;
	}
	public function getUserInfo($user_id) {
		$s_user = new service_cp_user ( $user_id );
		if ($s_user->get ( 'user_id' ) == 0) {
			throw new Exception ( '用户不存在' );
		}
		$userInfoDo = new userinfoDo ();
		$userInfoDo->user_id = $s_user->get ( 'user_id' );
		$userInfoDo->rcba = json_encode ( unserialize ( $s_user->get ( 'user_info.rcba' ) ) );
		$userInfoDo->enable_otpauth = $s_user->get ( 'user_info.enable_otpauth' );
		return $userInfoDo;
	}
	/* (non-PHPdoc)
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::getUserInfoByName()
	 */
	public function getUserInfoByName($name) {
		$m_user = new model_cp_user ();
		$condition = array ();
		$condition ['name'] = $name;
		$user = $m_user->selectone ( $condition );
		if ($user) {
			return self::getUserInfo ( $user ['user_id'] );
		} else {
			return null;
		}
	}
	
	
	/* 
	 * 获取用户的基本信息(non-PHPdoc)
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::getUserBaseInfo()
	 */
	public function getUserBaseInfo($user_id){
		$result= new userBaseInfoDo();
		try {
			$s_user=new service_cp_user($user_id);
			if ($s_user->get('user_id')==0) {
				throw new Exception('用户不存在');
			}
			$userinfo=$s_user->get();
			$result->user_id=$user_id;
			$result->nickname=$userinfo['nickname'];
			$result->truename=$userinfo['truename'];
			$result->sex=$userinfo['sex'];
			$result->email=$userinfo['email'];
			$result->isonline=$userinfo['isonline'];
			$result->birthday=$userinfo['birthday'];
			$result->department=$userinfo['department'];
			$result->group_id=$userinfo['group_id'];
			$result->isleader=$userinfo['isleader'];
			$result->isleave=$userinfo['isleave'];
			$result->isonline=$userinfo['isonline'];
			$result->mobi=$userinfo['mobi'];
			$result->motto=$userinfo['motto'];
			$result->qq=$userinfo['qq'];
			$result->tel=$userinfo['tel'];
			$result->worknum=$userinfo['worknum'];
			$result->wechat=$userinfo['wechat'];
			$result->userface=$s_user->getuface();
			$result->postion=$s_user->get('postion');
			//collectNav 收藏导航
			$arr = unserialize($userinfo['options']);
			if ($arr['favnavs']) {
				$result->favnavs=$arr['favnavs'];
			}
			$result->entry_ymd=$arr['entry_ymd'];
			$result->good_num=(int)$arr['good_num'];
			$result->job_grade = (int)$userinfo['job_grade'];
			//返回数据
			$result->success = TRUE;
			$result->code = 0;
		} catch (Exception $e) {
			$result->success = FALSE;
			$result->code = $e->getCode();
			$result->message = 'USER_BASEINFO_ERROR:' . $e->getMessage();
		}
		return $result;
	}
	/* (non-PHPdoc)
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::sentMail()
	 */
	public function sentMail($user_id, $title, $content) {
		$s_user = new service_cp_user ( $user_id );
		$s_user->sentmail ( $title, $content );
		return true;
	}

	/* (non-PHPdoc)
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::sentSms()
	 */
	public function sentSms($user_id, $content) {
		$s_user = new service_cp_user ( $user_id );
		$s_user->sentsms ( $content );
		return true;
	}

	/* (non-PHPdoc)
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::sentWechat()
	 */
	public function sentWechat($user_id, $content) {
		$s_user = new service_cp_user ( $user_id );
		$s_user->sentwechat ( $content );
		return true;
	}
	/**
	 * 开启关闭受理
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::trunAllot()
	 */
	public function trunAllot(\com\zhubajie\boss\dataobject\user\Inputallotinfo $inputAllot) {
		$result=new execResult();
		$result->sucess=true;
		if($result->sucess){
			if($inputAllot->user_id<=0){
				$result->sucess=false;
				$result->message="用户ID不能为空";
			}
		}
		$condition=array();
		$m_allot=new model_cp_allot();
		$condition['manager_id']=$inputAllot->user_id;
		if($result->sucess){
			$data=array();
			if($inputAllot->isonline){
				if (date('H') >= 23 or date('H') <= 8) {
					$result->sucess = false;
					$result->message = "目前不在上线时间段，无法操作。";
				}else{
					$data['isonline']=1;
				}
			}else{
				$data['isonline']=0;
			}
		}
        $s_cache = new zbj_lib_cache('memcache');
        $key = "boss.allot.cannotclick.cp_allot_config.config_id";
        $cache = $s_cache->get($key);
        if (!is_array($cache)) {
			$m_allotconfig=new model_cp_allotconfig();
			$allotData[]='pid in (1,96)';
			$allotConfigArray=$m_allotconfig->select($allotData,'id')->items;
			if($allotConfigArray){
				$s_cache->set($key, $allotConfigArray,600);
			}
        }
		else{
			$allotConfigArray=$cache;
		}
		$allotConfigIdArray=array(130);
		if($allotConfigArray){
			foreach($allotConfigArray as $acValue){
				$acid = intval($acValue['id']);
				$acid > 0 && $allotConfigIdArray[] = $acid;
			}
		}

		if($result->sucess){
			if($inputAllot->config_id!=0){
				$oldArray=array(18,19,20,21);
				$cannotClickArray=array_merge($oldArray,$allotConfigIdArray);
				if (in_array ( $inputAllot->config_id, $cannotClickArray )) {
					$result->sucess = false;
					$result->message = "对不起您不能单独上下线此项目.";
				} else {
					$condition ['config_id'] = $inputAllot->config_id;
				}
			}
		}
		if($result->sucess){
		    $allotlist = $s_cache->del ( 'boss.user.allotlist' . $inputAllot->user_id );
			$m_cponlinelog = new model_cp_onlinelog();
			$datalog = array();
			$s_user = new service_cp_user($inputAllot->user_id);
			$datalog['cp_user_id'] = $s_user->get('user_id');
			$datalog['cp_user_nickname'] = $s_user->get('name');
			if($inputAllot->isonline){
				$datalog['doswitch'] = 1;
			}else{
				$datalog['doswitch'] = 0;
			}
			$datalog['dateline'] = time();
			$datalog['dateymd'] = date('Y-m-d', time());
			$m_cponlinelog->insert($datalog);
		}
		if($result->sucess){
			if($m_allot->update($condition,$data)===false){
				$result->sucess=false;
				$result->message="更新失败";
			}else{
				$result->sucess=true;
				$result->message="更新成功";

				$data_duty['type'] = $datalog['doswitch']; //上下班
				$data_duty['manager_id'] = $inputAllot->user_id;
				$s_allot = new service_allot();
				$s_allot->addManagerDutyLog($data_duty);
			}
		}	
		return $result;
	}



	/**
	 * 用户分配状态
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::allotStatus()
	 */
	public function allotStatus($user_id) {
		$result=new allotInfoList();
		$result->sucess=true;
		if($user_id==0){
			$result->sucess=false;
			$result->message="没有指定操作受理对象";
		}
		if($result->sucess){
			$m_allot=new model_cp_allot();
			$condition=array();
			$condition['state']=1;
			$condition['manager_id']=$user_id;
			$leftjoin=array('cp_allot_config'=>'cp_allot.config_id=cp_allot_config.id');
// 			ob_start();
// 			define('DEBUG', $value);
			$allot=$m_allot->select($condition,'cp_allot.config_id,name,isonline',null,null,$leftjoin);
			if(empty($allot)){
				$result->sucess=false;
				$result->message="查询失败";
			}else{
				foreach ($allot->items as $a){
					$allot=new allotInfo();
					$allot->config_id=$a['config_id'];
					$allot->allot_name=$a['name'];
					$allot->allot_status=$a['isonline']?1:0;
					$result->items[]=$allot;
				}
// 				$result->message=ob_get_clean();
			}
		}
		return $result;
	}
	
	/**
	 * 获取员工所在的组、部门或板块
	 * 
	 * @param int $user_id
	 * @param int $group_type
	 * 
	 * @return bool $result
	 * 
	 * @access public 
	 * @author yuan
	 */
	public function getGroupID($user_id, $group_type = GroupType::DEPARTMENT) {
		$result = 0;
		
		try {
			if (! (is_numeric($user_id) && ($user_id > 0))) {
				throw new Exception('参数有误');
			}
				
			$s_cp_user = new service_cp_user($user_id);
			$result = $s_cp_user->getGroupID($group_type);
		} catch (Exception $e) {
			$result = 0;
		}
		
		return $result;
	}
	
	/**
	 * 判断用户是否是所属部门的负责人
	 * 
	 * @param int $user_id
	 * @param int $group_type
	 * 
	 * @return bool $result
	 * 
	 * @access public 
	 * @author yuan
	 */
	public function isManager($user_id, $group_type = GroupType::DEPARTMENT) {
		$result = false;
		
		try {
			if (! (is_numeric($user_id) && ($user_id > 0))) {
				throw new Exception('参数有误');
			}
			
			$s_cp_user = new service_cp_user($user_id);
			$group_id = $s_cp_user->getGroupID($group_type);
			if ($group_id) {
				$s_cp_group = new service_cp_group($group_id);
			} else {
				throw new Exception('员工组织架构有误');
			}
			
			if ($s_cp_group->get('manager') == $user_id) {
				$result = true;
			} else {
				$result = false;
			}
		} catch (Exception $e) {
			$result = false;
		}
		
		return $result;
	}
	
	/**
	 * 获取员工所在板块、部门或组负责人
	 * 
	 * @param int $user_id
	 * @param int $group_type
	 * 
	 * @return bool $result
	 * 
	 * @access public 
	 * @author yuan
	 */
	public function getManager($user_id, $group_type = GroupType::DEPARTMENT) {
		$result = 0;
		
		try {
			if (! (is_numeric($user_id) && ($user_id > 0))) {
				throw new Exception('参数有误');
			}
			
			$s_cp_user = new service_cp_user($user_id);
			$group_id = $s_cp_user->getGroupID($group_type);
			if ($group_id) {
				$s_cp_group = new service_cp_group($group_id);
			} else {
				throw new Exception('员工组织架构有误');
			}
			
			$result = $s_cp_group->get('manager');
		} catch (Exception $e) {
			$result = 0;
		}
		
		return $result;
	}
	/**
	 * 收藏导航
	 */
	public function collectNav($user_id,$navs){
		$execResult=new execResult();
		try {
			
			if (!$user_id) {
				throw new Exception('用户ID丢失',-1);
			}
			$s_user=new service_cp_user($user_id);
			$optionsStr=$s_user->get('options');
			$optionsArr=unserialize($optionsStr);
			$optionsArr['favnavs']=$navs;
			$option=serialize($optionsArr);
			$s_user->set('options',$option);
			if (!$s_user->save()) {
				throw new Exception('收藏失败'.$s_user->getError(),-1);
			}
			$execResult->sucess=true;
			$execResult->code=1;
			$execResult->message='收藏成功';
		} catch (Exception $e) {
			$execResult->sucess=false;
			$execResult->code=$e->getCode();
			$execResult->message=$e->getMessage();
		}
		return $execResult;
	}
	
	/**
	 * 用户列表
	 * @param com\zhubajie\boss\dataobject\user\userSerachInput $userSerachInput
	 */
	public function getUserList(com\zhubajie\boss\dataobject\user\userSerachInput $userSerachInput){
		$m_user=new model_cp_user();
		$page=$userSerachInput->page?$userSerachInput->page:1;
		$limit=$userSerachInput->limit?$userSerachInput->limit:10;
		$order_by=$userSerachInput->order_by?$userSerachInput->order_by:'ORDER BY user_id desc';
		$m_user->setPage($page);
		$m_user->setLimit($limit);
		$m_user->setCount(true);
		$condition=array();
		if (isset($userSerachInput->isleave) && $userSerachInput->isleave!=null) {
			$condition['isleave']=(int)$userSerachInput->isleave;
		}
		if ($userSerachInput->group_id) {
			$condition['group_id']=$userSerachInput->group_id;
		}
		if ($userSerachInput->sex) {
			$condition['sex']=$userSerachInput->sex;
		}
		if ($userSerachInput->uids) {
			$condition[]='user_id in ('.implode(',', $userSerachInput->uids).')';
		}
		if ($userSerachInput->email) {
			$condition['email'] = lib_BaseUtils::getStr($userSerachInput->email);
		}
		$datas=$m_user->select($condition,'*',null,$order_by);	
		$userListDO=new com\zhubajie\boss\dataobject\user\userListDO();
		$userListDO->success=false;
		if ($datas->items) {
			$userListDO->total=$datas->totalSize;
			$userListDO->success=true;
			foreach ($datas->items as $v){
				$userBaseInfoDo=new com\zhubajie\boss\dataobject\user\userBaseInfoDo();
				$userBaseInfoDo->email=$v['email'];
				$userBaseInfoDo->group_id=$v['group_id'];
				$userBaseInfoDo->isonline=$v['isonline'];
				$userBaseInfoDo->nickname=$v['nickname'];
				$userBaseInfoDo->truename=$v['truename'];
				$userBaseInfoDo->sex=$v['sex'];
				$userBaseInfoDo->user_id=$v['user_id'];
				$arr = unserialize($v['options']);
				if (empty($arr['files'][0]['file'])) {
					$userBaseInfoDo->userface=lib_Constant::BOSS_URL.'/assets/img/avatar_default.gif';
				}else{
					$userBaseInfoDo->userface=lib_Constant::USER_FACE_URL.$arr['files'][0]['file'];
				}
				$userBaseInfoDo->qq=$v['qq'];
				$userBaseInfoDo->worknum=$v['worknum'];
				$userBaseInfoDo->birthday=$v['birthday'];
				$userBaseInfoDo->mobi=$v['mobi'];
				$userBaseInfoDo->wechat=$v['wechat'];
				$userBaseInfoDo->did=$v['did'];
				$userBaseInfoDo->isleader=$v['isleader'];
				$userBaseInfoDo->isleave=$v['isleave'];
				$userBaseInfoDo->department=$v['department'];
				$userBaseInfoDo->motto=$v['motto'];
				$userBaseInfoDo->state=$v['state'];
				$userBaseInfoDo->tel=$v['tel'];
				$userListDO->items[$v['user_id']]=$userBaseInfoDo;
			}
			$userListDO->message='OK';
			$userListDO->code=200;
		}else{
			$userListDO->message='没有查询到数据';
			$userListDO->code=-1;
		}
		return $userListDO;
	}
	/* (non-PHPdoc)
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::bindWechat()
	 */
	public function bindWechat($user_id, $key, $wechatName) {
		$return =new com\zhubajie\boss\dataobject\user\execResult();
		$return->sucess=true;
		if($return->sucess){
			if(intval($user_id)<=0){
				$return->sucess=false;
				$return->message="用户不合法";
			}
		}
		if($return->sucess){
			$s_user=new service_cp_user(intval($user_id));
			if($s_user->canlogin()==false){
				$return->sucess=false;
				$return->message="此用户可能被禁用";
			}
		}
		if($return->sucess){
			if (md5 ( $user_id . $s_user->get ( 'name' ) ) != $key) {
				$return->sucess=false;
				$return->message="微信认证密钥不正确。";
			}
		}
		if($return->sucess){
			$m_user=new model_cp_user();
			$wechat=$m_user->selectOne(array('weixin_open_id'=>$wechatName),'user_id,name');
			if($wechat['name']){
				$return->sucess=false;
				$return->message="此微信已经绑定其它用户。如果信息有误，请联系guliuzhong@zhubajie.com";
			}
		}
		if($return->sucess){
			$s_user=new service_cp_user(intval($user_id));
			if($s_user->get('weixin_open_id')!=''){
				$return->sucess=false;
				$return->message="此用户已经绑定了微信，如果需要重新绑定请联系guliuzhong@zhubajie.com";
			}
		}
		if($return->sucess){
			$s_user->set('weixin_open_id',$wechatName);
			$return->message = $s_user->get ( 'name' );
			if($s_user->save()){
				$return->sucess=true;
			}else{
				$return->sucess=false;
				$return->message="绑定出错：服务器拒绝绑定";
			}
		}
		return $return;
	}
	/**
	 * 修改用户信息[暂时没用] 暂时走的老的接口
	 */
	public function editUserInfo(\com\zhubajie\boss\dataobject\user\userBaseInfoDo $userBaseInfoDo){
		$execResult=new execResult();
		try {
			$user_id=0;
			if ($userBaseInfoDo->user_id) {
				$user_id=$userBaseInfoDo->user_id;
			}
			$s_user=new service_cp_user($user_id);
			$s_user->editUserinfo($userBaseInfoDo);
			$execResult->sucess=true;
			$execResult->code=200;
			$execResult->message="操作成功";
		} catch (Exception $e) {
			$execResult->sucess=false;
			$execResult->code=$e->getCode();
			$execResult->message=$e->getMessage();
		}
		return $execResult;
	}
	/**
	 * 修改头像
	 * @author tanqing
	 */
	public function updateUserface($user_id,$userface){
		$execResult  = new execResult();
		try {
			if (!$user_id) {
				throw new Exception('用户ID丢失',-1);
			}
			$s_user=new service_cp_user($user_id);
			$options=$s_user->get('options');
			if ($options) {
				$options=unserialize($options);
				$options['files'][]['file']=$userface;
				$options['files']=array(array('file'=>$userface));
			}else{
				$options['files'][]['file']=$userface;
				$options['files']=array(array('file'=>$userface));
			}
			$s_user->set('options',serialize($options));
			if (!$s_user->save()) {
				throw new Exception('头像保存失败',-1);
			}
			$execResult->sucess=true;
			$execResult->code=200;
			$execResult->message='头像保存成功';
		} catch (Exception $e) {
			$execResult->sucess=false;
			$execResult->code=$e->getCode();
			$execResult->message=$e->getMessage();
		}
		return $execResult;
	}
	
	/**
	 * 添加/编辑 花名库  注册验证重复性， 离职需要重启域名
	 * @author tanqing
	 */
	public function addUserNicknames(\com\zhubajie\boss\dataobject\user\userNicknamesDO $userNicknamesDO){
		$execResult =new execResult();
		try {
			$m_usernicknames=new model_cp_usernicknames();
			if ($userNicknamesDO->user_id) {
				$data['user_id']= $userNicknamesDO->user_id;
			}
			if ($userNicknamesDO->category) {
				$data['category'] =$userNicknamesDO->category;
			}
			if ($userNicknamesDO->name) {
				$data['name']=trim($userNicknamesDO->name);
			}
			if (!is_null($userNicknamesDO->is_open)) {
				$data['is_open'] =$userNicknamesDO->is_open==0?0:1;
			}
			if (empty($userNicknamesDO->id)) {
				if (empty($data['name'])) {
					throw new Exception('花名不能为空',-1);
				}
				if ($m_usernicknames->selectOne(array('name'=>$data['name']))) {
					throw new Exception('户名已经存在,不能重复添加',-1);
				}
				if (trim($data['name'])) {
					if (!$m_usernicknames->insert($data)) {
						throw new Exception('花名添加失败',-1);
					}
				}
			}else{
				$pk_id=$m_usernicknames->primarykey();
				if ($data['name']) {
					if ($m_usernicknames->selectOne(array('name'=>$data['name']))) {
						throw new Exception('花名已经存在,请重新修改',-1);
					}
				}
				if (!$m_usernicknames->update(array($pk_id=>$userNicknamesDO->id),$data)) {
					throw new Exception('花名更新失败'.$pk_id,-1);
				}
			}
			$execResult->sucess=true;
			$execResult->code=200;
			$execResult->message='保存成功';
		} catch (Exception $e) {
			$execResult->sucess=false;
			$execResult->code=$e->getCode();
			$execResult->message=$e->getMessage();
		}
		return $execResult;
	}
	/**
	 * 使用与回收花名
	 * @author tanqing
	 * @date 2014-12-10
	 */
	public function useNickname(userNicknamesDO $userNicknamesDO){
		$execResult=new execResult();
		try {
			if ($userNicknamesDO->name) {
				$condition['name'] =trim($userNicknamesDO->name);
			}else{
				throw new Exception('花名丢失'.-1);
			}
			$m_usernickname=new model_cp_usernicknames();
			$m_usernickname->setDbEntry ();
			$m_usernickname->beginTransaction();
			$nicknamedata = $m_usernickname->selectOne ( $condition, "*", null, null, null, array (
					'lock' => 'FOR UPDATE'
			) );
			if(empty($nicknamedata)){
				throw new Exception ( "花名不合法", - 2 );
			}
			$data['user_id']=(int)$userNicknamesDO->user_id;
			$s_user=new service_cp_user($data['user_id']);
			if ($userNicknamesDO->user_id && !$userNicknamesDO->isleave) {
				if ($nicknamedata ['user_id'] && $nicknamedata['user_id'] != intval ( $userNicknamesDO->user_id )) {
					throw new Exception ( "此花名已经被抢注", - 2 );
				}
				$data['use_time']=time();
				$data['use_ymd']=date("Y-m-d");
				$data['cancel_time']=1;
				$data['cancel_ymd']='0000-00-00';
				if(!$s_user->canlogin()){
					throw new Exception("此用户状态处理不可登录状态", -2);
				}
				$s_user->set('nickname',$userNicknamesDO->name);
			}
			if ($userNicknamesDO->isleave) {
				//离职的时候更改uid
				$data['user_id']=0;
				$data['cancel_time'] = time();
				$data['cancel_ymd']=date("Y-m-d");
				$s_user->set('nickname','');
			}
			if ($m_usernickname->update($condition,$data)===false) {
				throw new Exception('执行失败',-1);
			}
			if ($s_user->save ()===false) {
				throw new Exception ( "保存用户信息失败。", - 2 );
			}
			$execResult->sucess=true;
			$execResult->code=200;
			$execResult->message='执行成功';
			$m_usernickname->commit();
		} catch (Exception $e) {
			$execResult->sucess=false;
			$execResult->code=$e->getCode();
			$execResult->message=$e->getMessage();
			$m_usernickname->rollBack();
		}
		return $execResult;
		
	}
	/**
	 * 列表
	 * @author tanqing
	 * @param unknown $params  array('user_id','name','id','category','page','limit','is_open');
	 */
	public function getUserNicknamesList($params){
		$condition=array();
		if(isset($params['name']) && !is_null($params['name'])){
			$condition['name'] = $params['name'];
		}else{
			//$condition['user_id']=0;
			if (isset($params['user_id']) && !is_null($params['user_id'])) {
				$condition['user_id'] = (int) $params['user_id'];
			}
		}
		if(isset($params['id']) &&!is_null($params['id'])){
			$condition['name_id'] = (int)$params['id'];
		}
		if(isset($params['category'])&&!is_null($params['category'])){
			$condition['category']=(int)$params['category'];
		}
		//是否开放选择
		if(isset($params['is_open'])&&!is_null($params['is_open'])){
			if ($params['is_open']!='all') {
				$condition['is_open']=$params['is_open']==0?0:1;
			}
		}
		$months=date(strtotime("-1 months"));
		$condition[]='(cancel_ymd="0000-00-00" or  cancel_ymd<="'.date("Y-m-d",$months).'" )';
		$order_by='order by user_id asc,name_id desc';
		if (isset($params['order_by'])) {
			$order_by=$params['order_by'];
		}
		$m_usernicknames=new model_cp_usernicknames();
		$limit=isset($params['limit'])?$params['limit']:10;
		$page=isset($params['page'])?$params['page']:1;
		
		$m_usernicknames->setCount(true);
		$m_usernicknames->setLimit($limit);
		$m_usernicknames->setPage($page);
		$datas=$m_usernicknames->select($condition,'*',null,$order_by);
		$userNicknamesListDO=new userNicknamesListDO();
		$userNicknamesListDO->success=true;
		$userNicknamesListDO->code=200;
		if($datas->items){
			foreach ($datas->items as $v){
				$userNicknamesDO=new userNicknamesDO();
				$userNicknamesDO->name = $v['name'];
				$userNicknamesDO->category =  $v['category'];
				//$userNicknamesDO->state = $v['state'];
				$userNicknamesDO->id = $v['name_id']; 
				$userNicknamesDO->user_id=$v['user_id'];
				$userNicknamesListDO->datas[]=$userNicknamesDO;
			}
			$userNicknamesListDO->message='返回成功';
			$userNicknamesListDO->total=$datas->totalSize;
		}else{
			$userNicknamesListDO->message='没有查询到数据';
		}
		return $userNicknamesListDO;
	}
	
	public function addGood($user_id, $operate_uid) {
		$execResult  = new execResult();
		try {
			if (!$user_id || !$operate_uid) {
				throw new Exception('用户ID丢失',-1);
			}
			
			$cache_name = "cpuseraddgood_".$operate_uid.'_'.$user_id."_".date('Y-m-d');
			$s_cache=new zbj_lib_cache('memcache');
// 			$s_cache=new zbj_lib_cache();
			if ($s_cache->get($cache_name)) {
				throw new Exception("您今天已经点过赞了", -3);
			}
			
			$s_user=new service_cp_user($user_id);
			$options=$s_user->get('options');
			if ($options) {
				$options=unserialize($options);
				$options['good_num'] += 1;
			}else{
				$options['good_num'] += 1;
			}
			$s_user->set('options',serialize($options));
			if (!$s_user->save()) {
				throw new Exception('点赞失败',-1);
			}
			$s_cache->set($cache_name, true);
			$execResult->sucess=true;
			$execResult->code=200;
			$execResult->message='点赞成功'.$cache_name;
		} catch (Exception $e) {
			$execResult->sucess=false;
			$execResult->code=$e->getCode();
			$execResult->message=$e->getMessage();
		}
		return $execResult;
	}
	/**
	 * 修改密码
	 * @see \com\zhubajie\boss\interfaces\userServiceIf::changepwd()
	 */
	public function changepwd(\com\zhubajie\boss\dataobject\user\Inputchangepwd $inputchangepwd){
	    $execResult=new com\zhubajie\boss\dataobject\user\execResult();
	    try{
	        if (intval($inputchangepwd->user_id) <= 0) {
                $m_cpuser = new model_cp_user();
                $user = $m_cpuser->selectOne(array(
                    'name' => $inputchangepwd->userName
                ));
                if (empty($user)) {
                    throw new Exception("用户名错误", - 1);
                }
                $s_user = new service_cp_user ( intval($user ['user_id']) );
            } elseif(intval($inputchangepwd->user_id)>0) {
                $s_user = new service_cp_user ( intval($inputchangepwd->user_id) );
            }else{
                throw new Exception("用户不存在", - 1);
            }
	        if (! $s_user->canlogin()) {
                throw new Exception("用户不可登录", - 2);
            }
	        if($s_user->issimplepasswd($inputchangepwd->newpasswd)){
	            throw new Exception("密码强度低，请重新设置", - 3);
	        }
	        if(preg_match('/bajie/i',$inputchangepwd->newpasswd)){
	            throw new Exception("密码强度低，请重新设置", - 3);
	        }
	        if(!$inputchangepwd->ignoreoldpwd){
    	        if ($s_user->get ( 'user_info.password' ) !== md5 ( $inputchangepwd->oldpasswd )) {
    	            throw new Exception("原密码不正确", - 4);
    	        }
	        }
	        $s_user->set ( 'user_info.password',md5($inputchangepwd->newpasswd) );
	        if($s_user->save()==false){
	            throw new Exception("保存密码失败", - 5);
	        }
	        $s_user=new service_cp_user($inputchangepwd->user_id);
	        $s_user->notificationpwd($inputchangepwd->newpasswd);
	        $execResult->sucess=true;
	    }catch (Exception $e){
	        $execResult->message=$e->getMessage();
	        $execResult->sucess=false;
	        $execResult->code=$e->getCode();
	    }
	    return $execResult;
	}
	/**
	 * 用户搜索
	 * @author tanqing
	 * @date 2015-3-9
	 * @param unknown $keyword
	 * @throws Exception
	 * @return \com\zhubajie\boss\dataobject\user\serachUserListDO
	 */
	public function search($keyword){
		$serachUserListDO = new com\zhubajie\boss\dataobject\user\serachUserListDO();
		$keyword = zbj_lib_BaseUtils::getStr($keyword,'string');
		try {
			if (empty($keyword)) {
				throw new Exception('没有任何查询添加');
			}
			$serachUserListDO->success = true;
			$serachUserListDO->code = 200;
			$serachUserListDO->message = '返回成功';
			$m_user = new model_cp_user();
			$condition =array( 'truename like "%'.$keyword.'%"');
			$condition['isleave']=0;
			$lists = $m_user->select($condition);
			$serachUserListDO->total = $lists->totalSize;
			if ($lists->items) {
				$serachUserListDO->total = $lists->total;
				foreach ($lists->items as $v){
					$userDo = new com\zhubajie\boss\dataobject\user\userDo();
					$userDo->truename = $v['truename'];
					$userDo->user_id = $v['user_id'];
					$userDo->name =$v['name'];
					$userDo->nickname = $v['nickname'];
					$userDo->sex = $v['sex'];
					$userDo->group_id = $v['group_id'];
					$serachUserListDO->datas[]=$userDo;
				}
			}else{
				$serachUserListDO->message = '没有查询到结果';
			}
		} catch (Exception $e) {
			$serachUserListDO->code =0;
			$serachUserListDO->message = $e->getMessage();
			$serachUserListDO->success = false;
		}
		return $serachUserListDO;
	}
	/* (non-PHPdoc)
	 * @see com\zhubajie\boss\interfaces.userServiceIf::getManagerByContactUid()
	 */
	public function getManagerByContactUid($user_id,$is_contain) {
		$serachUserListDO = new serachUserListDO();
		$serachUserListDO->success = true;
		try {
			if (!$user_id) throw new Exception('用户Id不存在', -1);
			
			$m_user_group = new model_cp_group();
			$user_group = $m_user_group->selectOne(array('manager'=>$user_id, 'group_type'=>1), 'group_id');
			if (!$user_group || !$user_group['group_id']) {
				throw new Exception('您不是联络人，无法获取取经团团长信息', -1);
			}
			$user_group_dept = $m_user_group->select(array('pid'=>$user_group['group_id'], 'group_type'=>2), 'manager')->items;
			if (!$user_group_dept) throw new Exception('该联络没有负责的取经团团长信息', -1);
			foreach ($user_group_dept as $v) {
				if((!$is_contain && $user_id != $v['manager']) || $is_contain) {
					$userDo = new userDo();
					$userDo->user_id = $v['manager'];
					$s_user = new service_user($v['manager']);
					$userDo->name = $s_user->get('name');
					$userDo->nickname = $s_user->get('nickname');
					$serachUserListDO->datas[] = $userDo;
				}
			}
			
		} catch (Exception $e) {
			$serachUserListDO->success = false;
			$serachUserListDO->code = $e->getCode();
			$serachUserListDO->message = $e->getMessage();
		}
		return $serachUserListDO;
	}

	/**
	 * get the most active person
	 * 
	 * @author yuanzhuang
	 * @date 2015-04-28
	 */
	public function getMostActivePerson($is_random = 0) {
		$result = array();
		
		$m_feed = new model_cp_feed();
		if (! $is_random) {
			$m_feed->setLimit(6);
			$m_feed->setPage(1);
			
			$condition = array('cp_user.options LIKE "%file%"');
			$left_join = array('cp_user' => 'cp_user.user_id = cp_feed.create_uid');
			$result = $m_feed->select($condition, array('distinct create_uid'), '', 'ORDER BY create_time DESC', $left_join)->items;
		} else {
			$sql = 'SELECT distinct create_uid FROM cp_feed left join cp_user on cp_user.user_id=cp_feed.create_uid where cp_user.group_id != 22 AND cp_user.options like "%file%" ORDER BY create_time DESC LIMIT 6,60';
			$feed_list = $m_feed->query($sql);
			shuffle($feed_list);
			for ($i = 0; $i < 6; $i ++) {
				$result[] = array_pop($feed_list);
			}
		}
		
		return $result;
	}
}
