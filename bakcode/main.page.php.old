<?php

class controller_main extends components_basepage {
    public $aParams = array();
    public $urlParams = array();
    private $oSe;
	private $srvVirtual;
    function __construct() {
        parent::__construct();
        if($_GET['debug'] == 1) define(DEBUG, 1);
        $httpHeader=array('call-user-id:'.$this->_userid,'call-sessionid: '.$this->_uniqid,'call-cookieid: '.$_COOKIE['_uq'],'call-ip: '.zbj_lib_BaseUtils::getIp(),'call-source: mainsite','call-version: t5s');
        $this->oSe = new Sse(zbj_lib_Constant::SOLR_CACHE_HOST, zbj_lib_Constant::SOLR_CACHE_PORT,$httpHeader);
        $this->cache = new zbj_lib_cache('memcache');
    	$this->srvVirtual = new zbj_service_categoryvirtual();
    	$arrHeader['css'] = array('pub.css', 'main.css','module/date.css');
        $arrFooter['js'] = array('product/page/index.js',
            'product/pub.js',
            'module/KeySuggest.js',
            'product/page/need.js',
            'module/date.js',
            'product/page/fhimg.js',
            'product/page/updataStyle.js',
        );
        $this->aParams['header_argv'] = $arrHeader;    
        $this->aParams['footer_argv'] = $arrFooter;   
        $this->aParams['header_argv']['head_title'] = "有需求到猪八戒网_800万专业威客帮你解决_最新威客任务导航";
		$this->aParams['header_argv']['keywords'] = "最新任务,威客任务,付费任务,免费任务,任务平台";
		$this->aParams['header_argv']['description'] = "猪八戒网全球最大创意服务平台，提供全球最新任务、威客任务、高价任务、悬赏任务等需求信息。关注分享最全面的需求任务上全球最大诚信服务平台-猪八戒网！";
    }
   
    public function init(){
        //头部需求数
        $cache_name = 'www.app.controller.tradecount';
		$tradecount = (array)$this->cache->get($cache_name);
        $this->aParams['yesterday'] = $tradecount['yesterday']['task_num'];
        $this->aParams['overtask'] = $tradecount['all']['task_num'];
        $this->aParams['nowtask'] = $tradecount['all']['task_num']*0.019;
    }

    public function pageTest(){
        $this->init();
    }

    // 清缓存
    public function pageTagDel(){
        header("Content-Type: text/html; charset=utf-8");
        $cache_tagname = 'task.zhubajie.com.main.index.taglist';        
        $this->cache->del($cache_tagname);
        $mdlTag = zbj_model_api::get('zbj_model_mk_tag');
        $orderby = 'ORDER BY sort DESC, task_num DESC';
        $condition = array(
            'is_hide' => 0,
            'is_merge' => 0,
            'is_enabled' => 1,
            'is_recommend' => 1,
            'is_channel' => 1,
        );
        $tagsinfo = $mdlTag->select($condition, 'tag_id,tag_name,talent_num,url', '', $orderby)->items;
        if ($tagsinfo) {
            $subids = array();
            foreach ($tagsinfo as $key => $value) {
                $svTag = new zbj_service_tag($value['tag_id']);
                $subids = $svTag->getAllSystemSubID();
                $condition = array(
                    'is_hide' => 0,
                    'is_merge' => 0,
                    'is_enabled' => 1,
                    'is_recommend' => 1,
                    'tag_id IN('.implode(',', $subids).')',
                );
                $orderby = "ORDER BY tag_id ASC";
                $sub = $mdlTag->select($condition, 'tag_id,tag_name,url', '', $orderby)->items;
                $tagsinfo[$key]['sub'] = $sub;
            }
            $this->cache->set($cache_tagname, $tagsinfo, 24*3600);
        }        
        echo '清除缓存成功！';
    }
	public function pageClearLeft(){
		$cache_name = 'zbj.service.common.getT5sNavTree.task';
		$this->cache->del($cache_name);
		echo '清除完成';
	}
	/*
	 * 需求大厅
	 */
 	function pageIndex($inPath) {
 		//检查是否需要跳转到英文站
		zbj_lib_BaseUtils::redirectToWitmart();
		self::setHeaderCache();
		$this->urlParams=zbj_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
    	$this->urlParams['ft']=zbj_lib_BaseUtils::getStr($this->urlParams['ft']);
    	preg_match_all("/([a-zA-Z])([0-9,:]+)/",$this->urlParams['ft'],$filter);
		if (!empty($filter[1]) && is_array($filter[1]) && !empty($filter[2]) && is_array($filter[2])) {
			$filter = array_combine($filter[1],$filter[2]);
		} else {
			$filter = array();
		}
		if ( !isset($filter['s']) || empty($filter['s']) ) $filter['s'] = 5;
		$this->urlParams['ft'] = $filter;	
		$iLimit=40;
		$page = (int)$this->urlParams['ft']['p'];
		$iPage = $page?(int)$page:1;
		$tplParams['p']=$iPage;
		$tplParams['limit']=$iLimit;
		
     	$params = array(
				'cat' => 'req',	
				'size' => $iLimit,
				'page' => ($iPage-1),	
     			'sort'=>array('!updatetime'),							
			);

     	//workfilter1是全部，2是未满投标
     	if($filter['w'] == 1){
     		$params['workfilter'] = 1;
     		$tplParams['w'] = 1;
     	}elseif($filter['w'] == 2){
     		$params['workfilter'] = 2;
     		$tplParams['w'] = 2;
     		$params['earliestendtime'] = time();
     	}
     	
     		
    	$indir=zbj_lib_BaseUtils::getStr($this->urlParams['indir']);
    	$chdir=zbj_lib_BaseUtils::getStr($this->urlParams['chdir']);
    	if($indir && $chdir) {
    		$newurl = zbj_lib_Constant::TASK_URL.'/t-'.$chdir.'/';
    		zbj_lib_BaseUtils::run301($newurl);
    	}
    	if($indir) {
    		$retdir = zbj_service_categoryguide::getByDelDir($indir);
    		if($retdir) {
    			$chdir = $retdir;
    			$newurl = zbj_lib_Constant::TASK_URL.'/t-'.$chdir.'/';
    			zbj_lib_BaseUtils::run301($newurl);
    		}
    	}
    	$srvCommon = new zbj_service_common();
		$all_list = $srvCommon->getNewT5sNavData("trade");
    	// $categoryList = $this->srvVirtual->getTree();
    	$categoryList = zbj_service_categoryguide::getTreeLite();
    	$useCommonHeader = false;
    	if (empty($indir)){//大厅分类列表
    		$channel=array();
    		foreach ($categoryList as $k=>$v){
    			$channel[$k]['name']=$v['guide_name'];
    			$channel[$k]['cndir']=$v['cndir']; 
    			$channel[$k]['is_show_trade']=$v['is_show_trade'];
    			$channel[$k]['redirect']=$v['redirect_url'];     			
    		 	$channel[$k]['children']=$v['list'];
    		}
    		$data['channels']=$channel;
    		$page_seo_w = '';
    		if ( isset($filter['p']) && $filter['p'] > 1 ) {
    			$filter['p'] = intval($filter['p']);
    			$page_seo_w = "-第{$filter['p']}页";
    		}
    		$data['header_argv']=array(
    			"head_title"=>"所有需求列表{$page_seo_w} -猪八戒网"
    		);
    	}elseif(!empty($indir)&&empty($chdir)){//大厅一级分类列表
				// $currVirtual = $this->srvVirtual->getVirtualByCndir($indir);
				$currVirtual = zbj_service_categoryguide::getInfoByEnDir($indir);
				if($currVirtual['level'] == 3) {
					$indir = $currVirtual['parent_cndir'];
					$chdir = $currVirtual['cndir'];
				}else {
					$children_list = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['guide_id']);
					$children_list = zbj_service_categoryguide::formatGuideList('task',$children_list);
					$sec_level = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['parent_id']);
					$sec_level = zbj_service_categoryguide::formatGuideList('task',$sec_level);
					$level = 1;
					if($currVirtual['level'] == 1) {
						$sec_level = $children_list;
						$children_list = array();
						$level = 0;
						if($currVirtual['parent_id'] != 2000238) 
							$rootGuide = $currVirtual;
					}else {
						if($currVirtual['parent_id'] != 2000238) 
							$rootGuide = zbj_service_categoryguide::getInfoById($currVirtual['parent_id']);
					}
		    		foreach ($categoryList[$currVirtual['parent_id']]['list'] as &$sec_vals) {
						if ($sec_vals['virtual_id'] == $currVirtual['guide_id'])
							$sec_vals['is_current'] = 1;
					}
	    			$data['channels']=array(
	    			 	"name"=>$currVirtual['guide_name'],
						"cndir"=>$indir,
						"current_id"=>$currVirtual['guide_id'],
						"current_name"=>$currVirtual['guide_name'],
	    			    "redirect"=>$currVirtual['redirect_url'], 
	    				"pub_title"=>$currVirtual['pub_title'], 
    		 			"pub_content"=>$currVirtual['pub_content'], 
	    				"pub_amount"=>$currVirtual['pub_amount'],    			
	    			 	"children"=>$children_list,
						"sec_level" => $sec_level,
						"root" => $rootGuide,
						"level" => $level
	    			 );
	    			$useCommonHeader = 1;
		    		$params['catalogidtreefilter']=array($currVirtual['guide_id']);
		    		
		    		if (in_array($indir, array('wzkf'=>'wzkf','rjkf'=>'rjkf','ydyykf'=>'ydyykf','weixinkf'=>'weixinkf'))){
		    			$sortType=1;//开发热点需求
		    		}
		    		if (in_array($indir,array('tuiguang'=>'tuiguang','wdtg'=>'wdtg','weibotg'=>'weibotg','wlyx'=>'wlyx')))	{
		    			$sortType=2;//计件热点需求
		    		}
		    	}
    	}
    	if(!empty($chdir)){    //大厅二级分类列表		
    		    $level = 2;
	    		// $currVirtual = $this->srvVirtual->getVirtualByCndir($chdir);
	    		$currVirtual = zbj_service_categoryguide::getInfoByEnDir($chdir);
	    		// $parentVirtual= $this->srvVirtual->getVirtualByCndir($currVirtual['parent_cndir']);
	    		if($currVirtual['parent_id'] == 2000238 && $currVirtual['level'] == 2) {
	    			//承载老板的目录结构-不加代码
	    	    }else if($currVirtual['level'] == 2) {
	    	    	$children_list = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['guide_id']);
					$children_list = zbj_service_categoryguide::formatGuideList('task',$children_list);
					$sec_level = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['parent_id']);
					$sec_level = zbj_service_categoryguide::formatGuideList('task',$sec_level);
					$currVirtual['parent_name'] = '';
					$level = 2;
					$currVirtual['parent_cndir'] = $indir;
	    		}else {
	    			$parentVirtual = zbj_service_categoryguide::getInfoById($currVirtual['parent_id']);
	    			$children_list = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['parent_id']);
	    			$children_list = zbj_service_categoryguide::formatGuideList('task',$children_list);
	    			$sec_level = zbj_service_categoryguide::getChildrenInfoListById($parentVirtual['parent_id']);
	    			$sec_level = zbj_service_categoryguide::formatGuideList('task',$sec_level);
	    			$sec_level[$currVirtual['parent_id']]['list'] = $children_list;
	    			if($parentVirtual['parent_id'] != 2000238) 
	    				$rootGuide = zbj_service_categoryguide::getInfoById($parentVirtual['parent_id']);
	    	    }
				foreach ($categoryList[$currVirtual['guide1id']]['list'] as &$sec_vals) {
					if ($sec_vals['virtual_id'] == $parentVirtual['guide_id'])
						$sec_vals['is_current'] = 1;
				}
    		 	$data['channels']=array(
    		 		 "name"=>$currVirtual['parent_name'],
					 "cndir"=>$currVirtual['parent_cndir'],
    		 		 "redirect"=>$currVirtual['parent_redirect'],
    		 	     "parent_pubamount"=>$parentVirtual['pub_amount'],
    		 	     "parent_id"=>$parentVirtual['guide_id'],
    		 		 "current_name"=>$currVirtual['guide_name'],
					 "current_cndir"=>$chdir,
				     "current_id"=>$currVirtual['guide_id'],
    		 		 "current_redirect"=>$currVirtual['redirect_url'],
    		 		 "pub_title"=>$currVirtual['pub_title'], 
    		 		 "pub_content"=>$currVirtual['pub_content'],
    		 		 "pub_amount"=>$currVirtual['pub_amount'], 	 		 
    		 		 "children"=>$children_list,
					 "sec_level" => $sec_level,
					 "root" => $rootGuide,
					 "level" => $level
    		 	);
    		 	$categorylevel=2;
    		 	if($currVirtual['is_show_trade']==0){
    				$nosearch=1;
    			}
    			$useCommonHeader = 2;
	    	    $params['catalogidtreefilter']=array($currVirtual['guide_id']);
    			if (in_array($currVirtual['parent_cndir'], array('wzkf','rjkf','ydyykf','weixinkf'))){
		    		$sortType=1;//开发热点需求
		    	}
		    	if (in_array($currVirtual['parent_cndir'],array('tuiguang','wdtg','weibotg','wlyx')))	{
		    		$sortType=2;//计件热点需求
		    	}

    	}
    	if ( $useCommonHeader ) {
    			//分类二级分类名称
	    		$children_list_name = array();
	    		if ( $useCommonHeader == '1' ) {
	    			foreach($data['channels']['children'] as $ccl) {
		    			$children_list_name[] = $ccl['virtual_name'];
		    		}
		    		if ( empty($children_list_name) ) $children_list_name[] = $data['channels']['name'];
	    		}else if ( $useCommonHeader == '2' ) {
	    			$children_list_name[] = $data['channels']['current_name'];
	    		}
	    		
	    		$children_list_name = join('、', $children_list_name);
	    		 $categorylevel=1;
	    		if($currVirtual['is_show_trade']==0){
	    			$nosearch=1;
	    		} 
	    		//SEO优化
	    		$order_seo_name = array(
	    			1=>'按剩余时间由长至短排序',
	    			2=>'按剩余时间由短至长排序',
	    			3=>'按参与数由多至少排序',
	    			4=>'按参与数由少至多排序',
	    			5=>'按价格由高至低排序',
	    			6=>'按价格由低至高排序',
	    			7=>'按发布时间由新至旧排序',
	    			8=>'按发布时间由旧至新排序',
	    		);
	    		$order_seo_w = $page_seo_w = $price_seo_w = '';
	    		if ( isset($filter['o']) ) {
	    			if ( isset($order_seo_name[$filter['o']]) ) {
	    				$order_seo_w = '-'.$order_seo_name[$filter['o']];
	    			}
	    		}
	    		if ( isset($filter['p']) && $filter['p'] > 1 ) {
	    			$filter['p'] = intval($filter['p']);
	    			$page_seo_w = "-第{$filter['p']}页";
	    		}
	    		if ( !empty($_REQUEST['j']) || !empty($_REQUEST['b']) ) {
	    			if ( !empty($_REQUEST['j']) && empty($_REQUEST['b']) ) {
	    				$price_seo_w = '-(不低于{j}元价格区间)';
	    			}else {
	    				$price_seo_w = "-({j}~{b}元价格区间)";
	    			}
	    		}

	    		if ( isset($filter['s']) && $filter['s'] == '4' ) {
	    			$time_seo_w = '历史';
	    			$header_description ="猪八戒网（ZhuBaJie.Com）为1000万威客提供最全{$currVirtual['guide_name']}历史任务、需求、外包交易信息，为公司企业提供最专业的{$children_list_name}服务，满意才付款，放心交易，有{$currVirtual['guide_name']}需求，首选猪八戒网！";
	    		}else if ( isset($filter['s']) && $filter['s'] == '5' || !isset($filter['s']) ){
	    			$time_seo_w = '最新';
	    			$header_description ="猪八戒网（ZhuBaJie.Com）为1000万威客提供最新最全{$currVirtual['guide_name']}任务、需求、外包交易信息，为公司企业提供最专业的{$children_list_name}服务，满意才付款，放心交易，有{$currVirtual['guide_name']}需求，首选猪八戒网！";
	    		}

	    		$data['header_argv']['head_title'] ="{$currVirtual['guide_name']}-{$time_seo_w}任务_需求_外包{$price_seo_w}{$order_seo_w}{$page_seo_w} -猪八戒网";
	    		$data['header_argv']['keywords'] ="{$currVirtual['guide_name']},{$time_seo_w}{$currVirtual['guide_name']}任务,{$currVirtual['guide_name']}需求,{$currVirtual['guide_name']}外包";
	    		$data['header_argv']['description'] = $header_description;
    	}
    	if ($nosearch!=1 || true){
	        if ($this->_userid) {	//登录用户显示参与的任务显示 我已参与
	        	$user = new zbj_service_user($this->_userid);
				$isManager = $user->isManager();
				$tplParams['ismanager'] = $isManager;
	        }
			$aFilter = $this->urlParams['ft'];
			if ($aFilter['o']=='' || $aFilter['o']=='0'){
				if ($sortType==1){
					$params['sort']=array('rewardhotsort');
				}elseif ($sortType==2){
					$params['sort']=array('allothotsort');
				}
			}
			$now = $this->_time;
    		if (empty($aFilter)){
				if ($this->_userid){
					$mdlfilter=zbj_model_api::get('zbj_model_lg_taskt6filter');
					$uInfo=$mdlfilter->selectOne(array('user_id'=>$this->_userid),'e,h,w,c,s,t');
					if ($uInfo){
						$aFilter=$uInfo;
					}
				}
			}
	    		//筛选条件
				if ($aFilter) {		
					foreach ($aFilter as $k => $v) {
						switch ($k) {
							//add by shenfeng
//							case 'y':
//								if($v !=0 ){
//									$params['is_mall_requestfilter'] = 2 ;
//									$v = 1;
//								}else{
//									$v = 0;
//								}
//								$tplParams['filter'].= "&y={$v}";
//								$tplParams['y'] = $v;
//								$tplParams['youxuan'] = $v;
//								break;
							case 'm':
								if(2 == $v) { // 比稿
									$params['modefilter'] = 10;
									$params['assignfilterList'] = array('single', 'contest');
								} elseif(3 == $v) { // 招标
									$params['modefilter'] = 13;
								} elseif(4 == $v) { // 计件
									$params['modefilter'] = 10;
									$params['assignfilter'] = 'allot';
								} else {
									$v = 1;
								}
								$tplParams['filter'].= "&m={$v}";
								$tplParams['m'] = $v;
								break;
							case 'h':
								if(2 == $v) { // 暂未定价
									$params['maxprice'] = 0;
								} elseif(3 == $v) { // 已托管
									$params['trustfilter'] = 'trusted';
								} elseif(4 == $v) { // 未托管
									$params['trustfilter'] = 'none';
									$params['minprice'] = 1;
								} else {
									$v = 1;
								}
								$tplParams['filter'].= "&h={$v}";
								$tplParams['h'] = $v;
								break;
// 							case 'e':
// 								if (2==$v){
// 									$params['typefilter']='free';
// 								}elseif(3==$v){
// 									$params['typefilter']='paying';
// 								} elseif(4 == $v) {
// 									$params['modefilter'] = 13;
// 								}
// 								$tplParams['filter'].= "&e={$v}";
// 								$tplParams['e'] = $v;
// 								break;
								
// 							case 'h':						//h=2 未托管赏金 h=3已托管赏金
// 								if (2 == $v) {
// 									$params['trustfilter'] = 'none';
// 								} else if (3 == $v) {
// 									$params['trustfilter'] = 'trusted';
// 								} 
// 								$tplParams['filter'].= "&h={$v}";
// 								$tplParams['h'] = $v;
// 								break;
								
// 							case 'w':					//赏金分配 2=单人中标，3=计件，4=多人中标
// 								switch ($v) {
// 									case 2: $params['assignfilter'] = 'single'; break;
// 									case 3: $params['assignfilter'] = 'allot'; break;
// 									case 4: $params['assignfilter'] = 'contest'; break;
// 								}	
// 								$tplParams['filter'].= "&w={$v}";
// 								$tplParams['w'] = $v;
// 								break;
							case 's':    //需求状态							
								switch ($v){
									
									case 2: 
										$params['earliestendtime'] = $now;									
										$params['statusnewfilter']=array(2);			//进行中
										 break;
									case 3: 
										$params['statusnewfilter']=array(3);
										 break;
									case 4: 
										$params['earlieststarttime']=strtotime('2013-01-01 00:00:00');
										$params['statusnewfilter']=array(3,4); 	//圆满结束
										break;
									case 5:
										$params['statusnewfilter'] = array(2);
										break;
								}	
								$tplParams['filter'].= "&s={$v}";
								$tplParams['s'] = $v;
								break;
								
							case 't':				//发布时间
								
								switch ($v) {
									case 2:				//近3天发布的任务				
										$lastyestoday = $now - (86400*3);								
										$params['earlieststarttime']=$lastyestoday;
										$params['lateststarttime']=$now;
										break;								
									case 3:			//3天内到期
										$endTime = $now + (86400*3);
										$params['earliestendtime'] = $now;
										$params['latestendtime']	= $endTime;
										break;
									case 4:			//24小时内到期
										$endTime = $now + 86400 ;						
										$params['earliestendtime'] = $now;
										$params['latestendtime']=$endTime;
										break;
									case 5:			//今天发布	
										$datetoday = date('Y-m-d');
										$today = strtotime($datetoday);										
										$params['earlieststarttime']=$today;
										$params['lateststarttime']=$now;
										break;	
									case 6:			//昨天发布	
										$yestoday = date('Y-m-d',$this->_time - 86400);									
										$yestoday = strtotime($yestoday);	
										$today = date('Y-m-d');	
										$today = strtotime($today); 								
										$params['earlieststarttime']=$yestoday;
										$params['lateststarttime']=$today;
										break;
									case 7:			//2天内到期
										$endTime = $now + (86400*2);
										$params['earliestendtime'] = $now;
										$params['latestendtime']	= $endTime;
										break;	
									case 8: //近7天发布
										$lastyestoday = $now - (86400*7);								
										$params['earlieststarttime']=$lastyestoday;
										$params['lateststarttime']=$now;
										break;
									case 9:// 近15天发布
										$lastyestoday = $now - (86400*15);								
										$params['earlieststarttime']=$lastyestoday;
										$params['lateststarttime']=$now;
										break;		
									case 999: // 加急任务
										$params['urgentfilter'] = array(2, 3);
										break;							
								}
								$tplParams['filter'].= "&t={$v}";
								$tplParams['t'] = $v;
								break;			
								/*1=剩余时间降序 2=剩余时间升序3=投标数降序4=投标数升序5=价格降序
								6=价格升序7=发布时间降序8=发布时间升序9=评论数降序10=评论数升序*/
							case 'o':												
								switch ($v) {	
									case 1: $aSolr = array('!endtime'); break;
									case 2: $aSolr = array('endtime'); break;						
									case 3: $aSolr = array('!bids'); break;			//投标数量降序
									case 4: $aSolr = array('bids'); break;			//投标数量升序
									case 5:	$aSolr = array('!price'); break;			//赏金降序
									case 6:	$aSolr = array('price'); break;				//赏金升序
									case 7:	$aSolr = array('!starttime'); break;				//发布时间降序
									case 8:	$aSolr = array('starttime'); break;	 //发布时间升序
									//case 11: $aSolr=array('allothotsort');break;   //计件类的热点需求
									//case 12: $aSolr	=array('rewardhotsort');break; //开发类的热点需求
									case 13: $aSolr=array('!updatetime');break; //加价任务
									/*针对众帮计件订单 按单价排序 by liang 2015-7-6 start*/
									case 14: $aSolr=array('!singleprice');break; //降序
									//case 15: $aSolr=array('singleprice');break;
									/*针对众帮计件订单 按单价排序 by liang 2015-7-6  end */															
								}
								$tplParams['filter'].= "&o={$v}";
								$tplParams['o'] = $v;
								if ($v){									
									$params['sort'] = $aSolr;
								}								
								break;						
							case 'c': //保证选标   2=已保证选标 3=未保证选标		  
								switch ($v){								
									case 2: $params['electionfilter'] = 1;
											$params['trustfilter'] = 'trusted';																									
										 break;
									case 3: 
										$params['electionfilter']= 0;								
										 break;	
								}						
								if((int)$v !== 0){
									$tplParams['c'] = (int)$v;
									$tplParams['filter'].= "&c={$v}";
								}
								break;						
							case 'a': //需求发布地区
								$v = intval($v);
								if($v > 0){
									$regionModel = new zbj_model_mb_region($v);
									if($regionModel->getData('level') == 3){
										$data['cityid'] = $v;
										$data['provinceid'] = $regionModel->getData('parent_id');
										$regionModel->setPkid($data['provinceid']);
										$data['provincename'] = $regionModel->getData('region_name');
										$regionModel->setPkid($v);
										$params['cityidfilter']= array($v);
									}else{
										$data['provinceid'] = $v;
										$params['provinceidfilter']= array($v);
									}
									$tplParams['a'] = $v;
									$tplParams['filter'].= "&a={$v}";
									$data['cityname'] = $regionModel->getData('region_name');
									if($data['header_argv'] && $currVirtual['guide_name']){
										foreach($data['header_argv'] as &$argv){
											$argv = str_replace($currVirtual['guide_name'],$data['provincename'].$data['cityname'].$currVirtual['guide_name'],$argv);
										}
									}
								}
								break;	
						}
					}	
				}    			
	       		//输入价格较小/大值
				if(strlen($_REQUEST['j'])){
					$j = zbj_lib_BaseUtils::getStr(($_REQUEST['j']),'int');		
				}
				
				if(strlen($_REQUEST['b'])) {
					$b = zbj_lib_BaseUtils::getStr(($_REQUEST['b']),'int');
				}
						
				if(!empty($j) || !empty($b)){			
					if($j && $b){								
						$small = ($j > $b) ? $b : $j;
						$big = 	($j > $b) ? $j : $b;			
						$params['minprice'] = $small;
						$params['maxprice'] =$big;
						$j = $small;
						$b = $big;
					}else if($j){
						$params['minprice'] = $j ;
						$b='';
					}else if($b){
						$params['maxprice'] = $b ;
						$j = 1;
					}
				
					$tplParams['j'] = $j;
					$tplParams['b'] = $b;
					$tplParams['query_string'].="&j={$j}&b={$b}";
					$data['header_argv']['head_title'] = str_replace(array('{j}','{b}'), array($j, $b),$data['header_argv']['head_title']);
				}
				$tplParams['filters'] = trim($tplParams['filter'],'&');			
				//在结果中查询			
				$kw = urldecode($_REQUEST['kw']);
				$kw=zbj_lib_BaseUtils::getStr($kw);
				if (strlen($kw)){
					$tplParams['keywords']=$kw;
					$params['query'] = $kw;				
					$tplParams['query_string'].="&kw={$kw}";
				}
				
				//新需求置顶 李淘 2014-12-12
				if ( !$j && !$b && !$kw && !$filter['a']) {//置顶在一些筛选的条件下不出现
					if ( ((int)$filter['o'] === 0 && (int)$filter['s'] !== 4)  || ((int)$filter['s'] === 5 && (int)$filter['o'] === 0) ) {
						if ( !empty($indir)) {
							$top_category_id = $params['catalogidtreefilter'][0];
						} else {
							$top_category_id = 1000459;//需求大厅
						}
						$srv_vas = new zbj_service_vas();
						$taskTop = $srv_vas->getTaskTopList($top_category_id, $aFilter );
                        if ( $taskTop ) {
                            foreach ( $taskTop as $ttk => $ttv ) {
                                $taskTop[$ttk]['istop'] = 1;
                                $task_ids[] = $ttv['taskId'];
                            }
                        }
					}
				}

                $configs = $this->urlParams['ft']['q'];
				if($configs) {
					$parr = explode(":",$configs);
					foreach($parr as $config) {
						$carr = explode(",",$config);
						foreach($carr as $v) {
							$v = intval($v);
							if($v > 0) {
								$params['extvalueid'][] = $v;
							}
						}
					}
				}
				//$this->oSe->setDebug(true);		
 				if ( $task_ids ) $params['listIdRecommend'] = $task_ids;//从搜索引擎里面剔除置顶需求 保证需求不会重复出现 李淘 2014-12-12
				//互斥处理
				if($tplParams['c']==2&&$tplParams['h']==2){
					$result['total_size']=0;
				}elseif($tplParams['c']==3&&$tplParams['h']==2){
					$result['total_size']=0;
				}else{
					$params = zbj_service_common::addFilterParams($params,'task');
					$result=$this->oSe->search($params);			
				}
			}

			if ($iPage == 1) $result['items'] = array_merge( (array)$taskTop, (array)$result['items'] );


        //前台打标 2015/08/17
        $arr_task_ids = array();
        foreach ($result['items'] as $k=>$v){
            $arr_task_ids[] = $v['taskId'];
        };
        $task_ids = "";
        if(!empty($arr_task_ids)){
            $task_ids = implode(',', $arr_task_ids);
        }

        $m_task_hall = new zbj_model_mk_taskhall();
        $list_task_hall = $m_task_hall->select("task_id in ({$task_ids})", 'task_id,hall_id');

        $arr_task_hall = array();
        foreach($list_task_hall->items as $val){
            $arr_task_hall[$val['task_id']] = $val['hall_id'];
        }

        zbj_lib_ApiClient::init(zbj_lib_Constant::ZBJAPI_APPID, zbj_lib_Constant::ZBJAPI_APPSECRET,10,array('zbj_reward_sdk'));
        foreach ($result['items'] as $k => &$trade_data) {
            $content = zbj_lib_BaseUtils::getUbbStr($trade_data['content'], 80);
            $trade_data['content'] = $trade_data['hideSearch'] ? "" : $content;
            $taskId = $trade_data['taskId'];

            //前台打标
            $hall_id = isset($arr_task_hall[$taskId])?$arr_task_hall[$taskId]:0;
            $arr_reward_status = array();
            $arr_reward_status['hall_id'] = $hall_id;
            //zbj_lib_ApiClient::init(zbj_lib_Constant::ZBJAPI_APPID, zbj_lib_Constant::ZBJAPI_APPSECRET,10,array('zbj_reward_sdk'));
            if($hall_id>0){
                //获取套餐信息
               // zbj_lib_ApiClient::init(zbj_lib_Constant::ZBJAPI_APPID, zbj_lib_Constant::ZBJAPI_APPSECRET,10,array('zbj_reward_sdk'));
                $s_pac = new com\zhubajie\reward\interfaces\PackageServiceClient(null);
                zbj_lib_ApiClient::build($s_pac);

                $detailSearchDo = new com\zhubajie\reward\dataobject\Package\DetailSearchDo();
                $detailSearchDo->package_id = 0;
                $detailSearchDo->task_id = $taskId;
                $pac_result = $s_pac->getDetai($detailSearchDo);

                if($pac_result->success){
                    $s_detail = new com\zhubajie\reward\dataobject\Package\DetailDo();
                    $s_detail = $pac_result->detail;
                    $arr_reward_status['type'] = $s_detail->type;
                    $arr_reward_status['define_type'] = $s_detail->define_type;
                }
            }

            $result['items'][$k]['reward_status'] = $arr_reward_status;

            $result['items'][$k]['is_tender'] = 0;
            if($this->_userid && $hall_id>0){
                if($trade_data['pubUserId']==$this->_userid){
                    continue;
                }
               // zbj_lib_ApiClient::init(zbj_lib_Constant::ZBJAPI_APPID, zbj_lib_Constant::ZBJAPI_APPSECRET,10,array('zbj_reward_sdk'));
                $s_bidlog = new com\zhubajie\reward\interfaces\BidLogServiceClient(null);
                zbj_lib_ApiClient::build($s_bidlog);

                $bid_result = $s_bidlog->isAllowedBid($this->_userid,$taskId);

                if($bid_result->success){
                    $result['items'][$k]['is_tender'] = 1;
                }
            }
        }

        // 显示已参与修改(2013-08-16 zhuhuabing)
        if($this->_userid && !empty($result['items'])){
	     		
			//foreach ($result['items'] as $k=>$v)
				//$ids[] = $v['taskId'];
			//$ids = implode(',', $ids);
			$taskids = array();
			$mdlmkworks = zbj_model_api::get('zbj_model_mk_works');
			$workresult = $mdlmkworks->selectOne("task_id in ({$task_ids}) and user_id={$this->_userid}",'group_concat(DISTINCT task_id) as tids');
			if(!empty($workresult)){
				foreach ($result['items'] as $k => $v)
					if (in_array($v['taskId'], explode(',', $workresult['tids'])))
						$result['items'][$k]['join'] = 1;
			}
        }       
       //end 显示已参与修改(2013-08-16 zhuhuabing)

			$totalSize = $result['total_size'];
			$ab_sid = $result['ab_sid'];
			$data['ab_sid'] = $ab_sid;
			$data['virtual_id']=$currVirtual['virtual_id'];
			$queryString =  $_SERVER['QUERY_STRING'];
			$tplParams['query_string'] = trim($tplParams['query_string'],'&');
			$pageBar = $this->PageBar($totalSize, $iLimit, $iPage, $inPath,$style = 'style5', $queryString, 'task');
			$tplParams['data'] = $result['items'];
			$tplParams['total_num']=$result['total_size'];
			$tplParams['pagebar']=$pageBar;
			$data['list_data']=$tplParams;
			$data['hottask']=array(
				'kaifa'=>array('wzkf'=>'wzkf','rjkf'=>'rjkf','ydyykf'=>'ydyykf','weixinkf'=>'weixinkf'),
				'jijian'=>array('tuiguang'=>'tuiguang','wdtg'=>'wdtg','weibotg'=>'weibotg','wlyx'=>'wlyx'),
			);
			//友情链接
			$lvirid = $data['virtual_id'] ? $data['virtual_id'] : -1;
			$friendlink = $this->srvVirtual->getfriendlink($lvirid, 3);
			$data['friendlink'] = $friendlink;
			//内部链接
			$sideLink = $this->srvVirtual->getSidelink($lvirid, 3);
			$data['sideLink'] = $sideLink;
			//简介
			$virtual = new zbj_service_categoryvirtual($lvirid);
			$information = $virtual->getInformation();
			$data['information'] = $information;
			//渲染地区
			$data['provincelist'] = $this->getRegion();
			//得到热门地区
			#$data['hotregions'] = zbj_service_region::getHotRegion();
			$data['current_region'] = zbj_service_common::getRegionByIp(zbj_lib_BaseUtils::getIp());

			$data['all_list'] = $all_list;

        	$curconfigs = zbj_service_categoryguide::getConfigById($currVirtual['guide_id']);
			$data['category']['curconfigs'] = $curconfigs;
        
        	$selectConfs = array();
			if(!empty($parr) && !empty($curconfigs)) {
				foreach($curconfigs as $k=>$config) {
					foreach($parr as $v) {
						$name = array_search($v,$config);
						$row = array();
						if($name) {
							$selectConfs[$k][$name] = $v;
						}
					}
				}
			}
           
			$data['category']['selectedConfs'] = $selectConfs;
			
			$data['searchbox'] = $this->loadSearchBoxSetting();

            // 需求市场CMS调用类目
            $data['cms_category'] = $this->getCmsCategory();

            //新版需求发布类目
            $pubSrv = new zbj_service_categorypub();
            $data['pub_category'] = $pubSrv->getRightPubTree();

			$bzTop = zbj_lib_BaseUtils::getStr(($_REQUEST['bztop']),'int');
			if($bzTop==1){
				$data['bzTop'] = 1;
			}
			if($bzTop==2){
				$data['bzTop'] = 2;
			}
		
			//推荐任务
			$data['rTask'] = $this->getRecommendTasks();
 			if ($data['channels']['cndir']=="zhufu"  || $indir=="zhufu"){
				return $this->render('t5s/task/task_merry.tpl',$data,'%');
			}	
 			if ($data['channels']['cndir']=="qiming"  || $indir=="qiming"){
				return $this->render('t5s/task/task_named.tpl',$data,'%');
			}

			//smarty_template_function_getLink
			if ($categorylevel==1||$categorylevel==2){
				return $this->render('t5s/task/task.tpl', $data,'%');
			}else{
				return $this->render('t5s/task/task_index.tpl', $data,'%');
			}
			
    }

    // 获取CMS配置类目
    public function getCmsCategory(){
        // 需求市场CMS调用类目
        $cms = new zbj_lib_cms();
        // 品牌设计
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3892 : 2407 ,array(),0,4);
        // 网站开发
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3887 : 2410,array(),0,4);
        // 网络推广
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3896 : 2413,array(),0,4);
        // 工业设计
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3890 : 2416,array(),0,4);
        // 宣传包装
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3893 : 2408 ,array(),0,4);
        // APP
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3888 : 2411,array(),0,4);
        // 文案策划
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3898 : 2414,array(),0,4);
        // 建筑工程
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3897 : 2417,array(),0,4);
        // 装修设计
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3895 : 2409,array(),0,4);
        // UI设计
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3889 : 2412,array(),0,4);
        // 动漫影视
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3894 : 2415,array(),0,4);
        // 服饰设计
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3891 : 2418,array(),0,4);
        // 漫画/广告设计
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3949 : 3949,array(),0,4);
        // 软件开发
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3950 : 3950,array(),0,4);
        // 网店推广
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3951 : 3951,array(),0,4);
        // 网店装修
        $cms_category[] = $cms->getRecommend(zbj_lib_Constant::DOMAIN == 'zhubajie.com' ? 3952 : 3952,array(),0,4);

        return $cms_category;
    }
    
    //成功案例
    function pageSuccessCase($inPath) { 	
    	self::setHeaderCache(3600);
		$tpl = 'taskhall/success-task.tpl';
    	$this->urlParams=zbj_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
    	$filter = $this->SuccessCasePath($inPath);
        $this->urlParams['page'] = $filter['p'];
        //如果传值直接查找搜索引擎获取成功案例数据
        if(!empty($this->urlParams['chdir']) || !empty($this->urlParams['page']) || !empty($_GET)){
        	//标记搜索状态为0,获取成功案例搜索结果数据data			
	        $data = $this->SearchSuccessCaseData(0);
            //$data返回值为1时证明没有搜索到数据
	        if($data !== FALSE){
		        return $this->render($tpl, $data,'%');	 
		    }
		    $datas = FALSE;
		}
		//未传值则取缓存
		$cache = new zbj_lib_cache('memcache');
	    $key = 'task.zhuabjie.com.maintask.Case.search.'.$this->urlParams['indir'];
    	$data = $cache->get($key);
    	//如果GET参数不为空，则为取到的缓存赋值，包括关键字kw、最高价格、最低价格
    	if(!empty($_GET)){
    		$kw = urldecode($_GET['kw']);
		    $kw = zbj_lib_BaseUtils::getStr(trim($kw));
    		$data['list_data']['keywords'] = $DataCaseLast['list_data']['keywords'] = $kw;
    		//获取最大最小价格
            $tplParamPrice = $this->getCasePrice();
            if($tplParam !== FALSE){
	    		$data['list_data']['maxprice'] = $DataCaseLast['list_data']['maxprice'] = $tplParamPrice['maxprice'];
	    		$data['list_data']['minprice'] = $DataCaseLast['list_data']['minprice'] = $tplParamPrice['minprice'];
    	    }
    		//状态为1的时候证明第一次搜索没有数据
    		$data['list_data']['case_type'] = $DataCaseLast['list_data']['case_type'] = 1;
    	}
        //如果缓存在成功案例和最新成交数据则取缓存，否则查找搜索引擎
        if(is_array($data['list_data']['data']) && is_array($data['last_succed_webdev_task']) && !empty($data['list_data']['data']) && empty($this->urlParams['chdir'])) return $this->render($tpl, $data,'%');
        //如果缓存没有数据则调用搜索引擎查询
        if($datas === FALSE){
// comment by chengchao, 在模版里读取不到get变量，需确认一下unset的原因
//            unset($_GET);
        	unset($_GET['b']);
            unset($_GET['e']);
            unset($_GET['kw']);
            unset($_GET['minprice']);
            unset($_GET['maxprice']);
        }
        //获取成功案例搜索结果数据data,将状态设置为1，防止再返回$data=1	
        $data = $this->SearchSuccessCaseData(1);
        //如果没有传入筛选条件并且不属于三级栏目则缓存结果10分钟
        if(empty($this->urlParams['chdir'])){
            $cache->set($key,$data,600);
        }
        
        if($datas === FALSE){
	        //设置视图显示参数
	        $data['list_data']['keywords'] = $DataCaseLast['list_data']['keywords'];
		    $data['list_data']['maxprice'] = $DataCaseLast['list_data']['maxprice'];
		    $data['list_data']['minprice'] = $DataCaseLast['list_data']['minprice'];
		    $data['list_data']['case_type'] = $DataCaseLast['list_data']['case_type'];
	    }
        return $this->render($tpl, $data,'%');
    }

    /**
	*处理路径获取所需数据
	* @param $inPath 路径
	* @return array $filter 当前页数
    */
    private function SuccessCasePath($inPath) {
    	$this->urlParams['filter']=zbj_lib_BaseUtils::getStr($this->urlParams['filter']);
    	preg_match_all("/([a-zA-Z])([0-9,:]+)/",$this->urlParams['filter'],$filter);
		if (!empty($filter[1]) && is_array($filter[1]) && !empty($filter[2]) && is_array($filter[2])) {
			$filter = array_combine($filter[1],$filter[2]);
		} else {
			$filter = array();
		}
		return $filter;
    }

    /**
	*获取成功案例数据data
	* @param $inPath 路径 GET page分页 minprice最小金额 maxprice最大金额 kw关键字 indir cndir类目标识
	* @return array $data 成功案例所需数据
    */
    private function SearchSuccessCaseData($success_case_result_state) {
    	//获取页数
		$iLimit=27;
		$page = zbj_lib_BaseUtils::getStr(($this->urlParams['page']),'int');
		$iPage = $page>=1?(int)$page:1;
		$tplParams['page']=$iPage;
		$tplParams['limit']=$iLimit;
		//组合查询条件
     	$params = array(
				'cat' => 'req',	
				'size' => $iLimit,
				'page' => ($iPage-1),
				'statusfilter' => 'closed',
     			'sort'=>array('!starttime'),						
			);
     	//接收关键字
    	$kw = urldecode($_GET['kw']);
		$kw = zbj_lib_BaseUtils::getStr(trim($kw));
     	//接收虚拟类目标识
    	$indir=zbj_lib_BaseUtils::getStr($this->urlParams['indir']);
    	$chdir=zbj_lib_BaseUtils::getStr($this->urlParams['chdir']);
        //获取当前类目所属下级类目
		// $getChannel = $this->getChannel($indir,$chdir);
		$getChannel = $this->getChannelNew($indir,$chdir);
		//虚拟类目名称
		$virtual_name = $getChannel['virtual_name'];
		//获取筛选类目虚拟ID号
		$params['catalogidtreefilter'] = $getChannel['catalogidtreefilter'];		
        //稿件数大于后台设置的稿件数,金额大于后台设置的金额
        $screening = $this->ScreeningManuscriptPrice($params['catalogidtreefilter']);
        $task_avg_datas = json_decode($screening,true);
        //后台设置的稿件数
        $params['minworkcount'] = $task_avg_datas['seller'];
        //后台设置的金额
        $params['minprice'] = (int)$task_avg_datas['price'];
        $params['maxprice'] = (int)$task_avg_datas['price'] + 200000;
		//获取最大最小价格
        $tplParam = $this->getCasePrice();
        //如果未获取到最小最大价格则不赋值
        if($tplParam !== FALSE) {
        	$tplParams['minprice'] = $params['minprice'] = $tplParam['minprice'];
        	$tplParams['maxprice'] = $params['maxprice'] = $tplParam['maxprice'];
        	$tplParams['query_string'] = $tplParam['query_string'];
        }
		//关键字搜索		
		if (!empty($kw)){
			$tplParams['keywords'] = $params['query'] = $kw;				
			$tplParams['query_string'].="&kw={$kw}";
		}	
		//调用搜索引擎
		$params = zbj_service_common::addFilterParams($params,'success');
		$result=$this->oSe->search($params);
		//判断是否搜索到数据
		if(empty($result['items']) && $success_case_result_state == 0){
            //将状态返回为1，搜索无数据时重新取缓存
			return FALSE;
		}
		foreach($result['items'] as $key=>$value){
			$mdl_eval = new zbj_model_mb_evaluation();
			if($value['mode'] != 10){
				$eval = $mdl_eval->selectOne("task_id = {$value['taskId']}");
				$eval = $eval['comment'];
				$result['items'][$key]['comment'] = $eval;
			}else{
				$result['items'][$key]['comment'] = '';
			}
			$time1 = date_create(date("Y-m-d", $value['startTime']));
			$time2 = date_create(date("Y-m-d", $value['endTime']));
			$time_diff = date_diff($time1, $time2);
			$result['items'][$key]['day'] = $time_diff->days;
		}
        //组合参数	
		$tplParams['query_string'] = trim($tplParams['query_string'],'&');
		$tplParams['data'] = $result['items'];
		$tplParams['total_num']=$result['total_size'];
		//$tplParams['pagebar']=$this->PageBar($result['total_size'], $iLimit, $iPage, $inPath,$style = 'style5', $_SERVER['QUERY_STRING'], 'task');
		$data['list_data']=$tplParams;
		$data['channels'] = $getChannel['channels'];
		$data['virtual_id']=$params['catalogidtreefilter'];
        //获取类目树
    	$srvCommon = new zbj_service_common();
        // $data['all_list'] = $srvCommon->getT5sNavData("success");
        $data['all_list'] = $srvCommon->getNewT5sNavData("success");
        //新版需求发布类目
        $pubSrv = new zbj_service_categorypub();
        $data['pub_category'] = $pubSrv->getRightPubTree();
        //最新成交
        $data['last_succed_webdev_task'] = $this->newDeal();	
        //SEO
        if(!empty($virtual_name)){
	        $data['header_argv']['head_title'] = "{$virtual_name}服务成功案例展示-猪八戒网";
			$data['header_argv']['keywords'] = "{$virtual_name},{$virtual_name}价格,{$virtual_name}案例";
			$data['header_argv']['description'] = "猪八戒网{$virtual_name}频道汇集最新{$virtual_name}交易成功案例信息，提供{$virtual_name}需求价格参考，案例展示。";
		}else{
			$data['header_argv']['head_title'] = "成功案例展示-猪八戒网";
			$data['header_argv']['keywords'] = "成功案例,猪八戒网";
			$data['header_argv']['description'] = "猪八戒网汇集最新交易成功案例信息，提供需求价格参考及案例展示。";
		}
		return $data;
    }

    /**
	*比较价格最大最小值
	* @param 无
	* @return array $data 价格最大最小值
    */
    private function getCasePrice() {
    	$_GET['minprice'] = $_GET['b'];
    	$_GET['maxprice'] = $_GET['e'];
    	//接收价格较小/大值
		if(strlen($_GET['minprice']) && $_GET['minprice']>=1){
			$minprice = zbj_lib_BaseUtils::getStr(($_GET['minprice']),'int');
		}
		if(strlen($_GET['maxprice']) && $_GET['maxprice']>=1) {
			$maxprice = zbj_lib_BaseUtils::getStr(($_GET['maxprice']),'int');
		}
    	//最大金额最小金额
		if(!empty($minprice) || !empty($maxprice)){		

			if($minprice && $maxprice){	
				$small = ($minprice > $maxprice) ? $maxprice : $minprice;
				$big = 	($maxprice > $minprice) ? $maxprice : $minprice;
				$minprice = $small;
				$maxprice = $big;		
			}else if($minprice){
				$minprice = $minprice;
				$maxprice = 1000000;
			}else if($maxprice){
				$minprice = 0;
				$maxprice = $maxprice;
			}
			$tplParams['minprice'] = $params['minprice'] = $minprice;
			$tplParams['maxprice'] = $params['maxprice'] = $maxprice;
			$tplParams['query_string'].="&b={$minprice}&e={$maxprice}";
			return $tplParams;
		}else{
			return FALSE;
		}	
    }

    /**
	*获取当前类目下级类目信息
	* @param array $indir,$chdir 虚拟分类标识
	* @return array $data 所属频道信息
    */
    private function getChannel($indir,$chdir) {
    	$categoryList = $this->srvVirtual->getTree();
    	$useCommonHeader = false;
    	if (empty($indir)){//大厅分类列表
    		$channel=array();
    		foreach ($categoryList as $k=>$v){
    			$channel[$k]['name']=$v['virtual_name'];
    			$channel[$k]['cndir']=$v['cndir']; 
    			$channel[$k]['is_show_trade']=$v['is_show_trade'];
    			$channel[$k]['redirect']=$v['redirect_url'];     			
    		 	$channel[$k]['children']=$v['list'];
    		}
    		$data['channels']=$channel;
    	}elseif(!empty($indir)&&empty($chdir)){//大厅一级分类列表
				$currVirtual = $this->srvVirtual->getVirtualByCndir($indir);
		    	foreach ($categoryList[$currVirtual['parent_id']]['list'] as &$sec_vals) {
					if ($sec_vals['virtual_id'] == $currVirtual['virtual_id'])
						$sec_vals['is_current'] = 1;
				}
	    		$data['channels']=array(
	    		 	"name"=>$currVirtual['virtual_name'],
					"cndir"=>$indir,
					"current_id"=>$currVirtual['virtual_id'],
	    		    "redirect"=>$currVirtual['redirect_url'], 
	    			"pub_title"=>$currVirtual['pub_title'], 
    		 		"pub_content"=>$currVirtual['pub_content'], 
	    			"pub_amount"=>$currVirtual['pub_amount'],    			
	    		 	"children"=>$categoryList[$currVirtual['parent_id']]['list'][$currVirtual['virtual_id']]['list'],
					"sec_level" => $categoryList[$currVirtual['parent_id']]['list'],
					"level" => 1
	    		 );
		    	$params['catalogidtreefilter']=array($currVirtual['virtual_id']);
    	}elseif(!empty($chdir)){    //大厅二级分类列表		
	    		$currVirtual = $this->srvVirtual->getVirtualByCndir($chdir);
	    		$parentVirtual= $this->srvVirtual->getVirtualByCndir($currVirtual['parent_cndir']);
				foreach ($categoryList[$currVirtual['virtual1id']]['list'] as &$sec_vals) {
					if ($sec_vals['virtual_id'] == $parentVirtual['virtual_id'])
						$sec_vals['is_current'] = 1;
				}
    		 	$data['channels']=array(
    		 		 "name"=>$currVirtual['parent_name'],
					 "cndir"=>$currVirtual['parent_cndir'],
    		 		 "redirect"=>$currVirtual['parent_redirect'],
    		 	     "parent_pubamount"=>$parentVirtual['pub_amount'],
    		 		 "current_name"=>$currVirtual['virtual_name'],
					 "current_cndir"=>$chdir,
				     "current_id"=>$currVirtual['virtual_id'],
    		 		 "current_redirect"=>$currVirtual['redirect_url'],
    		 		 "pub_title"=>$currVirtual['pub_title'], 
    		 		 "pub_content"=>$currVirtual['pub_content'],
    		 		 "pub_amount"=>$currVirtual['pub_amount'], 	 		 
    		 		 "children"=>$categoryList[$currVirtual['virtual1id']]['list'][$currVirtual['virtual2id']]['list'],
					 "sec_level" => $categoryList[$currVirtual['virtual1id']]['list'],
					 "level" => 2
    		 	);
	    	    $params['catalogidtreefilter']=array($currVirtual['virtual_id']);
    	}
    	$data['catalogidtreefilter'] = $params['catalogidtreefilter'];
    	$data['virtual_name'] = $currVirtual['virtual_name'];
    	return $data;
    }

    /**
     * 获取当前导购类目的信息add-by yangliangliang
     */
    private function getChannelNew($indir,$chdir) {
    	if($indir && $chdir) {
    		$newurl = zbj_lib_Constant::TASK_URL.'/o-'.$chdir.'/';
    		zbj_lib_BaseUtils::run301($newurl);
    	}
    	if($indir) {
    		$retdir = zbj_service_categoryguide::getByDelDir($indir);
    		if($retdir) {
    			$chdir = $retdir;
    			$newurl = zbj_lib_Constant::TASK_URL.'/o-'.$chdir.'/';
    			zbj_lib_BaseUtils::run301($newurl);
    		}
    	}
    	// $categoryList = $this->srvVirtual->getTree();
    	$useCommonHeader = false;
    	if (empty($indir)){//大厅分类列表
    		$channel=array();
    		foreach ($categoryList as $k=>$v){
    			$channel[$k]['name']=$v['virtual_name'];
    			$channel[$k]['cndir']=$v['cndir']; 
    			$channel[$k]['is_show_trade']=$v['is_show_trade'];
    			$channel[$k]['redirect']=$v['redirect_url'];     			
    		 	$channel[$k]['children']=$v['list'];
    		}
    		$data['channels']=$channel;
    	}elseif(!empty($indir) && empty($chdir)){//大厅一级分类列表
				$currVirtual = zbj_service_categoryguide::getInfoByEnDir($indir);
				if($currVirtual['level'] == 3) {
					$indir = $currVirtual['parent_cndir'];
					$chdir = $currVirtual['cndir'];
				}else {
					$children_list = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['guide_id']);
					$children_list = zbj_service_categoryguide::formatGuideList('task',$children_list);
					$sec_level = zbj_service_categoryguide::getChildrenInfoListById($currVirtual['parent_id']);
					$sec_level = zbj_service_categoryguide::formatGuideList('task',$sec_level);
					$level = 1;
					if($currVirtual['level'] == 1) {
						$sec_level = $children_list;
						$children_list = array();
						$level = 0;
						if($currVirtual['parent_id'] != 2000238) 
							$rootGuide = $currVirtual;
					}else {
						if($currVirtual['parent_id'] != 2000238) 
							$rootGuide = zbj_service_categoryguide::getInfoById($currVirtual['parent_id']);
					}
		    		foreach ($categoryList[$currVirtual['parent_id']]['list'] as &$sec_vals) {
						if ($sec_vals['virtual_id'] == $currVirtual['virtual_id'])
							$sec_vals['is_current'] = 1;
					}
	    			$data['channels']=array(
	    			 	"name"=>$currVirtual['guide_name'],
						"cndir"=>$indir,
						"current_id"=>$currVirtual['guide_id'],
						"current_name"=>$currVirtual['guide_name'],
	    			    "redirect"=>$currVirtual['redirect_url'], 
	    				"pub_title"=>$currVirtual['pub_title'], 
    		 			"pub_content"=>$currVirtual['pub_content'], 
	    				"pub_amount"=>$currVirtual['pub_amount'],    			
	    			 	"children"=>$children_list,
						"sec_level" => $sec_level,
						"root"=>$rootGuide,
						"level" => $level
	    			 );
		    		$params['catalogidtreefilter']=array($currVirtual['guide_id']);
		    	}
    	}
    	if(!empty($chdir)){    //大厅二级分类列表		
	    		$currVirtual = zbj_service_categoryguide::getInfoByEndir($chdir);
	    		$parentVirtual = zbj_service_categoryguide::getInfoById($currVirtual['parent_id']);
	    		$sec_level = zbj_service_categoryguide::getChildrenInfoListById($parentVirtual['parent_id']);
	    		$sec_level = zbj_service_categoryguide::formatGuideList('task',$sec_level);
	    		$children = zbj_service_categoryguide::getChildrenInfoListById($parentVirtual['guide_id']);
	    		$children = zbj_service_categoryguide::formatGuideList('task',$children);
	    		$sec_level[$currVirtual['parent_id']]['list'] = $children;
	    		if($parentVirtual['parent_id'] != 2000238) 
	    			$rootGuide = zbj_service_categoryguide::getInfoById($parentVirtual['parent_id']);
				foreach ($categoryList[$currVirtual['virtual1id']]['list'] as &$sec_vals) {
					if ($sec_vals['virtual_id'] == $parentVirtual['virtual_id'])
						$sec_vals['is_current'] = 1;
				}
    		 	$data['channels']=array(
    		 		 "name"=>$currVirtual['parent_name'],
					 "cndir"=>$currVirtual['parent_cndir'],
    		 		 "redirect"=>$currVirtual['parent_redirect'],
    		 		 "parent_id"=>$parentVirtual['guide_id'],
    		 	     "parent_pubamount"=>$parentVirtual['pub_amount'],
    		 		 "current_name"=>$currVirtual['guide_name'],
					 "current_cndir"=>$chdir,
				     "current_id"=>$currVirtual['guide_id'],
    		 		 "current_redirect"=>$currVirtual['redirect_url'],
    		 		 "pub_title"=>$currVirtual['pub_title'], 
    		 		 "pub_content"=>$currVirtual['pub_content'],
    		 		 "pub_amount"=>$currVirtual['pub_amount'], 	 		 
    		 		 "children"=>$children,
					 "sec_level" => $sec_level,
					 "root" => $rootGuide,
					 "level" => 2
    		 	);
	    	    $params['catalogidtreefilter']=array($currVirtual['guide_id']);
    	}
    	$data['catalogidtreefilter'] = $params['catalogidtreefilter'];
    	$data['virtual_name'] = $currVirtual['guide_name'];
    	return $data;
    }

    /**
	*获取后台设置的稿件数和金额，如果没有设置取默认值
	* @param array $catalogidtreefilter 虚拟分类ID号
	* @return json $category_content 后台设置的稿件数和金额
    */
    private function ScreeningManuscriptPrice($catalogidtreefilter) {
    	if(empty($catalogidtreefilter)) return $this->setDefautlSucTradeData();

    	//检查缓存是否有稿件数和金额数
    	$cache = new zbj_lib_cache('memcache');
    	$key = 'task.zhuabjie.com.maintask.Screening.category.'.$catalogidtreefilter['0'];

    	$category_content = $cache->get($key);
    	
    	if(!empty($category_content)){
    		return $category_content;
    	}
        //如果传入的虚拟类目ID不为空则查询类目下的稿件数和金额
        
        $scrVirtual = new zbj_service_categoryvirtual($catalogidtreefilter['0']);
	    $category_contents = $scrVirtual->getBaseCategory();

	    $priceSetting = json_decode($category_contents['task_avg_data'],true);

	    if(empty($priceSetting['price']))  return $this->setDefautlSucTradeData();

	    $category_content = $category_contents['task_avg_data'];
	    
	    //将查询到的结果保存memcache
        $cache->set($key,$category_content,3600);
        return $category_content;
    }

    /**
	*默认稿件数和价格数组
	* @param 无
	* @return json $category_content 默认的稿件数和金额
    */
    private function setDefautlSucTradeData() {
    	$category_content = '{"price":"500.00","seller":15,"rate":"98.3"}';
    	return $category_content;
    }

     /**
	*最新成交
	* @param  无
	* @return array $result_list 最新成交数组
    */
    private function newDeal($page=1) {	
		$cache = new zbj_lib_cache('memcache');
		$key = 'task.zhubajie.com.succed.task.newDeal.'.$page;
		$cache_data = $cache->get($key);
		if(is_array($cache_data)) {
			return $cache_data;
		}
		// 搜索评价
		$result_list = array();
		$datatime = time()-7*24*3600;
		$datatimes = date("y-m-d",time());
		$cond = "dateymd >= {$datatimes} AND `type` = 2 AND is_auto = 0 AND amount >= 500 AND CHAR_LENGTH(comment) > 5";
		$item = 'task_id,comment';
		$orderby = 'order by task_id DESC';
		$mdl_eval = new zbj_model_mb_evaluation();
		$mdl_eval->setLimit(100);
		$mdl_eval->setPage($page);

		$eval_list = $mdl_eval->select($cond, $item, $group, $orderby, '',array('type'=>'query','dbinfo'=>'co_member'))->items;

		//处理搜索到的结果
		$task_map = array();
		foreach($eval_list as $task) {
			$task_map[$task['task_id']] = $task;
		}
		//用处理得到的task_id从task表中取出任务标题，价格,10:悬赏,13：招标,state 4结束并打款
        $cond = 'task_id IN (' . join(',', array_keys($task_map)) . ') AND mode IN (10,13) AND state=4';
		$item = 'task_id,title,amount';
		$mk_task = new zbj_model_mk_task();
		$mk_task->setLimit(20);
		$task_list = $mk_task->select($cond, $item, '', '', '',array('type'=>'query','dbinfo'=>'co_market'))->items;
        // 组合任务评价
        $task_list = (array)$task_list;
    	foreach($task_list as $task) {
    		$eval = $task_map[$task['task_id']];
			$result_list[] = array(
				'task_id' => $eval['task_id'],
				'price' => $task['amount'],
				'title' => $task['title'],
				'comment' => $eval['comment']
				);
	    }
	    if($page == 1 && count($result_list)<10){
	    	$result_list2 = $this->newDeal(2);
	    	empty($result_list) && $result_list = (array)$result_list;
	    	!empty($result_list2) && $result_list = array_merge($result_list,$result_list2);
	    }

		$cache->set($key,$result_list,600);
		return $result_list;
	}


	private function getRecommendTasks() {
		$o = new SList();
		return $o->getRecommendTasks();
	}

	public function pageTextImg(){
    	$taskId=$_REQUEST['tid']?(int)$_REQUEST['tid']:0;
    	$font_size=isset($_REQUEST['fsize'])?(float)$_REQUEST['fsize']:13;
    	$max_width =isset($_REQUEST['mwidth'])?(float)$_REQUEST['mwidth']:0;   	
    	$color=isset($_REQUEST['color'])?explode(',', $_REQUEST['color']):array(255,0,0);
    	$font_spaceing=isset($_REQUEST['fspace'])?(float)$_REQUEST['fspace']:10;
    	$font=isset($_REQUEST['f'])?zbj_lib_BaseUtils::getStr($_REQUEST['f']):'';
    	if ($font){
    		$str=mb_substr($font, -2, 2, "utf-8");
    		if ($str=='bd'){
    			$b = true;
    			for ($i = 0; $i < mb_strlen($font, "utf-8") -2; $i++) {
    					$trueFont .= mb_substr($font, $i, 1, "utf-8");
    			}
    		} else {
				$trueFont = $font;
			}
    	}    	
    	$lightcolor=isset($_REQUEST['lcolor'])?explode(',', $_REQUEST['lcolor']):array(255,0,0);
    	$kw=isset($_REQUEST['kw'])?zbj_lib_BaseUtils::getStr($_REQUEST['kw']):'';
    	$light=$kw&&$lightcolor?array('keyword'=>$kw,'color'=>$lightcolor):array(); 
    	if ($taskId){
    		if ($taskId>=80000000){
    		$mdlTask=zbj_model_api::get('zbj_model_mk_taskwitmart',$taskId);
    		$title= $mdlTask->getData('title');
	    	}else{
	    		$mdlTask=zbj_model_api::get('zbj_model_mk_task',$taskId);
	    		$title= $mdlTask->getData('title');		    	
	    	}
	    	$oimg = new SText2img($trueFont,$b);
			return $oimg->getTextImg($title, $font_size, $max_width , $color , $font_spaceing, true,$light);
    	}else{
    		return false;
    	}
    }    
//<editor-fold desc="日历列表">
    public function  pageCalendar($inPath){
        //头部需求数
        $this->init();
        $inPath[2]='recalendar';  
        $this->urlParams =zbj_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $page = isset($this->urlParams['page'])? (int)$this->urlParams['page']: 1;
        $timeparams = date('Y-m-d',  $this->_time);
        if(!empty($timeparams)){
            $tarr = explode('-', $timeparams);
            $daysInMonth = date("t",mktime(0,0,0,$tarr[1],1,$tarr[0]));
            $i = 1;
            $days = array();
            while ($i <= $daysInMonth){
                $days[] = $i;
                $i++;
            }
            $this->aParams['days'] = $days;
            $this->aParams['year'] = $tarr[0];
            $this->aParams['month'] = $tarr[1];
            $this->aParams['day'] = $tarr[2];
            $this->aParams['iday'] = intval($tarr[2]);
        }
        $limit = 20;
        //登录用户信息显示
        if ($this->_userid) {
            $mdlMbCount = zbj_model_api::get('zbj_model_mb_count');
            $aUserInfo = $mdlMbCount->selectOne(array('user_id' => $this->_userid), 'expenditure,t_ok_num,bid_win_num,income,user_id,nickname');
            $this->aParams['userinfo'] = $aUserInfo;
        }  
        $params = array(
            'cat' => 'req',
            'size' => $limit,
            'page' => $page-1,
            'trustfilter' => 'trusted',
            'sort' => array('!starttime'),
        );
        //时间筛选
        if(!empty($timeparams)){            
            $begintime = strtotime($timeparams);
            $endtime = strtotime(date('Y-m-d',$begintime + 86400));
            $params['earlieststarttime']=$begintime;
            $params['lateststarttime']=$endtime;        
        }
        $tasksearchlist = $this->oSe->search($params);
        $totalSize = min($tasksearchlist['total_size'],500*$limit);
        $queryString =  $_SERVER['QUERY_STRING'];
        $tplParams['query_string'] = trim($tplParams['query_string'],'&');
        if($totalSize >0){ 
            $pagebar = $this->PageBar($totalSize, 20, $page, $inPath,$style = 'style5', $queryString, 'www'); 
        }        
        $this->aParams['pagebar'] = $pagebar;
        $this->aParams['tasksearchlist'] = $tasksearchlist['items'];
        //热门标签
        $mdlTag = zbj_model_api::get('zbj_model_mk_tag');
        $mdlTag->setPage(1);
        $mdlTag->setCount(true);		  
        $mdlTag->setLimit(10);	
        $orderby = 'ORDER BY sort DESC, follow_num DESC';
        $condition = array(
            'is_hide' => 0,
            'is_merge' => 0,
            'is_enabled' => 1,
            'type' => 0,
        );
        $hottagsinfo = $mdlTag->select($condition, 'tag_id,tag_name', '', $orderby)->items;
        $this->aParams['hottagsinfo'] = $hottagsinfo;
        $this->aParams['nav'] = 'calendar';
        //取威客
		 $cms=new zbj_lib_cms();
        $recusers = $cms->getRecommend(296);
    	if (!empty($recusers['list'])) {
    		if (count($recusers['list']) > 12) {
	    		$aRkey = array_rand($recusers['list'], 12);
	    		if (!empty($aRkey)) {
	    			foreach ($aRkey as $value) {
	    				$aRs[] = $recusers['list'][$value];
	    			}
	    		}
    		} else {
    			$aRs = $recusers['list'];
    			shuffle($aRs);
    		}
        }
        $this->aParams['recusers'] = $aRs;
        $this->aParams['header_argv']['head_title'] = "猪八戒网实时推荐用户需求任务_800万专业威客帮你解决不同时间段任务需求!";
		$this->aParams['header_argv']['keywords'] = "最新任务,威客任务,猪八戒网";
		$this->aParams['header_argv']['description'] = "猪八戒网全球最大创意服务平台，提供实时推荐用户需求任务，800万专业威客帮你解决不同时间段任务需求。立刻发布类似需求任务、实时查看威客任务上猪八戒网！";          
        return $this->render('main/calendar.html', $this->aParams);
        
    }
//</editor-fold>

//<editor-fold desc="价格列表">
    public function  pagePrice($inPath){
        //头部需求数
        $this->init();
        $inPath[2]='reprice';        
        $this->urlParams =zbj_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $page = isset($this->urlParams['page'])? (int)$this->urlParams['page']: 1;
        $priceparams = 500;
        $limit = 20;
        //登录用户信息显示
        if ($this->_userid) {
            $mdlMbCount = zbj_model_api::get('zbj_model_mb_count');
            $aUserInfo = $mdlMbCount->selectOne(array('user_id' => $this->_userid), 'expenditure,t_ok_num,bid_win_num,income,user_id,nickname');
            $this->aParams['userinfo'] = $aUserInfo;
        }  
        $params = array(
            'cat' => 'req',
            'size' => $limit,
            'page' => $page-1,
            'trustfilter' => 'trusted',
            'statusfilter' =>'closed',
            'sort' => array('!starttime'),
        );
        //价格筛选
        if(!empty($priceparams) && $priceparams != 0){
            $params['minprice'] = $priceparams;
			$params['maxprice'] = $priceparams;  
        }      
        $tasksearchlist = $this->oSe->search($params);
        $totalSize = min($tasksearchlist['total_size'],500*$limit);
        $queryString =  $_SERVER['QUERY_STRING'];
        $tplParams['query_string'] = trim($tplParams['query_string'],'&');
        if($totalSize >0){ 
            $pagebar = $this->PageBar($totalSize, 20, $page, $inPath,$style = 'style5', $queryString, 'www'); 
        }        
        $this->aParams['pagebar'] = $pagebar;
        $this->aParams['tasksearchlist'] = $tasksearchlist['items'];
        //热门标签
        $mdlTag = zbj_model_api::get('zbj_model_mk_tag');
        $mdlTag->setPage(1);
        $mdlTag->setCount(true);		  
        $mdlTag->setLimit(10);	
        $orderby = 'ORDER BY sort DESC, follow_num DESC';
        $condition = array(
            'is_hide' => 0,
            'is_merge' => 0,
            'is_enabled' => 1,
            'type' => 0,
        );
        $hottagsinfo = $mdlTag->select($condition, 'tag_id,tag_name', '', $orderby)->items;
        $this->aParams['hottagsinfo'] = $hottagsinfo;
        $this->aParams['nav'] = 'price';
        //取威客
		 $cms=new zbj_lib_cms();
        $recusers = $cms->getRecommend(296);
    	if (!empty($recusers['list'])) {
    		if (count($recusers['list']) > 12) {
	    		$aRkey = array_rand($recusers['list'], 12);
	    		if (!empty($aRkey)) {
	    			foreach ($aRkey as $value) {
	    				$aRs[] = $recusers['list'][$value];
	    			}
	    		}
    		} else {
    			$aRs = $recusers['list'];
    			shuffle($aRs);
    		}
        }        
        $this->aParams['recusers'] = $aRs;
        $this->aParams['header_argv']['head_title'] = "付费任务需求_立刻发布付费任务需求_800万专业威客帮你解决!";
		$this->aParams['header_argv']['keywords'] = "付费任务,威客任务，猪八戒网";
		$this->aParams['header_argv']['description'] = "猪八戒网全球最大创意服务平台，提供不同价格区间用户付费需求任务，立即参与付费任务，轻松赚钱，立即发布付费任务，800万专业威客帮你解决！";            
        return $this->render('main/price.html', $this->aParams);
        
    }
//</editor-fold>
	/**
	 * 保存筛选
	 */
	public function pagefiltersave(){
		//define('DEBUG', true);
		$_REQUEST = zbj_lib_BaseUtils::saddslashes($_REQUEST);
		$sFilter = $_REQUEST['filter'];	
        if ($this->_userid){
        	$filter=array('e','h','w','c','s','t');
	       if (!empty($sFilter)){	       		
	       		$aFilter=explode('&', $sFilter);
	       		$aData=array('e'=>0,'h'=>0,'w'=>0,'c'=>0,'s'=>0,'t'=>0);
	       		if (is_array($aFilter)){
	       			foreach ($aFilter as $value){
	       				$data=explode('=', $value);
	       				$aData[$data[0]]=$data[1];
	       			}
	       		}
	       		$updata='';
	       		foreach ($aData as $k=>$v){
	       			if (in_array($k, $filter)){
	       				$updata.=','.$k.'='.$v;
	       			}
	       		}	
	       		$userId=$this->_userid;   
	       		$date=date('Y-m-d');    
	       		$dateline=$this->_time;		       			       				       		
       			$mdlfilter=zbj_model_api::get('zbj_model_lg_taskt6filter');
       			$info = $mdlfilter->selectOne("user_id=$userId",'user_id,dateline');	
       			if (empty($info)||$info==false ){
       				$mdlfilter->set('user_id',$userId);
       				$result=$mdlfilter->save(false);
       				if ($result){
       					$info = $mdlfilter->update("user_id=$userId","dateymd='$date'$updata,dateline='$dateline'");	
       				}else {
       					return $this->alert(array('state'=>0,'msg'=>'保存失败'),1);
       				}
       			}else{
       				$cha=$dateline-$info['dateline'];
       				if ($cha<5){
       					return $this->alert(array('state'=>0,'msg'=>'你已经保存过了'),1);
       				}
       				$info = $mdlfilter->update("user_id=$userId","dateymd='$date'$updata,dateline='$dateline'");	
       			}
       			if ($info){
       				return $this->alert(array('state'=>1,'msg'=>'保存成功'),1);
       			}else {
       				return $this->alert(array('state'=>0,'msg'=>'保存失败'),1);
       			}     		       		
	       }else {
	       		return $this->alert(array('state'=>0,'msg'=>'未收到需要保存的筛选'),1);
	       }
        }else{
        	return $this->alert(array('state'=>0,'msg'=>'请登录在保存'),1);
        }
	}
    
//<editor-fold desc="日历ajax请求">
    public function  pageReCalendar($inPath){
        $this->urlParams =zbj_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $page = isset($this->urlParams['page'])? (int)$this->urlParams['page']: 1;
        $post = zbj_lib_BaseUtils::saddslashes($_POST);        
        $timeparams = $post['t'];
        if(!empty($timeparams)){
            $tarr = explode('/', $timeparams);
            if($tarr[0] == 'null'){
                $tarr[0] = '1970';
            }
            if($tarr[1] == 'null'){
                $tarr[1] = '01';
            }
            if($tarr[2] == 'null'){
                $tarr[2] = '01';
            }
            $this->aParams['year'] = $tarr[0];
            $this->aParams['month'] = $tarr[1];
            $this->aParams['day'] = $tarr[2];
        }        
        $limit = 20; 
        $params = array(
            'cat' => 'req',
            'size' => $limit,
            'page' => $page-1,
            'trustfilter' => 'trusted',
            'sort' => array('!starttime'),
        );
        //时间筛选
        if(!empty($timeparams)){
            $begintime = strtotime($timeparams);
            $endtime = strtotime(date('Y-m-d',$begintime + 86400));
            $params['earlieststarttime']=$begintime;
            $params['lateststarttime']=$endtime;        
        }
        $tasksearchlist = $this->oSe->search($params);
        $totalSize = min($tasksearchlist['total_size'],500*$limit);
        $queryString =  $_SERVER['QUERY_STRING'];
        $tplParams['query_string'] = trim($tplParams['query_string'],'&');
        if($totalSize >0){ 
            $pagebar = $this->PageBar($totalSize, 20, $page, $inPath,$style = 'style5', $queryString, 'www'); 
        }        
        $this->aParams['pagebar'] = $pagebar;
        $this->aParams['tasksearchlist'] = $tasksearchlist['items'];
        $html = $this->render('main/moudle/recalendar.html', $this->aParams);
        if (zbj_lib_BaseUtils::isAjax()) {
            $data = array(
                'state'=>1,
                'msg'=>$html
            );
            return $this->json($data);
        } else {
            return $html;
        }        
    }
//</editor-fold>  
  
//<editor-fold desc="价格ajax请求">
    public function  pageRePrice($inPath){
        $this->urlParams =zbj_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $page = isset($this->urlParams['page'])? (int)$this->urlParams['page']: 1;
        $post = zbj_lib_BaseUtils::saddslashes($_POST);
        $priceparams = isset($post['pe'])?$post['pe']:100;       
        $limit = 20; 
        $params = array(
            'cat' => 'req',
            'size' => $limit,
            'page' => $page-1,
            'trustfilter' => 'trusted',
            'statusfilter' =>'closed',
            'sort' => array('!starttime'),
        );
        //价格筛选
        if(!empty($priceparams) && $priceparams != 0){
            $params['minprice'] = $priceparams;
			$params['maxprice'] = $priceparams;  
        }
        if($priceparams == 0){
            $params['typefilter']='free';
            $params['sort'] =array('!starttime','!bids') ;
        }  
        $tasksearchlist = $this->oSe->search($params);
        $totalSize = min($tasksearchlist['total_size'],500*$limit);
        $queryString =  $_SERVER['QUERY_STRING'];
        $tplParams['query_string'] = trim($tplParams['query_string'],'&');
        if($totalSize >0){ 
            $pagebar = $this->PageBar($totalSize, 20, $page, $inPath,$style = 'style5', $queryString, 'www'); 
        }        
        $this->aParams['pagebar'] = $pagebar;
        $this->aParams['tasksearchlist'] = $tasksearchlist['items'];
        $html = $this->render('main/moudle/reprice.html', $this->aParams);
        if (zbj_lib_BaseUtils::isAjax()) {
            $data = array(
                'state'=>1,
                'msg'=>$html
            );
            return $this->json($data);
        } else {
            return $html;
        }        
    }
//</editor-fold>    
    
// <editor-fold defaultstate="collapsed" desc="威客换一换">
    public function pageReUserList(){
        $cms=new zbj_lib_cms();
        $recusers = $cms->getRecommend(296);
    	if (!empty($recusers['list'])) {
    		if (count($recusers['list']) > 12) {
	    		$aRkey = array_rand($recusers['list'], 12);
	    		if (!empty($aRkey)) {
	    			foreach ($aRkey as $value) {
	    				$aRs[] = $recusers['list'][$value];
	    			}
	    		}
    		} else {
    			$aRs = $recusers['list'];
    			shuffle($aRs);
    		}
	    	$params['recusers'] = $aRs;
	    	$html = $this->render('main/moudle/recuser.html', $params);
	    	if (zbj_lib_BaseUtils::isAjax()) {
	    		$data = array(
	    			'state'=>1,
	    			'msg'=>$html
	    		);
	    		return $this->json($data);
	    	} else {
	    		return $html;
	    	}
        }
    }
// </editor-fold>    
    	/**
	 * 返回json数据
	 * @param unknown_type $data
	 */
	public function json($data) {
		$jsonpcallback = $_REQUEST['jsonpcallback'];
		if (empty($jsonpcallback)) {
			return json_encode($data);
		} else {
			return $jsonpcallback.'('.json_encode($data).')';
		}
	}
	/**
	 * 需求地图
	 * @param unknown_type $inPath
	 */
	public function pageTaskMap($inPath){
		//define('DEBUG', true);
		$this->init();
		$domain=zbj_lib_Constant::JS_URL;
		$this->aParams['nav'] = 'map';
		$this->aParams['header_argv']['head_title'] = "任务信息地图-全国最新任务地图 -猪八戒网";
		$this->aParams['header_argv']['keywords'] = "任务信息地图";
		$this->aParams['header_argv']['description'] = "猪八戒网（ZhuBaJie.Com）任务信息地图找雇主任务，全新百度地图查询功能，整合全国最新任务地图，快速定位，价格详情，雇主需求直观选择，详实的地理位置和雇主实时需求信息及悬赏价格，更方便快捷，利用百度地图找任务就上猪八戒网！";
		$this->aParams['header_argv']['css'] = array('pub.css', 'main.css');
		$this->aParams['header_argv']['diy_header'] = '<link rel="stylesheet" type="text/css" href="'.$domain.'/v/map.css">';						
		$this->aParams['footer_argv']['diy_footer'] = '<script type="text/javascript" src="http://api.map.baidu.com/api?v=1.4"></script><script type="text/javascript" src="'.$domain.'/t5s/task/js/map.js"></script>';
		return $this->render('main/map.html',$this->aParams);		
	}
	
	public function pageGetMapData($inPath) {
		$path = $this->getUrlParams($inPath);
		$type = zbj_lib_BaseUtils::getStr($path['type'], 'int');	
		$REQUEST=zbj_lib_BaseUtils::saddslashes($_REQUEST);		
		switch ($type) {
			case 1:
				$data=$this->getMapTask($REQUEST);
				return $data;
				break;
			case 2:
				$data =  $this->getMapTalent($REQUEST);
				return $this->alert($data, 1);
				break;
			default:
				$data=$this->getMapTask($REQUEST);
				return $data;
				break;
		}
	}
	/**
	 * 获取需求
	 * 标签：tid int 
	 * 类型：e	int	2 免费 	3付费
	 * 赏金：h	int 2 未支付赏金 	3 已支付赏金 	
	 * 状态：s	int 2 投标中 	4 交易成功
	 * 搜索：kw
	 * @param array $parames
	 */
	private function getMapTask($parames=array()) {
		$limit = 200;
		$state = 0;
		$var = array();
		$filter = array();
		//筛选条件
		$tid = zbj_lib_BaseUtils::getStr($parames['tid'], 'int'); //需求虚拟分类id
		$amoutType = zbj_lib_BaseUtils::getStr($parames['e'], 'int'); //付费 免费
		$trunst = zbj_lib_BaseUtils::getStr($parames['h'], 'int'); //支付状态
		$status = zbj_lib_BaseUtils::getStr($parames['s'], 'int'); // 交易状态
		$pointTop = zbj_lib_BaseUtils::getStr($parames['a']);//顶点坐标
		$pointDown = zbj_lib_BaseUtils::getStr($parames['b']);//低点坐标
		$page = zbj_lib_BaseUtils::getStr($parames['page'], 'int'); //标签
		$page = $page-1;
		$sKw = htmlspecialchars($parames['kw']);

		$params = array(
			'cat'=>'req',
			'size'=>$limit,
			'page'=>$page
		);
		if (!empty($sKw)) {
			$params['query'] = $sKw;
		}
		if ($tid!=0) {
			$tags = array($tid);
			$params['catalogidtreefilter'] = $tags;
			$filter['tid'] = $tid;
		}
		//赏金状态
		if ($amoutType!=0) {
			switch($amoutType){
				case 2:
					$params['typefilter'] = 'free';
					$filter['e'] = $amoutType;
					break;
				case 3:
					$params['typefilter'] = 'paying';
					$filter['e'] = $amoutType;
					break;
			}			
		}
		//支付状态
		if ($trunst!=0) {
			switch($trunst){
				case 2:
					$params['trustfilter'] = 'none';
					$filter['h'] = $trunst;
					break;
				case 3:
					$params['trustfilter'] = 'trusted';
					$filter['h'] = $trunst;
					break;
			}
			
		}
		if ($status!=0) {
			switch($status){
				case 2:
					$params['statusfilter'] = 'open';
					$filter['s'] = $status;
					break;
				case 4:
					$params['statusfilter'] = 'closed';
					$filter['s'] = $status;
					break;
			}
		}
		if ($pointTop){
			$params['pointTop']=$pointTop;
		}	
		if ($pointDown)	{
			$params['pointDown']=$pointDown;
		}
		//$this->oSe->setDebug(true);
		$rs = $this->oSe->search($params);
		$aTask = $rs['items'];
		$total = $rs['total_size'];
		
		$task=array();
		if ($aTask){
			foreach ($aTask as $key=>$value){
				if ($value['longitude']!=0 ||$value['latitude']!=0){
					$obj=array(
						'uid'=>$value['taskId'],
						'userid'=>$value['pubUserId'],
						'lng'=>$value['longitude'],
						'lat'=>$value['latitude'],
						'name'=>$value['pubNickname'],
						'link'=>zbj_lib_Constant::HOME_URL.'/'.$value['pubUserId'].'/task/',
						'img'=>$this->render('main/moudle/headImg.html',array('userid'=>$value['pubUserId'])),
						'title'=>$value['title'],
						'url'=>zbj_lib_Constant::TASK_URL.'/'.$value['taskId'],
						'rmb'=>$value['price'],
						'time'=>$this->gettime($value['pubTime']),
						'number'=>$value['workCount'],
					);	
					$task[]=$obj;			
				}			
			}
			$output=$this->alert(array('state'=>1,'data'=>$task,'total'=>$total),1);
		}else {
			$output=$this->alert(array('state'=>0),1);
		}
		
		return $output;
	}
	public function gettime($time){
		$nowtime = time();
		$cha=$nowtime-$time;
		if ($cha == 0) {
			return '刚刚';
		}
		if ($cha>0 and $cha<60) {
		      	$data=$cha."秒钟前";
		      }elseif($cha>=60 and $cha<3600){
		      	$cha=(int)($cha/60);
		      	$data=$cha."分钟前";
		      }elseif($cha>=3600 and $cha<86400){
		      	$cha=(int)($cha/3600);
		      	$data=$cha."小时前";
		      }else{
		        $data=date('Y-m-d',$time);
		      }
		  return $data;  		
	}
	
	/**
	 * 返回威客数据
	 * $parames array() 请求数组
	 * 认证：t int 1 个人认证 		2企业认证
	 * 其他：o int 1 消费者保障	 2 近期完成交易 
	 * 威客排序 ：s int 1能力等级由高到低	 2由低到高	7近三月收入收入有多到少 	8收入由少到多	3 好评率由高到低	 4由低到高
	 * kw 搜索
	 */	
	private function getMapTalent($parames=array()) {
		$limit = 200;
		$state = 0;
		$var = array();
		$filter = array();
		
		
		//筛选条件
		$tid = zbj_lib_BaseUtils::getStr($parames['tid'], 'int'); //标签
		$iAttestation = zbj_lib_BaseUtils::getStr($_GET['t'], 'int'); //认证类型
		$iOther = zbj_lib_BaseUtils::getStr($_GET['o'], 'int'); //其他		
		$sort = zbj_lib_BaseUtils::getStr($parames['s'], 'int');//排序
		$pointTop = zbj_lib_BaseUtils::getStr($parames['a']);//顶点坐标
		$pointDown = zbj_lib_BaseUtils::getStr($parames['b']);//低点坐标
		$page = zbj_lib_BaseUtils::getStr($parames['page'],'int');
		$page = $page-1;
		$sKw = htmlspecialchars($parames['kw']);
		$params = array(
			'cat'=>'user',
			'size'=>$limit,
			'page'=>$page
		);
		
		if (!empty($sKw)) {
			$params['query'] = $sKw;
		}
		
		if ($tid!=0) {
			$tags = array($tid);
			$params['catalogidtreefilter'] = $tags;
			$filter['tid'] = $tid;
		}
		if ($iAttestation!=0) {
			switch ($iAttestation) {
				case 1://个人
					$params['typefilter'] = 'indiv';
					break;
				case 2://企业
					$params['typefilter'] = 'firm';
					break;
			}
			$filter['t'] = $iAttestation;
		}
		if ($iOther!=0) {
			switch ($iOther) {
				case 1://消费者保障
					$params['guaranteefilter'] = 1;
					break;
				case 2://近期有交易
					$params['transactionfilter'] = '1';
					break;
			}
			$filter['o'] = $iOther;
		}
		
		$aSort = array();
		if ($sort) {
			switch ($sort) {
				case 1:
					$aSort[] = '!level';
					break;
				case 2:
					$aSort[] = 'level';
					break;
				case 7:
					$aSort[] = '!income';
					break;
				case 8:
					$aSort[] = 'income';
					break;
				case 3:
					$aSort[] = '!satisfaction';
					break;
				case 4:
					$aSort[] = 'satisfaction';
					break;
			}
			$params['sort']=$aSort;
			$filter['sort'] = $sort;
		}
		if ($pointTop){
			$params['pointTop']=$pointTop;
		}	
		if ($pointDown)	{
			$params['pointDown']=$pointDown;
		}
		$rs = $this->oSe->search($params);
		$aUser = $rs['items'];
		$total = $rs['total_size'];
		$output = array();
		$data = array();
		if (!empty($aUser)) {
			$state = 1;
			foreach ($aUser as $key=>$value) {
				if ($value['longitude']!=0 || $value['latitude']!=0){
					$name = isset($value['brandName'])?$value['brandName']:$value['nickName'];
					$like = '';
					$tags = $value['expertTagName'];
					$sTag = '';
					if (!empty($tags)) {
						foreach ($tags as $key=>$val) {
							if ($key < 3) {
								$sTag .= $val.'&nbsp;|&nbsp;';
							}
						}
					}
					$sTag = substr($sTag, 0,strlen($sTag)-1);
					
					$obj = array(
						'uid'=>$value['userId'],
						'lng'=>$value['longitude'],
						'lat'=>$value['latitude'],
						'homeLink'=>zbj_lib_Constant::HOME_URL.'/'.$value['userId'].'/',
						'headImg'=>$this->render('main/moudle/headImg.html', array('userid'=>$value['userId'])),
						'name'=>$name,
						'commentLink'=>zbj_lib_Constant::HOME_URL.'/ability/index-uid-'.$value['userId'].'.html',
						'levelImg'=>$this->render('main/moudle/leveImg.html', array('ability'=>$value['ability'])),
						'income'=>$value['lastQuarterIncome'],
						'good'=>($value['favCommentRatio']*100).'%',
			            'like'=>$sTag,
						'usertype'=>$value['userType'],
						'guarantee'=>$value['guarantee']
					);
					$output[] = $obj;
					$user = new zbj_service_user();
					$user->getAbilityLevel();
				}
			}
		}
		
		//返回的数据
		$data['state'] = $state;
		$data['data'] = $output;
		$data['total'] = $total;
		return $data;
	}
	private function getRegion(){
		$cach_name = 'www.app.controller.list.province_list';
		$province_list = $this->cache->get($cach_name);
		if (empty($province_list)){
			$mdl_region = zbj_model_api::get('zbj_model_mb_region');
			$condition = array(
				'level'	=> 2,	
			);
			$item = 'region_name,region_ename,region_id';
			$province_list = $mdl_region->select($condition,$item)->items;
			if (!empty($province_list)){
				$province_list_byid = array();
				foreach ($province_list as $province){
					$province_list_byid[$province['region_id']] = $province;
				}
				$this->cache->set($cach_name,$province_list_byid,3600*24);
				$province_list = $province_list_byid;
			}
		}
		return $province_list;
	}
	//设置cache_control
	private function setHeaderCache($cache_time = 600){
		$expires = gmdate("D, d M Y H:i:s", time() + $cache_time) . " GMT"; 
		header("Cache-Control: public");
		header("Cache-Control: max-age=$cache_time");
		header("Expires: $expires");
	}
}

