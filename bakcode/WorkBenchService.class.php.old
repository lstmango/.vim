<?php
use com\zhubajie\task\interfaces\WorkBenchServiceIf;
use com\zhubajie\task\dataobject\workbench\NodesResultDO;
use com\zhubajie\task\dataobject\workbench\ResultMsgDO;
use com\zhubajie\task\dataobject\workbench\WorkBenchResultDO;
use com\zhubajie\task\dataobject\workbench\WorkBenchBatchResultDO;
use com\zhubajie\task\dataobject\workbench\WorkBenchParamsDO;
use com\zhubajie\task\dataobject\workbench\TplRowResultDO;
use com\zhubajie\task\dataobject\workbench\TplResultDO;
use com\zhubajie\task\dataobject\workbench\UpdateResultDO;
use com\zhubajie\task\dataobject\workbench\GetResultDO;

class api_WorkBenchService1 extends service_abstract implements WorkBenchServiceIf {

	/**
	 * 获取稿件的工作台数据
	 * */
	public function getWorkBench($task_id,$work_id){
           $result = new WorkBenchResultDO();
           $res_nodes = new NodesResultDO();
           $msg = new ResultMsgDO();
           
           try {
               $srvWorkBench = new service_workbench();
               $res_nodes = $srvWorkBench->queryWorkBench(array($work_id),$task_id);
               $msg->success = true;
               $msg->code = 0;
               $result->data = $res_nodes[$work_id];
            }catch(Exception $e) {
                $msg->success = false;
                $msg->code = $e->getCode();
                $msg->message = $e->getMessage();
            }
            $result->msg = $msg;
            return $result;
  	}
  
	/**
	 * 获取稿件的工作台数据
	 * */
	public function getWorkBenchBatch($task_id, $work_ids){
           $result = new WorkBenchBatchResultDO();
          
           try {
               $srvWorkBench = new service_workbench();
               $result->success = true;
               $result->code = 0;
               $result->data = $srvWorkBench->queryWorkBench((array)$work_ids,$task_id);
            }catch(Exception $e) {
                $result->success = false;
                $result->code = $e->getCode();
                $result->message = $e->getMessage();
            }
            
            return $result;
  	}
  	
	/**
	 * 获取工作台模版
	 * */
  	public function getTmpls() {
           $result = new TplResultDO();
           $res_nodes = new TplRowResultDO();
           $msg = new ResultMsgDO();
           
           try {
               $srvWorkBench = new service_workbench_template();
               $res_nodes = $srvWorkBench->getAllTemplates();
               $msg->success = true;
               $msg->code = 0;
               $result->data = $res_nodes;
            }catch(Exception $e) {
                $msg->success = false;
                $msg->code = $e->getCode();
                $msg->message = $e->getMessage();
            }
            $result->msg = $msg;
            return $result;
  	}
	
	/**
	 * 更新工作台模版
	 * */
  	public function updateTmpl($category_id,$tpl_id) {
           $result = new UpdateResultDO();
           $msg = new ResultMsgDO();
           try {
           		$srvWorkBench = new service_workbench_template();
               	$flag = $srvWorkBench->setCategoryTemplate($category_id,$tpl_id);

               	$msg->success = true;
               	$msg->code = 0;
               	$result->flag = $flag;
            }catch(Exception $e) {
                $msg->success = false;
                $msg->code = $e->getCode();
                $msg->message = $e->getMessage();
            }
            $result->msg = $msg;
            return $result;
  	}
  	
  	/**
	 * 根据分类ID获取工作台模版
	 * */
	public function getTmplByCategoryID($category_id) {
           $result = new GetResultDO();
           $msg = new ResultMsgDO();
           try {
              	$srvWorkBench = new service_workbench_template();
                $tplid = $srvWorkBench->getTmplByCategoryID($category_id);
                // throw new Exception($tplid);

                $msg->success = true;
                $msg->code = 0;
                $result->tplid = $tplid;
            }catch(Exception $e) {
                $msg->success = false;
                $msg->code = $e->getCode();
                $msg->message = $e->getMessage();
            }
            $result->msg = $msg;
            return $result;
  	}
}
